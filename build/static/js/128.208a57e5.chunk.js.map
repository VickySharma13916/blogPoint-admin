{"version":3,"sources":["containers/Courses/index.js","components/IconButton/index.js","components/Form/Input.js","components/DataTable/index.js","components/DisplayText/index.js","components/ConfirmDialog/index.js","redux/actions/courseActions.js","redux/actionCreators/courseCreators.js","partials/Page/Courses/ListCourses.js","partials/Page/Courses/coursetab/accordionSection/ListAccordion.js","partials/Page/Courses/coursetab/trainingProfile/ListTrainingProfile.js","partials/Page/Courses/coursetab/testimonial/ListTestimonial.js","partials/Page/Courses/coursetab/courseJoinImageSlider/ListJoinImageSlider.js","partials/Page/Courses/coursetab/courseOtherLink/ListOtherLink.js","partials/Page/Courses/coursetab/briefAbout/ListBriefAbout.js","partials/Page/Courses/coursetab/viewCourse.js"],"names":["Courses","history","useHistory","path","useRouteMatch","useState","refresh","setRefresh","id","title","className","children","uuidv4","exact","Icon","icon","size","extraProps","type","props","IconButton","variant","onClick","isLoading","disabled","defaultProps","Input","React","forwardRef","ref","onChange","onBlur","label","error","isClearable","hint","rest","reset","setReset","inputType","setInputType","placeholder","step","temp","defaultValue","value","restProps","htmlFor","target","style","fontSize","color","tableIcons","FirstPage","LastPage","NextPage","PreviousPage","SortArrow","DataTable","loading","columns","actions","components","onRowClick","options","selectedRow","getList","downloadcsv","search","downloadExcel","filters","data","filterOptions","resetFilters","setFilters","resetBtn","tableRef","createRef","openFilters","setOpenFilters","tableProps","icons","boxShadow","localization","toolbar","searchTooltip","searchPlaceholder","showTitle","filtering","draggable","actionsColumnIndex","pageSize","emptyRowsWhenPaging","pageSizeOptions","query","Promise","resolve","reject","getDataTableQueryParams","result","undefined","docs","page","totalCount","totalDocs","rowStyle","rowData","backgroundColor","handleReset","useEffect","exportType","exportFromJSON","types","csv","newData","map","transformedData","Object","values","reduce","acc","obj","transformedObject","_id","Link","fileName","xls","DisplayText","htmlContent","preview","handlePreview","contentRef","useRef","sanitizedHTML","DOMPurify","sanitize","current","innerHTML","querySelectorAll","forEach","preTag","html","textContent","DOMParser","parseFromString","body","divTag","document","createElement","parentNode","replaceChild","whiteSpace","wordBreak","border","borderRadius","ConfirmDialog","show","setShow","message","onConfirm","getReason","bodyHtml","loadingBtnText","footer","submitting","setSubmitting","reason","setReason","handleClose","handleOnConfirm","a","onHide","backdrop","keyboard","Header","closeButton","Title","Body","dangerouslySetInnerHTML","__html","name","e","Footer","animation","length","PostImageCourseListBegin","COURSE_TYPES","POST_IMAGE_COURSE_LIST_BEGIN","PostImageCourseListSuccess","POST_IMAGE_COURSE_LIST_SUCCESS","payload","PostImageCourseListFailure","POST_IMAGE_COURSE_LIST_FAILURE","DeleteCourseListBegin","DELETE_COURSE_LIST_BEGIN","DeleteCourseListSuccess","DELETE_COURSE_LIST_SUCCESS","DeleteCourseListFailure","DELETE_COURSE_LIST_FAILURE","UpdateCourseListBegin","UPDATE_COURSE_LIST_BEGIN","UpdateCourseListSuccess","UPDATE_COURSE_LIST_SUCCESS","UpdateCourseListFailure","UPDATE_COURSE_LIST_FAILURE","performGetCourseList","dispatch","resetSnack","GET_ALL_COURSE_LIST_BEGIN","axios","get","BASE_URL","GET_ALL_COURSE_LIST_SUCCESS","showSnack","msg","getCourseListFailure","GET_ALL_COURSE_LIST_FAILURE","performPostImageCourse","post","performPostCourse","performPostAccordionCourse","courseId","performUpdateCourse","put","performUpdateAccordionCourse","accordionId","performDeleteCourse","delete","performDeleteAccordionCourse","connect","state","fetching","course","deleteCourse","showCDialog","setShowCDialog","setData","deletingUser","fetchData","status","isMobile","useWindowSize","createRelativePath","link","FRONTEND_URL","toLowerCase","replace","MdAdd","push","field","render","src","BACKEND_URL","courseImage","courseName","metaTitle","metaDescription","authorLink","coursesType","coursesLink","href","rel","courseStartingDate","width","statusColor","statusText","_","console","log","Action","menu","iconSize","homepage","deleteAccordionCourse","listData","Card","AccordionTitle","maxWidth","minWidth","height","overflow","AccordionDescription","DropdownMenu","trainerName","trainerDesignation","trainerCompany","trainerImage","studentName","paddingLeft","studentDescription","studentImage","joinDescription","joinImage","CourseOtherName","CourseOtherLink","AboutTitle","AboutDescription","AboutImage","key","setKey","userData","location","Page","goBack","Tabs","activeKey","onSelect","k","Tab","eventKey","accordionSections","trainerProfiles","testimonials","joinCourseImageSlider","courseOtherLinks","briefAbout"],"mappings":"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","file":"static/js/128.208a57e5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Route, useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Page from \"../../components/Page\";\r\nimport ListCourses from \"../../partials/Page/Courses/ListCourses\";\r\nimport ViewCourse from \"../../partials/Page/Courses/coursetab/viewCourse\";\r\n\r\nconst Courses = () => {\r\n  const history = useHistory();\r\n  const { path } = useRouteMatch();\r\n  const [refresh, setRefresh] = useState(\"\");\r\n\r\n  return (\r\n    <Page id=\"page--Courses\" title=\"Courses\">\r\n      <div className=\"d-flex align-items-start mb-3\">\r\n        <h1 className=\"m-0\">Courses</h1>\r\n      </div>\r\n      <Route\r\n        path={`${path}/`}\r\n        children={\r\n          <ListCourses\r\n            refresh={refresh}\r\n            setRefresh={() => setRefresh(uuidv4())}\r\n            history={history}\r\n          />\r\n        }\r\n      />\r\n      <Route\r\n        exact\r\n        path={`${path}/:id/viewCourse`}\r\n        children={\r\n          <ViewCourse refresh={() => setRefresh(uuidv4())} history={history} />\r\n        }\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Courses;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Icon = (icon, size = \"\") => {\r\n  const extraProps = {\r\n    size: 22\r\n  };\r\n  if (size === 'lg') {\r\n    extraProps.size = 32;\r\n  } else if (size === 'sm') {\r\n    extraProps.size = 18;\r\n  }\r\n  return <icon.type {...icon.props} {...extraProps} />\r\n}\r\n\r\nconst IconButton = ({ variant, className, onClick, size, isLoading, disabled, children, icon }) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      className={`btn-icon ${size ? `btn-icon-${size}` : ''} ${isLoading ? `btn-icon-loading` : ''} ${className}`}\r\n      onClick={onClick}\r\n      size={size}\r\n      disabled={isLoading || disabled}\r\n    >\r\n      <span>{Icon(icon, size)}{children && <span>{children}</span>}</span>\r\n    </Button>\r\n  )\r\n}\r\n\r\nIconButton.propTypes = {\r\n  children: PropTypes.node,\r\n  variant: PropTypes.string,\r\n  className: PropTypes.string,\r\n  size: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  isLoading: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  icon: PropTypes.any,\r\n};\r\n\r\nIconButton.defaultProps = {\r\n  variant: \"default\",\r\n  className: \"\",\r\n  size: \"\",\r\n  onClick: () => null,\r\n  isLoading: false,\r\n  disabled: false,\r\n  icon: null\r\n}\r\n\r\nexport default IconButton;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { MdCancel } from \"react-icons/md\";\r\nimport { AiOutlineEyeInvisible, AiOutlineEye } from \"react-icons/ai\";\r\n\r\nimport IconButton from \"../IconButton\";\r\n\r\nconst Input = React.forwardRef(\r\n  (\r\n    {\r\n      className,\r\n      onChange,\r\n      onBlur,\r\n      label,\r\n      id,\r\n      error,\r\n      isClearable,\r\n      hint,\r\n      type,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const [reset, setReset] = useState(uuidv4());\r\n    const [inputType, setInputType] = useState(type);\r\n\r\n    const onClear = () => {\r\n      onChange({ target: { value: \"\" } });\r\n      setReset(uuidv4());\r\n    };\r\n\r\n    const restProps = () => {\r\n      const temp = { ...rest };\r\n      temp.defaultValue = temp.value || \"\";\r\n      delete temp.value;\r\n      return temp;\r\n    };\r\n\r\n    return (\r\n      <span\r\n        className={`d-inline-block w-100 position-relative pt-2 pb-4 input__wrapper ${\r\n          error ? \"error\" : \"\"\r\n        }`}\r\n        ref={ref}\r\n      >\r\n        <input\r\n          key={`input-${reset}`}\r\n          id={`input-${id}`}\r\n          type={inputType}\r\n          className={`${className}${isClearable ? \" input-clearable\" : \"\"}`}\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          placeholder={label}\r\n          step=\"any\"\r\n          {...restProps()}\r\n        />\r\n        <label htmlFor={`input-${id}`}>{label}</label>\r\n        <span className=\"input-error\">{error}</span>\r\n        {isClearable && (\r\n          <MdCancel className=\"input-clear-btn\" size={18} onClick={onClear} />\r\n        )}\r\n        {type === \"password\" && (\r\n          <IconButton\r\n            icon={\r\n              inputType === \"password\" ? (\r\n                <AiOutlineEyeInvisible />\r\n              ) : (\r\n                <AiOutlineEye />\r\n              )\r\n            }\r\n            variant=\"outline-link\"\r\n            onClick={() =>\r\n              setInputType(inputType === \"password\" ? \"text\" : \"password\")\r\n            }\r\n            className=\"p-0 m-0 position-absolute btn--show-password\"\r\n          />\r\n        )}\r\n        {hint !== \"\" && (\r\n          <span style={{ fontSize: \"12px\", color: \"#c1b1b1\" }}>{hint}</span>\r\n        )}\r\n      </span>\r\n    );\r\n  }\r\n);\r\n\r\nInput.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  label: PropTypes.string,\r\n  id: PropTypes.string,\r\n  error: PropTypes.string,\r\n  isClearable: PropTypes.bool,\r\n  type: PropTypes.string,\r\n  hint: PropTypes.string,\r\n};\r\n\r\nInput.defaultProps = {\r\n  className: \"\",\r\n  onChange: () => null,\r\n  onBlur: () => null,\r\n  label: \"\",\r\n  id: uuidv4(),\r\n  error: \"\",\r\n  isClearable: false,\r\n  type: \"text\",\r\n  hint: \"\",\r\n};\r\n\r\nexport default Input;\r\n","import MaterialTable from \"@material-table/core\";\r\nimport exportFromJSON from \"export-from-json\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { createRef, forwardRef, useEffect, useState } from \"react\";\r\nimport {\r\n  MdArrowUpward,\r\n  MdChevronLeft,\r\n  MdChevronRight,\r\n  MdDownload,\r\n  MdFilterAlt,\r\n  MdFirstPage,\r\n  MdLastPage,\r\n  MdRefresh,\r\n} from \"react-icons/md\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { getDataTableQueryParams } from \"../../utils/index\";\r\nimport IconButton from \"../IconButton\";\r\n\r\nconst tableIcons = {\r\n  FirstPage: forwardRef((props, ref) => <MdFirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <MdLastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <MdChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <MdChevronLeft {...props} ref={ref} />\r\n  )),\r\n  SortArrow: forwardRef((props, ref) => <MdArrowUpward {...props} ref={ref} />),\r\n};\r\n\r\nconst DataTable = ({\r\n  loading,\r\n  columns,\r\n  actions,\r\n  components,\r\n  onRowClick,\r\n  options,\r\n  selectedRow,\r\n  getList,\r\n  search,\r\n  downloadcsv,\r\n  downloadExcel,\r\n  filters,\r\n  filterOptions,\r\n  data,\r\n  setFilters,\r\n  resetFilters,\r\n  refresh,\r\n  resetBtn,\r\n}) => {\r\n  const tableRef = createRef();\r\n  const [reset, setReset] = useState(uuidv4());\r\n  const [openFilters, setOpenFilters] = useState(false);\r\n  const tableProps = {\r\n    isLoading: loading,\r\n    icons: tableIcons,\r\n    style: {\r\n      boxShadow: \"none\",\r\n    },\r\n    localization: {\r\n      toolbar: {\r\n        searchTooltip: \"Search\",\r\n        searchPlaceholder: \"Search\",\r\n      },\r\n    },\r\n    options: {\r\n      showTitle: false,\r\n      search: true,\r\n      toolbar: true,\r\n      filtering: openFilters,\r\n      draggable: false,\r\n      actionsColumnIndex: -1,\r\n      pageSize: 10,\r\n      emptyRowsWhenPaging: false, // To avoid of having empty rows\r\n      pageSizeOptions: [10, 30, 50, 100, 500],\r\n      ...options,\r\n    },\r\n    columns: columns,\r\n    data: data\r\n      ? data\r\n      : (query) =>\r\n          new Promise(async (resolve, reject) => {\r\n            try {\r\n              let result = await getList(getDataTableQueryParams(query));\r\n              if (!result.data) {\r\n                return reject();\r\n              }\r\n              return resolve({\r\n                data:\r\n                  result.data.docs !== undefined\r\n                    ? result.data.docs\r\n                    : result.data,\r\n                page: result.data.page !== undefined ? result.data.page - 1 : 0,\r\n                totalCount:\r\n                  result.data.totalDocs !== undefined\r\n                    ? result.data.totalDocs\r\n                    : 0, // this is the total count of rows or documents\r\n              });\r\n            } catch (err) {\r\n              return reject(err);\r\n            }\r\n          }),\r\n    actions: actions,\r\n    onRowClick: onRowClick,\r\n  };\r\n\r\n  if (components) {\r\n    tableProps.components = components;\r\n  }\r\n\r\n  if (onRowClick) {\r\n    tableProps.options = {\r\n      ...tableProps.options,\r\n      rowStyle: (rowData) => ({\r\n        backgroundColor:\r\n          selectedRow && selectedRow === rowData.id ? \"#f5f5f5\" : \"#FFF\",\r\n      }),\r\n      onRowClick: onRowClick,\r\n    };\r\n  }\r\n\r\n  const handleDownloadCSV = () => {\r\n    const fileName = \"CSVformat\";\r\n    const exportType = exportFromJSON.types.csv;\r\n    const newData = data.map(({ data, ...rest }) => {\r\n      const transformedData = data\r\n        ? Object.values(data).reduce((acc, obj) => ({ ...acc, ...obj }), {})\r\n        : {};\r\n      const transformedObject = {\r\n        _id: rest._id,\r\n        Link: rest.Link,\r\n        ...transformedData,\r\n      };\r\n      return data ? transformedObject : rest;\r\n    });\r\n    exportFromJSON({ data: newData, fileName, exportType });\r\n  };\r\n\r\n  const handleDownloadXLS = () => {\r\n    const fileName = \"ExcelFormat\";\r\n    const exportType = exportFromJSON.types.xls;\r\n    const newData = data.map(({ data, ...rest }) => {\r\n      const transformedData = data\r\n        ? Object.values(data).reduce((acc, obj) => ({ ...acc, ...obj }), {})\r\n        : {};\r\n      const transformedObject = {\r\n        _id: rest._id,\r\n        Link: rest.Link,\r\n        ...transformedData,\r\n      };\r\n      return data ? transformedObject : rest;\r\n    });\r\n    exportFromJSON({ data: newData, fileName, exportType });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    if (onRowClick) {\r\n      onRowClick(null);\r\n    }\r\n    resetFilters();\r\n    setReset(uuidv4());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (refresh) {\r\n      handleReset();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [refresh]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 d-flex flex-lg-row flex-column position-relative table-toolbar\">\r\n        <span className=\"d-flex flex-wrap zindex-dropdown end-0 gap-2 gap-lg-3 align-items-center justify-content-end ms-auto\">\r\n          {filters && (\r\n            <IconButton\r\n              icon={<MdFilterAlt />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={() => setOpenFilters(!openFilters)}\r\n              disabled={loading}\r\n            >\r\n              Filters\r\n            </IconButton>\r\n          )}\r\n\r\n          {resetBtn && (\r\n            <IconButton\r\n              icon={<MdRefresh />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleReset}\r\n              disabled={loading}\r\n            >\r\n              Reset\r\n            </IconButton>\r\n          )}\r\n          {downloadcsv && (\r\n            <IconButton\r\n              icon={<MdDownload />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleDownloadCSV}\r\n              disabled={loading}\r\n            >\r\n              CSV\r\n            </IconButton>\r\n          )}\r\n          {downloadExcel && (\r\n            <IconButton\r\n              icon={<MdDownload />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleDownloadXLS}\r\n              disabled={loading}\r\n            >\r\n              Excel\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      </div>\r\n\r\n      <MaterialTable\r\n        key={`data-table-${reset}`}\r\n        tableRef={tableRef}\r\n        {...tableProps}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nDataTable.propTypes = {\r\n  loading: PropTypes.bool,\r\n  columns: PropTypes.array.isRequired,\r\n  actions: PropTypes.array,\r\n  components: PropTypes.any,\r\n  onRowClick: PropTypes.any,\r\n  options: PropTypes.object,\r\n  selectedRow: PropTypes.string,\r\n  getList: PropTypes.func.isRequired,\r\n  search: PropTypes.bool,\r\n  filters: PropTypes.bool,\r\n  filterOptions: PropTypes.array,\r\n  setFilters: PropTypes.func,\r\n  resetFilters: PropTypes.func,\r\n  refresh: PropTypes.string,\r\n  resetBtn: PropTypes.bool,\r\n};\r\n\r\nDataTable.defaultProps = {\r\n  loading: false,\r\n  actions: [],\r\n  components: null,\r\n  onRowClick: null,\r\n  options: {},\r\n  selectedRow: null,\r\n  search: true,\r\n  filters: false,\r\n  filterOptions: [],\r\n  setFilters: () => null,\r\n  resetFilters: () => null,\r\n  refresh: null,\r\n  resetBtn: true,\r\n};\r\n\r\nexport default DataTable;\r\n","import DOMPurify from \"dompurify\";\nimport React, { useEffect, useRef } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { RxCross2 } from \"react-icons/rx\";\n\nconst DisplayText = ({ htmlContent, preview, handlePreview }) => {\n  const contentRef = useRef(null);\n  const convertHtmlToPlainText = (html) => {\n    const doc = new DOMParser().parseFromString(html, \"text/html\");\n    return doc.body.textContent || \"\";\n  };\n  useEffect(() => {\n    const sanitizedHTML = DOMPurify.sanitize(htmlContent);\n    contentRef.current.innerHTML = sanitizedHTML;\n    const preTags = contentRef.current.querySelectorAll(\"pre\");\n    preTags.forEach((preTag) => {\n      const textContent = convertHtmlToPlainText(preTag.innerHTML);\n      preTag.innerHTML = textContent;\n      const divTag = document.createElement(\"div\");\n      divTag.innerHTML = preTag.innerHTML;\n      preTag.parentNode.replaceChild(divTag, preTag);\n    });\n  }, [htmlContent]);\n\n  return (\n    <div className=\"position-relative\">\n      {preview && (\n        <div className=\"w-100 d-flex justify-content-end mb-2\">\n          <Button variant=\"primary\" onClick={() => handlePreview()}>\n            <RxCross2 />\n          </Button>\n        </div>\n      )}\n      <div\n        ref={contentRef}\n        style={{\n          whiteSpace: \"pre-wrap\",\n          wordBreak: \"break-word\",\n          border: \"1px solid grey\",\n          borderRadius: \"8px\",\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default DisplayText;\n","import React, { useState } from 'react';\r\nimport { Modal, Button, Spinner } from 'react-bootstrap';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Input from '../Form/Input';\r\n\r\nconst ConfirmDialog = ({ show, setShow, title, message, onConfirm, getReason, bodyHtml, loadingBtnText, footer }) => {\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [reason, setReason] = useState('');\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const handleOnConfirm = async () => {\r\n    setSubmitting(true);\r\n    await onConfirm(reason);\r\n    setSubmitting(false);\r\n    setShow(false);\r\n    setReason('');\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div dangerouslySetInnerHTML={{ __html: message }}></div>\r\n        {bodyHtml}\r\n        {getReason && (\r\n          <div>\r\n            <Input id=\"reason\" name=\"reason\" label=\"Reason\" value={reason} onChange={(e) => setReason(e.target.value)} />\r\n          </div>\r\n        )}\r\n      </Modal.Body>\r\n      {footer && (\r\n        <Modal.Footer>\r\n          <Button variant=\"default\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          {!getReason && (\r\n            <Button variant=\"danger\" onClick={handleOnConfirm}>\r\n              {!submitting && <span>Confirm</span>}\r\n              {submitting && (\r\n                <span>\r\n                  {loadingBtnText} <Spinner size=\"sm\" animation=\"border\" />\r\n                </span>\r\n              )}\r\n            </Button>\r\n          )}\r\n          {getReason && (\r\n            <Button disabled={reason === '' || reason.length <= 3} variant=\"danger\" onClick={handleOnConfirm}>\r\n              {!submitting && <span>Confirm</span>}\r\n              {submitting && (\r\n                <span>\r\n                  {loadingBtnText} <Spinner size=\"sm\" animation=\"border\" />\r\n                </span>\r\n              )}\r\n            </Button>\r\n          )}\r\n        </Modal.Footer>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nConfirmDialog.propTypes = {\r\n  show: PropTypes.bool,\r\n  setShow: PropTypes.func,\r\n  title: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onConfirm: PropTypes.func,\r\n  getReason: PropTypes.bool,\r\n  bodyHtml: PropTypes.node,\r\n  loadingBtnText: PropTypes.string,\r\n  footer: PropTypes.bool,\r\n};\r\n\r\nConfirmDialog.defaultProps = {\r\n  show: false,\r\n  setShow: () => null,\r\n  title: 'Give a title',\r\n  message: 'Your message here',\r\n  onConfirm: () => null,\r\n  getReason: false,\r\n  bodyHtml: <></>,\r\n  loadingBtnText: 'Deleting',\r\n  footer: true,\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import COURSE_TYPES from \"../types/courseTypes\";\n\nexport const resetState = () => ({\n  type: COURSE_TYPES.RESET_STATE,\n});\n\nexport const getCourseListBegin = () => ({\n  type: COURSE_TYPES.GET_ALL_COURSE_LIST_BEGIN,\n});\n\nexport const getCourseListSuccess = (data) => ({\n  type: COURSE_TYPES.GET_ALL_COURSE_LIST_SUCCESS,\n  payload: data,\n});\n\nexport const getCourseListFailure = (error) => ({\n  type: COURSE_TYPES.GET_ALL_COURSE_LIST_FAILURE,\n  payload: error,\n});\n\nexport const PostImageCourseListBegin = () => ({\n  type: COURSE_TYPES.POST_IMAGE_COURSE_LIST_BEGIN,\n});\n\nexport const PostImageCourseListSuccess = (data) => ({\n  type: COURSE_TYPES.POST_IMAGE_COURSE_LIST_SUCCESS,\n  payload: data,\n});\n\nexport const PostImageCourseListFailure = (error) => ({\n  type: COURSE_TYPES.POST_IMAGE_COURSE_LIST_FAILURE,\n  payload: error,\n});\n\nexport const DeleteCourseListBegin = () => ({\n  type: COURSE_TYPES.DELETE_COURSE_LIST_BEGIN,\n});\n\nexport const DeleteCourseListSuccess = (data) => ({\n  type: COURSE_TYPES.DELETE_COURSE_LIST_SUCCESS,\n  payload: data,\n});\n\nexport const DeleteCourseListFailure = (error) => ({\n  type: COURSE_TYPES.DELETE_COURSE_LIST_FAILURE,\n  payload: error,\n});\n\nexport const UpdateCourseListBegin = () => ({\n  type: COURSE_TYPES.UPDATE_COURSE_LIST_BEGIN,\n});\n\nexport const UpdateCourseListSuccess = (data) => ({\n  type: COURSE_TYPES.UPDATE_COURSE_LIST_SUCCESS,\n  payload: data,\n});\n\nexport const UpdateCourseListFailure = (error) => ({\n  type: COURSE_TYPES.UPDATE_COURSE_LIST_FAILURE,\n  payload: error,\n});\n","import { showSnack, resetSnack } from \"../actions/alertActions\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../services/constants\";\nimport {\n  DeleteCourseListBegin,\n  DeleteCourseListFailure,\n  DeleteCourseListSuccess,\n  PostImageCourseListBegin,\n  PostImageCourseListFailure,\n  PostImageCourseListSuccess,\n  UpdateCourseListBegin,\n  UpdateCourseListFailure,\n  UpdateCourseListSuccess,\n  getCourseListBegin,\n  getCourseListFailure,\n  getCourseListSuccess,\n} from \"../actions/courseActions\";\n\nexport function performGetCourseList() {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(getCourseListBegin());\n    try {\n      const result = await axios.get(`${BASE_URL}course`);\n      dispatch(getCourseListSuccess(result?.data?.docs?.data));\n      dispatch(\n        showSnack({\n          // message: \"Courses Retrieved Successfully\",\n          message: result?.data?.msg,\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(getCourseListFailure());\n      return false;\n    }\n  };\n}\n\nexport function performPostImageCourse(data, type) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(PostImageCourseListBegin());\n    try {\n      const result = await axios.post(`${BASE_URL}course/upload/${type}`, data);\n      dispatch(PostImageCourseListSuccess(result?.data));\n      dispatch(\n        showSnack({\n          message: `${type} Retrieved Successfully`,\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(PostImageCourseListFailure());\n      return false;\n    }\n  };\n}\n\nexport function performPostCourse(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(PostImageCourseListBegin());\n    try {\n      const result = await axios.post(`${BASE_URL}course`, data);\n      dispatch(PostImageCourseListSuccess(result?.data));\n      dispatch(\n        showSnack({\n          message: `Course Add Successfully`,\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(PostImageCourseListFailure());\n      return false;\n    }\n  };\n}\nexport function performPostAccordionCourse(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(PostImageCourseListBegin());\n    try {\n      const courseId = data.courseId;\n      const type = data.type;\n      const result = await axios.post(\n        `${BASE_URL}course/${courseId}/${type}`,\n        data\n      );\n      dispatch(PostImageCourseListSuccess(result?.data));\n      dispatch(\n        showSnack({\n          message: `${type} Add Successfully`,\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(PostImageCourseListFailure());\n      return false;\n    }\n  };\n}\n\nexport function performUpdateCourse(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(UpdateCourseListBegin());\n    try {\n      const id = data.id;\n      const result = await axios.put(`${BASE_URL}course/${id}`, data);\n      dispatch(UpdateCourseListSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: \"Course Update Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(UpdateCourseListFailure());\n      return false;\n    }\n  };\n}\n\nexport function performUpdateAccordionCourse(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(UpdateCourseListBegin());\n    try {\n      const accordionId = data.accordionId;\n      const courseId = data.courseId;\n      const type = data.type;\n      const result = await axios.put(\n        `${BASE_URL}course/${courseId}/${type}/${accordionId}`,\n        data\n      );\n      dispatch(UpdateCourseListSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: `${type} Course Update Successfully`,\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(UpdateCourseListFailure());\n      return false;\n    }\n  };\n}\n\nexport function performDeleteCourse(id) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(DeleteCourseListBegin());\n    try {\n      await axios.delete(`${BASE_URL}course/${id}`);\n      dispatch(DeleteCourseListSuccess());\n      dispatch(\n        showSnack({\n          message: \"Course Delete Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return true;\n    } catch (error) {\n      dispatch(DeleteCourseListFailure());\n      return false;\n    }\n  };\n}\n\nexport function performDeleteAccordionCourse(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(DeleteCourseListBegin());\n    try {\n      const accordionId = data.accordionId;\n      const courseId = data.courseId;\n      const type = data.type;\n      const result = await axios.delete(\n        `${BASE_URL}course/${courseId}/${type}/${accordionId}`,\n        data\n      );\n      dispatch(DeleteCourseListSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: `${type} Course Delete Successfully`,\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(DeleteCourseListFailure());\n      return false;\n    }\n  };\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Avatar from \"react-avatar\";\nimport { Card } from \"react-bootstrap\";\nimport { BiSolidUserCircle } from \"react-icons/bi\";\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport ConfirmDialog from \"../../../components/ConfirmDialog\";\nimport DataTable from \"../../../components/DataTable\";\nimport DropdownMenu from \"../../../components/DropdownMenu\";\nimport IconButton from \"../../../components/IconButton\";\nimport useWindowSize from \"../../../hooks/UseWindowSize\";\nimport {\n  performDeleteCourse,\n  performGetCourseList,\n} from \"../../../redux/actionCreators/courseCreators\";\nimport { BACKEND_URL, FRONTEND_URL } from \"../../../services/constants\";\n\nconst ListCourses = ({ fetching, getList, refresh, deleteCourse, history }) => {\n  const [showCDialog, setShowCDialog] = useState(false);\n  const [data, setData] = useState([]);\n  const deletingUser = useRef(null);\n  const fetchData = async () => {\n    const result = await getList();\n    if (result.status === 200) {\n      setData(result?.data?.docs?.data);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const isMobile = useWindowSize();\n\n  const handleOnConfirm = async () => {\n    const result = await deleteCourse(deletingUser.current?._id);\n    if (result) {\n      fetchData();\n    }\n  };\n  const createRelativePath = (link) => {\n    const url = `${FRONTEND_URL}training/courses/${link\n      ?.toLowerCase()\n      ?.replace(/\\s+/g, \"-\")}`;\n    return url;\n  };\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body className={`${isMobile && \"p-0\"}`}>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() => history.push(`/page/courses/addcourses`)}\n            >\n              Add Courses\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                title: \"courseImage\",\n                field: \"courseImage\",\n                // customFilterAndSearch: (term, rowData) => term === rowData.courseImage,\n                render: (rowData) => (\n                  <>\n                    <span>\n                      <>\n                        <Avatar\n                          src={BACKEND_URL + rowData?.courseImage}\n                          name={rowData?.courseName}\n                          size=\"50\"\n                          className=\"ff-primary rounded-circle me-3\"\n                        />\n                      </>\n                    </span>\n                  </>\n                ),\n              },\n              {\n                title: \"course Meta Title\",\n                field: \"metaTitle\",\n                render: (rowData) => (\n                  <>{rowData.metaTitle ? rowData.metaTitle : \"N/A\"}</>\n                ),\n              },\n              {\n                title: \"course Meta Description\",\n                field: \"metaDescription\",\n                render: (rowData) => (\n                  <>\n                    {rowData.metaDescription ? rowData.metaDescription : \"N/A\"}\n                  </>\n                ),\n              },\n              {\n                title: \"course Author Link\",\n                field: \"authorLink\",\n                render: (rowData) => (\n                  <>{rowData.authorLink ? rowData.authorLink : \"N/A\"}</>\n                ),\n              },\n              {\n                title: \"coursesType\",\n                field: \"coursesType\",\n                render: (rowData) => (\n                  <>{rowData.coursesType ? rowData.coursesType : \"N/A\"}</>\n                ),\n              },\n              {\n                title: \"coursesLink\",\n                field: \"coursesLink\",\n                render: (rowData) => (\n                  <>\n                    {rowData.coursesLink ? (\n                      <a\n                        href={`${FRONTEND_URL}training/courses/${rowData?.coursesLink\n                          ?.toLowerCase()\n                          ?.replace(/\\s+/g, \"-\")}`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        {createRelativePath(rowData?.coursesLink)}\n                      </a>\n                    ) : (\n                      \"N/A\"\n                    )}\n                  </>\n                ),\n              },\n              {\n                title: \"courseName\",\n                field: \"courseName\",\n                render: (rowData) => (\n                  <>{rowData.courseName ? rowData.courseName : \"N/A\"}</>\n                ),\n              },\n              {\n                title: \"courseStartingDate\",\n                field: \"courseStartingDate\",\n                render: (rowData) => (\n                  <>\n                    {rowData.courseStartingDate\n                      ? rowData.courseStartingDate\n                      : \"N/A\"}\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Status\",\n                field: \"status\",\n                filtering: false,\n                render: (rowData) => {\n                  let statusColor = \"success\";\n                  let statusText = \"Published\";\n                  if (rowData.status === false) {\n                    statusColor = \"warning\";\n                    statusText = \"Draft\";\n                  }\n                  return (\n                    <span className={`text-${statusColor}`}>{statusText}</span>\n                  );\n                },\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/page/courses/${props.data.coursesLink}/edit`,\n                          {\n                            data: props.data,\n                          }\n                        ),\n                    },\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <BiSolidUserCircle size={20} className=\"me-2\" />\n                          Course Detail\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/page/courses/${props.data._id}/viewCourse`,\n                          {\n                            data: props.data,\n                          }\n                        ),\n                    },\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-danger\">\n                          <MdDelete size={20} className=\"me-2\" /> Delete\n                        </span>\n                      ),\n                      onClick: () => {\n                        setShowCDialog(true);\n                        deletingUser.current = props.data;\n                      },\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            onRowClick={(_, rowData) => null}\n            loading={fetching}\n            data={data}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            refresh={refresh}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Course\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.courseName}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.course.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getList: (payload) => dispatch(performGetCourseList(payload)),\n  deleteCourse: (payload) => dispatch(performDeleteCourse(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListCourses);\n","import React, { useRef, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport ConfirmDialog from \"../../../../../components/ConfirmDialog\";\nimport DataTable from \"../../../../../components/DataTable\";\nimport DisplayText from \"../../../../../components/DisplayText\";\nimport DropdownMenu from \"../../../../../components/DropdownMenu\";\nimport IconButton from \"../../../../../components/IconButton\";\nimport useWindowSize from \"../../../../../hooks/UseWindowSize\";\nimport { performDeleteAccordionCourse } from \"../../../../../redux/actionCreators/courseCreators\";\n\nconst ListAccordion = ({ fetching, deleteAccordionCourse, listData, id }) => {\n  const isMobile = useWindowSize();\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const history = useHistory();\n  const handleOnConfirm = async () => {\n    const data = {\n      type: \"accordion\",\n      courseId: id,\n      accordionId: deletingUser?.current?._id,\n    };\n    const result = await deleteAccordionCourse(data);\n    if (result.status === 200) {\n      history.push(\"/page\");\n    }\n  };\n\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() =>\n                history.push(\n                  `/page/courses/${id}/viewCourse/addAccordionCourse`,\n                  {\n                    courseId: id,\n                  }\n                )\n              }\n            >\n              Add Accordion\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                title: \"Accordion Title\",\n                field: \"AccordionTitle\",\n                width: 250,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.AccordionTitle}</span>\n                  </>\n                ),\n              },\n              {\n                title: \"Accordion Description\",\n                field: \"AccordionDescription\",\n                width: 400,\n                render: (rowData) => (\n                  <>\n                    <div\n                      style={{\n                        width: \"auto\",\n                        maxWidth: \"900px\",\n                        minWidth: \"400px\",\n                        height: \"300px\",\n                        overflow: \"scroll\",\n                      }}\n                    >\n                      <DisplayText\n                        htmlContent={rowData?.AccordionDescription}\n                      />\n                    </div>\n                  </>\n                ),\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/page/courses/${id}/viewCourse/${props.data._id}/editAccordionCourse`,\n                          {\n                            data: {\n                              ...props.data,\n                            },\n                          }\n                        ),\n                    },\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-danger\">\n                          <MdDelete size={20} className=\"me-2\" /> Delete\n                        </span>\n                      ),\n                      onClick: () => {\n                        setShowCDialog(true);\n                        deletingUser.current = props.data;\n                      },\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            data={listData}\n            loading={fetching}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Course Accordion\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.AccordionTitle}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.homepage.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  //   getHomepageDetail: (payload) => dispatch(performGetHomepageList(payload)),\n  deleteAccordionCourse: (payload) =>\n    dispatch(performDeleteAccordionCourse(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListAccordion);\n","import React, { useRef, useState } from \"react\";\nimport Avatar from \"react-avatar\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport ConfirmDialog from \"../../../../../components/ConfirmDialog\";\nimport DataTable from \"../../../../../components/DataTable\";\nimport DropdownMenu from \"../../../../../components/DropdownMenu\";\nimport IconButton from \"../../../../../components/IconButton\";\nimport useWindowSize from \"../../../../../hooks/UseWindowSize\";\nimport { performDeleteAccordionCourse } from \"../../../../../redux/actionCreators/courseCreators\";\nimport { BACKEND_URL } from \"../../../../../services/constants\";\n\nconst ListTrainingProfile = ({\n  fetching,\n  deleteAccordionCourse,\n  listData,\n  id,\n}) => {\n  const isMobile = useWindowSize();\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const history = useHistory();\n  const handleOnConfirm = async () => {\n    const data = {\n      type: \"trainingProfile\",\n      courseId: id,\n      accordionId: deletingUser?.current?._id,\n    };\n    const result = await deleteAccordionCourse(data);\n    if (result.status === 200) {\n      history.push(\"/page\");\n    }\n  };\n\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() =>\n                history.push(\n                  `/page/courses/${id}/viewCourse/addTrainerProfile`,\n                  {\n                    courseId: id,\n                  }\n                )\n              }\n            >\n              Add Trainer Profile\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                title: \"Trainer Name\",\n                field: \"trainerName\",\n                width: 400,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.trainerName}</span>\n                  </>\n                ),\n              },\n              {\n                title: \"Trainer Designation\",\n                field: \"trainerDesignation\",\n                width: 250,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.trainerDesignation}</span>\n                  </>\n                ),\n              },\n              {\n                title: \"Trainer Company\",\n                field: \"trainerCompany\",\n                width: 250,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.trainerCompany}</span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Trainer Image\",\n                field: \"trainerImage\",\n                render: (rowData) => (\n                  <>\n                    <Avatar\n                      src={BACKEND_URL + rowData?.trainerImage}\n                      name={rowData?.trainerName}\n                      size=\"70\"\n                      className=\"ff-primary rounded-circle me-3\"\n                    />\n                  </>\n                ),\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/page/courses/${id}/viewCourse/${props.data._id}/editTrainerProfile`,\n                          {\n                            data: {\n                              ...props.data,\n                            },\n                          }\n                        ),\n                    },\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-danger\">\n                          <MdDelete size={20} className=\"me-2\" /> Delete\n                        </span>\n                      ),\n                      onClick: () => {\n                        setShowCDialog(true);\n                        deletingUser.current = props.data;\n                      },\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            data={listData}\n            loading={fetching}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Course Accordion\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.trainerName}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.course.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteAccordionCourse: (payload) =>\n    dispatch(performDeleteAccordionCourse(payload)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListTrainingProfile);\n","import React, { useRef, useState } from \"react\";\nimport Avatar from \"react-avatar\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport ConfirmDialog from \"../../../../../components/ConfirmDialog\";\nimport DataTable from \"../../../../../components/DataTable\";\nimport DropdownMenu from \"../../../../../components/DropdownMenu\";\nimport IconButton from \"../../../../../components/IconButton\";\nimport useWindowSize from \"../../../../../hooks/UseWindowSize\";\nimport { performDeleteAccordionCourse } from \"../../../../../redux/actionCreators/courseCreators\";\nimport { BACKEND_URL } from \"../../../../../services/constants\";\n\nconst ListTestimonial = ({ fetching, deleteAccordionCourse, listData, id }) => {\n  const isMobile = useWindowSize();\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const history = useHistory();\n  const handleOnConfirm = async () => {\n    const data = {\n      type: \"testimonial\",\n      courseId: id,\n      accordionId: deletingUser?.current?._id,\n    };\n    const result = await deleteAccordionCourse(data);\n    if (result.status === 200) {\n      history.push(\"/page\");\n    }\n  };\n\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() =>\n                history.push(`/page/courses/${id}/viewCourse/addTestimonial`, {\n                  courseId: id,\n                })\n              }\n            >\n              Add Testimonial\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                title: \"Testimonial Name\",\n                field: \"studentName\",\n                width: 400,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.studentName}</span>\n                  </>\n                ),\n              },\n              {\n                title: \"Testimonial Description\",\n                field: \"studentDescription\",\n                width: 600,\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"600px\",\n                        paddingLeft: \"10px\",\n                        height: \"200px\",\n                        overflow: \"scroll\",\n                      }}\n                    >\n                      {rowData.studentDescription}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Testimonial User Image\",\n                field: \"studentImage\",\n                render: (rowData) => (\n                  <>\n                    <Avatar\n                      src={BACKEND_URL + rowData?.studentImage}\n                      name={rowData?.studentName}\n                      size=\"70\"\n                      className=\"ff-primary rounded-circle me-3\"\n                    />\n                  </>\n                ),\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/page/courses/${id}/viewCourse/${props.data._id}/editTestimonial`,\n                          {\n                            data: {\n                              ...props.data,\n                            },\n                          }\n                        ),\n                    },\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-danger\">\n                          <MdDelete size={20} className=\"me-2\" /> Delete\n                        </span>\n                      ),\n                      onClick: () => {\n                        setShowCDialog(true);\n                        deletingUser.current = props.data;\n                      },\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            data={listData}\n            loading={fetching}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Course Testimonial\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.studentName}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.course.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteAccordionCourse: (payload) =>\n    dispatch(performDeleteAccordionCourse(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListTestimonial);\n","import React, { useRef, useState } from \"react\";\nimport Avatar from \"react-avatar\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport ConfirmDialog from \"../../../../../components/ConfirmDialog\";\nimport DataTable from \"../../../../../components/DataTable\";\nimport DropdownMenu from \"../../../../../components/DropdownMenu\";\nimport IconButton from \"../../../../../components/IconButton\";\nimport useWindowSize from \"../../../../../hooks/UseWindowSize\";\nimport { performDeleteAccordionCourse } from \"../../../../../redux/actionCreators/courseCreators\";\nimport { BACKEND_URL } from \"../../../../../services/constants\";\n\nconst ListJoinImageSlider = ({\n  fetching,\n  deleteAccordionCourse,\n  listData,\n  id,\n}) => {\n  const isMobile = useWindowSize();\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const history = useHistory();\n  const handleOnConfirm = async () => {\n    const data = {\n      type: \"joinImage\",\n      courseId: id,\n      accordionId: deletingUser?.current?._id,\n    };\n    const result = await deleteAccordionCourse(data);\n    if (result.status === 200) {\n      history.push(\"/page\");\n    }\n  };\n\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() =>\n                history.push(\n                  `/page/courses/${id}/viewCourse/addJoinImageSlider`,\n                  {\n                    courseId: id,\n                  }\n                )\n              }\n            >\n              Add Join Image Slider\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                title: \"join Slider Description\",\n                field: \"joinDescription\",\n                width: 400,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.joinDescription}</span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Join Slider Image\",\n                field: \"joinImage\",\n                render: (rowData) => (\n                  <>\n                    <Avatar\n                      src={BACKEND_URL + rowData?.joinImage}\n                      name={rowData?.joinDescription}\n                      size=\"70\"\n                      className=\"ff-primary rounded-circle me-3\"\n                    />\n                  </>\n                ),\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/page/courses/${id}/viewCourse/${props.data._id}/editJoinSlider`,\n                          {\n                            data: {\n                              ...props.data,\n                            },\n                          }\n                        ),\n                    },\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-danger\">\n                          <MdDelete size={20} className=\"me-2\" /> Delete\n                        </span>\n                      ),\n                      onClick: () => {\n                        setShowCDialog(true);\n                        deletingUser.current = props.data;\n                      },\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            data={listData}\n            loading={fetching}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Course Join Image Slider\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.joinDescription}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.course.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteAccordionCourse: (payload) =>\n    dispatch(performDeleteAccordionCourse(payload)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListJoinImageSlider);\n","import React, { useRef, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport ConfirmDialog from \"../../../../../components/ConfirmDialog\";\nimport DataTable from \"../../../../../components/DataTable\";\nimport DropdownMenu from \"../../../../../components/DropdownMenu\";\nimport IconButton from \"../../../../../components/IconButton\";\nimport useWindowSize from \"../../../../../hooks/UseWindowSize\";\nimport { performDeleteAccordionCourse } from \"../../../../../redux/actionCreators/courseCreators\";\n\nconst ListOtherLink = ({ fetching, deleteAccordionCourse, listData, id }) => {\n  const isMobile = useWindowSize();\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const history = useHistory();\n  const handleOnConfirm = async () => {\n    const data = {\n      type: \"links\",\n      courseId: id,\n      accordionId: deletingUser?.current?._id,\n    };\n    const result = await deleteAccordionCourse(data);\n    if (result.status === 200) {\n      history.push(\"/page\");\n    }\n  };\n\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() =>\n                history.push(`/page/courses/${id}/viewCourse/addOtherLink`, {\n                  courseId: id,\n                })\n              }\n            >\n              Add Other Link\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                title: \"Course Other Name\",\n                field: \"CourseOtherName\",\n                width: 250,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.CourseOtherName}</span>\n                  </>\n                ),\n              },\n              {\n                title: \"Course Other Link\",\n                field: \"CourseOtherLink\",\n                width: 250,\n                render: (rowData) => (\n                  <>\n                    <a href={rowData?.CourseOtherLink}>\n                      {rowData.CourseOtherLink}\n                    </a>\n                  </>\n                ),\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/page/courses/${id}/viewCourse/${props.data._id}/editOtherCourseLink`,\n                          {\n                            data: {\n                              ...props.data,\n                            },\n                          }\n                        ),\n                    },\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-danger\">\n                          <MdDelete size={20} className=\"me-2\" /> Delete\n                        </span>\n                      ),\n                      onClick: () => {\n                        setShowCDialog(true);\n                        deletingUser.current = props.data;\n                      },\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            data={listData}\n            loading={fetching}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Course Other Link\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.CourseOtherName}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.course.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteAccordionCourse: (payload) =>\n    dispatch(performDeleteAccordionCourse(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListOtherLink);\n","import React, { useRef, useState } from \"react\";\nimport Avatar from \"react-avatar\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport ConfirmDialog from \"../../../../../components/ConfirmDialog\";\nimport DataTable from \"../../../../../components/DataTable\";\nimport DisplayText from \"../../../../../components/DisplayText\";\nimport DropdownMenu from \"../../../../../components/DropdownMenu\";\nimport IconButton from \"../../../../../components/IconButton\";\nimport { performDeleteAccordionCourse } from \"../../../../../redux/actionCreators/courseCreators\";\nimport { BACKEND_URL } from \"../../../../../services/constants\";\nimport useWindowSize from \"../../../../../hooks/UseWindowSize\";\n\nconst ListBriefAbout = ({ fetching, deleteAccordionCourse, listData, id }) => {\n  const isMobile = useWindowSize();\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const history = useHistory();\n  const handleOnConfirm = async () => {\n    const data = {\n      type: \"briefabout\",\n      courseId: id,\n      accordionId: deletingUser?.current?._id,\n    };\n    const result = await deleteAccordionCourse(data);\n    if (result.status === 200) {\n      history.push(\"/page\");\n    }\n  };\n\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() =>\n                history.push(`/page/courses/${id}/viewCourse/addBriefAbout`, {\n                  courseId: id,\n                })\n              }\n            >\n              Add Brief About\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                title: \"About Title\",\n                field: \"AboutTitle\",\n                width: 300,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.AboutTitle}</span>\n                  </>\n                ),\n              },\n              {\n                title: \"About Description\",\n                field: \"AboutDescription\",\n                width: 600,\n                render: (rowData) => (\n                  <>\n                    <div\n                      style={{\n                        width: \"auto\",\n                        maxWidth: \"900px\",\n                        minWidth: \"400px\",\n                        height: \"300px\",\n                        overflow: \"scroll\",\n                      }}\n                    >\n                      <DisplayText htmlContent={rowData?.AboutDescription} />\n                    </div>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"About Image\",\n                field: \"AboutImage\",\n                render: (rowData) => (\n                  <>\n                    <Avatar\n                      src={BACKEND_URL + rowData?.AboutImage}\n                      name={rowData?.AboutTitle}\n                      size=\"70\"\n                      className=\"ff-primary rounded-circle me-3\"\n                    />\n                  </>\n                ),\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/page/courses/${id}/viewCourse/${props.data._id}/editBriefAbout`,\n                          {\n                            data: {\n                              ...props.data,\n                            },\n                          }\n                        ),\n                    },\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-danger\">\n                          <MdDelete size={20} className=\"me-2\" /> Delete\n                        </span>\n                      ),\n                      onClick: () => {\n                        setShowCDialog(true);\n                        deletingUser.current = props.data;\n                      },\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            data={listData}\n            loading={fetching}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Course About Section\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.AboutTitle}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.course.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteAccordionCourse: (payload) =>\n    dispatch(performDeleteAccordionCourse(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListBriefAbout);\n","import React, { useState } from \"react\";\nimport { Card, Tab, Tabs } from \"react-bootstrap\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport IconButton from \"../../../../components/IconButton\";\nimport Page from \"../../../../components/Page\";\nimport useWindowSize from \"../../../../hooks/UseWindowSize\";\nimport ListAccordion from \"./accordionSection/ListAccordion\";\nimport ListTrainingProfile from \"./trainingProfile/ListTrainingProfile\";\nimport ListTestimonial from \"./testimonial/ListTestimonial\";\nimport ListJoinImageSlider from \"./courseJoinImageSlider/ListJoinImageSlider\";\nimport ListOtherLink from \"./courseOtherLink/ListOtherLink\";\nimport ListBriefAbout from \"./briefAbout/ListBriefAbout\";\n\nconst ViewCourse = ({ fetching }) => {\n  const isMobile = useWindowSize();\n  const history = useHistory();\n  const [key, setKey] = useState(\"accordion\");\n  const userData = history.location.state?.data;\n  const handleOnClose = () => {\n    history.goBack();\n  };\n  return (\n    <Page id=\"page--Course\" title=\"Course\">\n      <div className=\"d-flex align-items-center mb-3\">\n        <IconButton\n          icon={<BiArrowBack />}\n          variant=\"outline-link\"\n          onClick={handleOnClose}\n          className=\"p-0 me-2\"\n        />\n        <h4 className=\"m-0\"> Courses Details</h4>\n      </div>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body className={`${isMobile && \"p-0\"}`}>\n          <Tabs\n            id=\"controlled-tab-example\"\n            activeKey={key}\n            onSelect={(k) => setKey(k)}\n            className=\"mb-3\"\n          >\n            <Tab\n              eventKey=\"accordion\"\n              title={<span className=\"title_user\">Accordion Details</span>}\n            >\n              <ListAccordion\n                history={history}\n                id={userData?._id}\n                listData={userData?.accordionSections}\n              />\n            </Tab>\n            <Tab\n              eventKey=\"trainingProfile\"\n              title={\n                <span className=\"title_user\">Trainer Profile Details</span>\n              }\n            >\n              <ListTrainingProfile\n                history={history}\n                id={userData?._id}\n                listData={userData?.trainerProfiles}\n              />\n            </Tab>\n            <Tab\n              eventKey=\"testimonial\"\n              title={<span className=\"title_user\">Testimonial Details</span>}\n            >\n              <ListTestimonial\n                history={history}\n                id={userData?._id}\n                listData={userData?.testimonials}\n              />\n            </Tab>\n            <Tab\n              eventKey=\"joinImageSlider\"\n              title={\n                <span className=\"title_user\">Join Image Slider Details</span>\n              }\n            >\n              <ListJoinImageSlider\n                history={history}\n                id={userData?._id}\n                listData={userData?.joinCourseImageSlider}\n              />\n            </Tab>\n            <Tab\n              eventKey=\"otherLink\"\n              title={<span className=\"title_user\">Other Links Detail</span>}\n            >\n              <ListOtherLink\n                history={history}\n                id={userData?._id}\n                listData={userData?.courseOtherLinks}\n              />\n            </Tab>\n            <Tab\n              eventKey=\"briefAbout\"\n              title={<span className=\"title_user\">Brief About Detail</span>}\n            >\n              <ListBriefAbout\n                history={history}\n                id={userData?._id}\n                listData={userData?.briefAbout}\n              />\n            </Tab>\n          </Tabs>\n        </Card.Body>\n      </Card>\n    </Page>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.homepage.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  // getList: (payload) => dispatch(performGetCaseStudiesById(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewCourse);\n"],"sourceRoot":""}