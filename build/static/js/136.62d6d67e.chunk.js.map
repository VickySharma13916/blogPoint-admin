{"version":3,"sources":["components/IconButton/index.js","components/Form/Input.js","components/DataTable/index.js","components/DisplayText/index.js","components/ConfirmDialog/index.js","redux/actions/courseActions.js","redux/actionCreators/courseCreators.js","partials/Page/Courses/coursetab/accordionSection/ListAccordion.js","partials/Page/Courses/coursetab/trainingProfile/ListTrainingProfile.js","partials/Page/Courses/coursetab/testimonial/ListTestimonial.js","partials/Page/Courses/coursetab/courseJoinImageSlider/ListJoinImageSlider.js","partials/Page/Courses/coursetab/courseOtherLink/ListOtherLink.js","partials/Page/Courses/coursetab/briefAbout/ListBriefAbout.js","partials/Page/Courses/coursetab/viewCourse.js"],"names":["Icon","icon","size","extraProps","type","props","IconButton","variant","className","onClick","isLoading","disabled","children","defaultProps","Input","React","forwardRef","ref","onChange","onBlur","label","id","error","isClearable","hint","rest","useState","uuidv4","reset","setReset","inputType","setInputType","placeholder","step","temp","defaultValue","value","restProps","htmlFor","target","style","fontSize","color","tableIcons","FirstPage","LastPage","NextPage","PreviousPage","SortArrow","DataTable","loading","columns","actions","components","onRowClick","options","selectedRow","getList","downloadcsv","search","downloadExcel","filters","data","filterOptions","resetFilters","setFilters","refresh","resetBtn","tableRef","createRef","openFilters","setOpenFilters","tableProps","icons","boxShadow","localization","toolbar","searchTooltip","searchPlaceholder","showTitle","filtering","draggable","actionsColumnIndex","pageSize","emptyRowsWhenPaging","pageSizeOptions","query","Promise","resolve","reject","getDataTableQueryParams","result","undefined","docs","page","totalCount","totalDocs","rowStyle","rowData","backgroundColor","handleReset","useEffect","exportType","exportFromJSON","types","csv","newData","map","transformedData","Object","values","reduce","acc","obj","transformedObject","_id","Link","fileName","xls","DisplayText","htmlContent","preview","handlePreview","contentRef","useRef","sanitizedHTML","DOMPurify","sanitize","current","innerHTML","querySelectorAll","forEach","preTag","html","textContent","DOMParser","parseFromString","body","divTag","document","createElement","parentNode","replaceChild","whiteSpace","wordBreak","border","borderRadius","ConfirmDialog","show","setShow","title","message","onConfirm","getReason","bodyHtml","loadingBtnText","footer","submitting","setSubmitting","reason","setReason","handleClose","handleOnConfirm","a","onHide","backdrop","keyboard","Header","closeButton","Title","Body","dangerouslySetInnerHTML","__html","name","e","Footer","animation","length","PostImageCourseListBegin","COURSE_TYPES","POST_IMAGE_COURSE_LIST_BEGIN","PostImageCourseListSuccess","POST_IMAGE_COURSE_LIST_SUCCESS","payload","PostImageCourseListFailure","POST_IMAGE_COURSE_LIST_FAILURE","DeleteCourseListBegin","DELETE_COURSE_LIST_BEGIN","DeleteCourseListSuccess","DELETE_COURSE_LIST_SUCCESS","DeleteCourseListFailure","DELETE_COURSE_LIST_FAILURE","UpdateCourseListBegin","UPDATE_COURSE_LIST_BEGIN","UpdateCourseListSuccess","UPDATE_COURSE_LIST_SUCCESS","UpdateCourseListFailure","UPDATE_COURSE_LIST_FAILURE","performGetCourseList","dispatch","resetSnack","GET_ALL_COURSE_LIST_BEGIN","axios","get","BASE_URL","GET_ALL_COURSE_LIST_SUCCESS","showSnack","msg","getCourseListFailure","GET_ALL_COURSE_LIST_FAILURE","performPostImageCourse","post","performPostCourse","performPostAccordionCourse","courseId","performUpdateCourse","put","performUpdateAccordionCourse","accordionId","performDeleteCourse","delete","performDeleteAccordionCourse","connect","state","fetching","homepage","deleteAccordionCourse","listData","isMobile","useWindowSize","showCDialog","setShowCDialog","deletingUser","history","useHistory","status","push","Card","MdAdd","field","width","render","AccordionTitle","maxWidth","minWidth","height","overflow","AccordionDescription","_","console","log","Action","DropdownMenu","menu","iconSize","course","trainerName","trainerDesignation","trainerCompany","src","BACKEND_URL","trainerImage","studentName","paddingLeft","studentDescription","studentImage","joinDescription","joinImage","CourseOtherName","href","CourseOtherLink","AboutTitle","AboutDescription","AboutImage","key","setKey","userData","location","Page","goBack","Tabs","activeKey","onSelect","k","Tab","eventKey","accordionSections","trainerProfiles","testimonials","joinCourseImageSlider","courseOtherLinks","briefAbout"],"mappings":"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","file":"static/js/136.62d6d67e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Icon = (icon, size = \"\") => {\r\n  const extraProps = {\r\n    size: 22\r\n  };\r\n  if (size === 'lg') {\r\n    extraProps.size = 32;\r\n  } else if (size === 'sm') {\r\n    extraProps.size = 18;\r\n  }\r\n  return <icon.type {...icon.props} {...extraProps} />\r\n}\r\n\r\nconst IconButton = ({ variant, className, onClick, size, isLoading, disabled, children, icon }) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      className={`btn-icon ${size ? `btn-icon-${size}` : ''} ${isLoading ? `btn-icon-loading` : ''} ${className}`}\r\n      onClick={onClick}\r\n      size={size}\r\n      disabled={isLoading || disabled}\r\n    >\r\n      <span>{Icon(icon, size)}{children && <span>{children}</span>}</span>\r\n    </Button>\r\n  )\r\n}\r\n\r\nIconButton.propTypes = {\r\n  children: PropTypes.node,\r\n  variant: PropTypes.string,\r\n  className: PropTypes.string,\r\n  size: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  isLoading: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  icon: PropTypes.any,\r\n};\r\n\r\nIconButton.defaultProps = {\r\n  variant: \"default\",\r\n  className: \"\",\r\n  size: \"\",\r\n  onClick: () => null,\r\n  isLoading: false,\r\n  disabled: false,\r\n  icon: null\r\n}\r\n\r\nexport default IconButton;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { MdCancel } from \"react-icons/md\";\r\nimport { AiOutlineEyeInvisible, AiOutlineEye } from \"react-icons/ai\";\r\n\r\nimport IconButton from \"../IconButton\";\r\n\r\nconst Input = React.forwardRef(\r\n  (\r\n    {\r\n      className,\r\n      onChange,\r\n      onBlur,\r\n      label,\r\n      id,\r\n      error,\r\n      isClearable,\r\n      hint,\r\n      type,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const [reset, setReset] = useState(uuidv4());\r\n    const [inputType, setInputType] = useState(type);\r\n\r\n    const onClear = () => {\r\n      onChange({ target: { value: \"\" } });\r\n      setReset(uuidv4());\r\n    };\r\n\r\n    const restProps = () => {\r\n      const temp = { ...rest };\r\n      temp.defaultValue = temp.value || \"\";\r\n      delete temp.value;\r\n      return temp;\r\n    };\r\n\r\n    return (\r\n      <span\r\n        className={`d-inline-block w-100 position-relative pt-2 pb-4 input__wrapper ${\r\n          error ? \"error\" : \"\"\r\n        }`}\r\n        ref={ref}\r\n      >\r\n        <input\r\n          key={`input-${reset}`}\r\n          id={`input-${id}`}\r\n          type={inputType}\r\n          className={`${className}${isClearable ? \" input-clearable\" : \"\"}`}\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          placeholder={label}\r\n          step=\"any\"\r\n          {...restProps()}\r\n        />\r\n        <label htmlFor={`input-${id}`}>{label}</label>\r\n        <span className=\"input-error\">{error}</span>\r\n        {isClearable && (\r\n          <MdCancel className=\"input-clear-btn\" size={18} onClick={onClear} />\r\n        )}\r\n        {type === \"password\" && (\r\n          <IconButton\r\n            icon={\r\n              inputType === \"password\" ? (\r\n                <AiOutlineEyeInvisible />\r\n              ) : (\r\n                <AiOutlineEye />\r\n              )\r\n            }\r\n            variant=\"outline-link\"\r\n            onClick={() =>\r\n              setInputType(inputType === \"password\" ? \"text\" : \"password\")\r\n            }\r\n            className=\"p-0 m-0 position-absolute btn--show-password\"\r\n          />\r\n        )}\r\n        {hint !== \"\" && (\r\n          <span style={{ fontSize: \"12px\", color: \"#c1b1b1\" }}>{hint}</span>\r\n        )}\r\n      </span>\r\n    );\r\n  }\r\n);\r\n\r\nInput.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  label: PropTypes.string,\r\n  id: PropTypes.string,\r\n  error: PropTypes.string,\r\n  isClearable: PropTypes.bool,\r\n  type: PropTypes.string,\r\n  hint: PropTypes.string,\r\n};\r\n\r\nInput.defaultProps = {\r\n  className: \"\",\r\n  onChange: () => null,\r\n  onBlur: () => null,\r\n  label: \"\",\r\n  id: uuidv4(),\r\n  error: \"\",\r\n  isClearable: false,\r\n  type: \"text\",\r\n  hint: \"\",\r\n};\r\n\r\nexport default Input;\r\n","import MaterialTable from \"@material-table/core\";\r\nimport exportFromJSON from \"export-from-json\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { createRef, forwardRef, useEffect, useState } from \"react\";\r\nimport {\r\n  MdArrowUpward,\r\n  MdChevronLeft,\r\n  MdChevronRight,\r\n  MdDownload,\r\n  MdFilterAlt,\r\n  MdFirstPage,\r\n  MdLastPage,\r\n  MdRefresh,\r\n} from \"react-icons/md\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { getDataTableQueryParams } from \"../../utils/index\";\r\nimport IconButton from \"../IconButton\";\r\n\r\nconst tableIcons = {\r\n  FirstPage: forwardRef((props, ref) => <MdFirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <MdLastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <MdChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <MdChevronLeft {...props} ref={ref} />\r\n  )),\r\n  SortArrow: forwardRef((props, ref) => <MdArrowUpward {...props} ref={ref} />),\r\n};\r\n\r\nconst DataTable = ({\r\n  loading,\r\n  columns,\r\n  actions,\r\n  components,\r\n  onRowClick,\r\n  options,\r\n  selectedRow,\r\n  getList,\r\n  search,\r\n  downloadcsv,\r\n  downloadExcel,\r\n  filters,\r\n  filterOptions,\r\n  data,\r\n  setFilters,\r\n  resetFilters,\r\n  refresh,\r\n  resetBtn,\r\n}) => {\r\n  const tableRef = createRef();\r\n  const [reset, setReset] = useState(uuidv4());\r\n  const [openFilters, setOpenFilters] = useState(false);\r\n  const tableProps = {\r\n    isLoading: loading,\r\n    icons: tableIcons,\r\n    style: {\r\n      boxShadow: \"none\",\r\n    },\r\n    localization: {\r\n      toolbar: {\r\n        searchTooltip: \"Search\",\r\n        searchPlaceholder: \"Search\",\r\n      },\r\n    },\r\n    options: {\r\n      showTitle: false,\r\n      search: true,\r\n      toolbar: true,\r\n      filtering: openFilters,\r\n      draggable: false,\r\n      actionsColumnIndex: -1,\r\n      pageSize: 10,\r\n      emptyRowsWhenPaging: false, // To avoid of having empty rows\r\n      pageSizeOptions: [10, 30, 50, 100, 500],\r\n      ...options,\r\n    },\r\n    columns: columns,\r\n    data: data\r\n      ? data\r\n      : (query) =>\r\n          new Promise(async (resolve, reject) => {\r\n            try {\r\n              let result = await getList(getDataTableQueryParams(query));\r\n              if (!result.data) {\r\n                return reject();\r\n              }\r\n              return resolve({\r\n                data:\r\n                  result.data.docs !== undefined\r\n                    ? result.data.docs\r\n                    : result.data,\r\n                page: result.data.page !== undefined ? result.data.page - 1 : 0,\r\n                totalCount:\r\n                  result.data.totalDocs !== undefined\r\n                    ? result.data.totalDocs\r\n                    : 0, // this is the total count of rows or documents\r\n              });\r\n            } catch (err) {\r\n              return reject(err);\r\n            }\r\n          }),\r\n    actions: actions,\r\n    onRowClick: onRowClick,\r\n  };\r\n\r\n  if (components) {\r\n    tableProps.components = components;\r\n  }\r\n\r\n  if (onRowClick) {\r\n    tableProps.options = {\r\n      ...tableProps.options,\r\n      rowStyle: (rowData) => ({\r\n        backgroundColor:\r\n          selectedRow && selectedRow === rowData.id ? \"#f5f5f5\" : \"#FFF\",\r\n      }),\r\n      onRowClick: onRowClick,\r\n    };\r\n  }\r\n\r\n  const handleDownloadCSV = () => {\r\n    const fileName = \"CSVformat\";\r\n    const exportType = exportFromJSON.types.csv;\r\n    const newData = data.map(({ data, ...rest }) => {\r\n      const transformedData = data\r\n        ? Object.values(data).reduce((acc, obj) => ({ ...acc, ...obj }), {})\r\n        : {};\r\n      const transformedObject = {\r\n        _id: rest._id,\r\n        Link: rest.Link,\r\n        ...transformedData,\r\n      };\r\n      return data ? transformedObject : rest;\r\n    });\r\n    exportFromJSON({ data: newData, fileName, exportType });\r\n  };\r\n\r\n  const handleDownloadXLS = () => {\r\n    const fileName = \"ExcelFormat\";\r\n    const exportType = exportFromJSON.types.xls;\r\n    const newData = data.map(({ data, ...rest }) => {\r\n      const transformedData = data\r\n        ? Object.values(data).reduce((acc, obj) => ({ ...acc, ...obj }), {})\r\n        : {};\r\n      const transformedObject = {\r\n        _id: rest._id,\r\n        Link: rest.Link,\r\n        ...transformedData,\r\n      };\r\n      return data ? transformedObject : rest;\r\n    });\r\n    exportFromJSON({ data: newData, fileName, exportType });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    if (onRowClick) {\r\n      onRowClick(null);\r\n    }\r\n    resetFilters();\r\n    setReset(uuidv4());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (refresh) {\r\n      handleReset();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [refresh]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 d-flex flex-lg-row flex-column position-relative table-toolbar\">\r\n        <span className=\"d-flex flex-wrap zindex-dropdown end-0 gap-2 gap-lg-3 align-items-center justify-content-end ms-auto\">\r\n          {filters && (\r\n            <IconButton\r\n              icon={<MdFilterAlt />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={() => setOpenFilters(!openFilters)}\r\n              disabled={loading}\r\n            >\r\n              Filters\r\n            </IconButton>\r\n          )}\r\n\r\n          {resetBtn && (\r\n            <IconButton\r\n              icon={<MdRefresh />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleReset}\r\n              disabled={loading}\r\n            >\r\n              Reset\r\n            </IconButton>\r\n          )}\r\n          {downloadcsv && (\r\n            <IconButton\r\n              icon={<MdDownload />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleDownloadCSV}\r\n              disabled={loading}\r\n            >\r\n              CSV\r\n            </IconButton>\r\n          )}\r\n          {downloadExcel && (\r\n            <IconButton\r\n              icon={<MdDownload />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleDownloadXLS}\r\n              disabled={loading}\r\n            >\r\n              Excel\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      </div>\r\n\r\n      <MaterialTable\r\n        key={`data-table-${reset}`}\r\n        tableRef={tableRef}\r\n        {...tableProps}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nDataTable.propTypes = {\r\n  loading: PropTypes.bool,\r\n  columns: PropTypes.array.isRequired,\r\n  actions: PropTypes.array,\r\n  components: PropTypes.any,\r\n  onRowClick: PropTypes.any,\r\n  options: PropTypes.object,\r\n  selectedRow: PropTypes.string,\r\n  getList: PropTypes.func.isRequired,\r\n  search: PropTypes.bool,\r\n  filters: PropTypes.bool,\r\n  filterOptions: PropTypes.array,\r\n  setFilters: PropTypes.func,\r\n  resetFilters: PropTypes.func,\r\n  refresh: PropTypes.string,\r\n  resetBtn: PropTypes.bool,\r\n};\r\n\r\nDataTable.defaultProps = {\r\n  loading: false,\r\n  actions: [],\r\n  components: null,\r\n  onRowClick: null,\r\n  options: {},\r\n  selectedRow: null,\r\n  search: true,\r\n  filters: false,\r\n  filterOptions: [],\r\n  setFilters: () => null,\r\n  resetFilters: () => null,\r\n  refresh: null,\r\n  resetBtn: true,\r\n};\r\n\r\nexport default DataTable;\r\n","import DOMPurify from \"dompurify\";\nimport React, { useEffect, useRef } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { RxCross2 } from \"react-icons/rx\";\n\nconst DisplayText = ({ htmlContent, preview, handlePreview }) => {\n  const contentRef = useRef(null);\n  const convertHtmlToPlainText = (html) => {\n    const doc = new DOMParser().parseFromString(html, \"text/html\");\n    return doc.body.textContent || \"\";\n  };\n  useEffect(() => {\n    const sanitizedHTML = DOMPurify.sanitize(htmlContent);\n    contentRef.current.innerHTML = sanitizedHTML;\n    const preTags = contentRef.current.querySelectorAll(\"pre\");\n    preTags.forEach((preTag) => {\n      const textContent = convertHtmlToPlainText(preTag.innerHTML);\n      preTag.innerHTML = textContent;\n      const divTag = document.createElement(\"div\");\n      divTag.innerHTML = preTag.innerHTML;\n      preTag.parentNode.replaceChild(divTag, preTag);\n    });\n  }, [htmlContent]);\n\n  return (\n    <div className=\"position-relative\">\n      {preview && (\n        <div className=\"w-100 d-flex justify-content-end mb-2\">\n          <Button variant=\"primary\" onClick={() => handlePreview()}>\n            <RxCross2 />\n          </Button>\n        </div>\n      )}\n      <div\n        ref={contentRef}\n        style={{\n          whiteSpace: \"pre-wrap\",\n          wordBreak: \"break-word\",\n          border: \"1px solid grey\",\n          borderRadius: \"8px\",\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default DisplayText;\n","import React, { useState } from 'react';\r\nimport { Modal, Button, Spinner } from 'react-bootstrap';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Input from '../Form/Input';\r\n\r\nconst ConfirmDialog = ({ show, setShow, title, message, onConfirm, getReason, bodyHtml, loadingBtnText, footer }) => {\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [reason, setReason] = useState('');\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const handleOnConfirm = async () => {\r\n    setSubmitting(true);\r\n    await onConfirm(reason);\r\n    setSubmitting(false);\r\n    setShow(false);\r\n    setReason('');\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div dangerouslySetInnerHTML={{ __html: message }}></div>\r\n        {bodyHtml}\r\n        {getReason && (\r\n          <div>\r\n            <Input id=\"reason\" name=\"reason\" label=\"Reason\" value={reason} onChange={(e) => setReason(e.target.value)} />\r\n          </div>\r\n        )}\r\n      </Modal.Body>\r\n      {footer && (\r\n        <Modal.Footer>\r\n          <Button variant=\"default\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          {!getReason && (\r\n            <Button variant=\"danger\" onClick={handleOnConfirm}>\r\n              {!submitting && <span>Confirm</span>}\r\n              {submitting && (\r\n                <span>\r\n                  {loadingBtnText} <Spinner size=\"sm\" animation=\"border\" />\r\n                </span>\r\n              )}\r\n            </Button>\r\n          )}\r\n          {getReason && (\r\n            <Button disabled={reason === '' || reason.length <= 3} variant=\"danger\" onClick={handleOnConfirm}>\r\n              {!submitting && <span>Confirm</span>}\r\n              {submitting && (\r\n                <span>\r\n                  {loadingBtnText} <Spinner size=\"sm\" animation=\"border\" />\r\n                </span>\r\n              )}\r\n            </Button>\r\n          )}\r\n        </Modal.Footer>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nConfirmDialog.propTypes = {\r\n  show: PropTypes.bool,\r\n  setShow: PropTypes.func,\r\n  title: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onConfirm: PropTypes.func,\r\n  getReason: PropTypes.bool,\r\n  bodyHtml: PropTypes.node,\r\n  loadingBtnText: PropTypes.string,\r\n  footer: PropTypes.bool,\r\n};\r\n\r\nConfirmDialog.defaultProps = {\r\n  show: false,\r\n  setShow: () => null,\r\n  title: 'Give a title',\r\n  message: 'Your message here',\r\n  onConfirm: () => null,\r\n  getReason: false,\r\n  bodyHtml: <></>,\r\n  loadingBtnText: 'Deleting',\r\n  footer: true,\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import COURSE_TYPES from \"../types/courseTypes\";\n\nexport const resetState = () => ({\n  type: COURSE_TYPES.RESET_STATE,\n});\n\nexport const getCourseListBegin = () => ({\n  type: COURSE_TYPES.GET_ALL_COURSE_LIST_BEGIN,\n});\n\nexport const getCourseListSuccess = (data) => ({\n  type: COURSE_TYPES.GET_ALL_COURSE_LIST_SUCCESS,\n  payload: data,\n});\n\nexport const getCourseListFailure = (error) => ({\n  type: COURSE_TYPES.GET_ALL_COURSE_LIST_FAILURE,\n  payload: error,\n});\n\nexport const PostImageCourseListBegin = () => ({\n  type: COURSE_TYPES.POST_IMAGE_COURSE_LIST_BEGIN,\n});\n\nexport const PostImageCourseListSuccess = (data) => ({\n  type: COURSE_TYPES.POST_IMAGE_COURSE_LIST_SUCCESS,\n  payload: data,\n});\n\nexport const PostImageCourseListFailure = (error) => ({\n  type: COURSE_TYPES.POST_IMAGE_COURSE_LIST_FAILURE,\n  payload: error,\n});\n\nexport const DeleteCourseListBegin = () => ({\n  type: COURSE_TYPES.DELETE_COURSE_LIST_BEGIN,\n});\n\nexport const DeleteCourseListSuccess = (data) => ({\n  type: COURSE_TYPES.DELETE_COURSE_LIST_SUCCESS,\n  payload: data,\n});\n\nexport const DeleteCourseListFailure = (error) => ({\n  type: COURSE_TYPES.DELETE_COURSE_LIST_FAILURE,\n  payload: error,\n});\n\nexport const UpdateCourseListBegin = () => ({\n  type: COURSE_TYPES.UPDATE_COURSE_LIST_BEGIN,\n});\n\nexport const UpdateCourseListSuccess = (data) => ({\n  type: COURSE_TYPES.UPDATE_COURSE_LIST_SUCCESS,\n  payload: data,\n});\n\nexport const UpdateCourseListFailure = (error) => ({\n  type: COURSE_TYPES.UPDATE_COURSE_LIST_FAILURE,\n  payload: error,\n});\n","import { showSnack, resetSnack } from \"../actions/alertActions\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../services/constants\";\nimport {\n  DeleteCourseListBegin,\n  DeleteCourseListFailure,\n  DeleteCourseListSuccess,\n  PostImageCourseListBegin,\n  PostImageCourseListFailure,\n  PostImageCourseListSuccess,\n  UpdateCourseListBegin,\n  UpdateCourseListFailure,\n  UpdateCourseListSuccess,\n  getCourseListBegin,\n  getCourseListFailure,\n  getCourseListSuccess,\n} from \"../actions/courseActions\";\n\nexport function performGetCourseList() {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(getCourseListBegin());\n    try {\n      const result = await axios.get(`${BASE_URL}course`);\n      dispatch(getCourseListSuccess(result?.data?.docs?.data));\n      dispatch(\n        showSnack({\n          // message: \"Courses Retrieved Successfully\",\n          message: result?.data?.msg,\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(getCourseListFailure());\n      return false;\n    }\n  };\n}\n\nexport function performPostImageCourse(data, type) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(PostImageCourseListBegin());\n    try {\n      const result = await axios.post(`${BASE_URL}course/upload/${type}`, data);\n      dispatch(PostImageCourseListSuccess(result?.data));\n      dispatch(\n        showSnack({\n          message: `${type} Retrieved Successfully`,\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(PostImageCourseListFailure());\n      return false;\n    }\n  };\n}\n\nexport function performPostCourse(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(PostImageCourseListBegin());\n    try {\n      const result = await axios.post(`${BASE_URL}course`, data);\n      dispatch(PostImageCourseListSuccess(result?.data));\n      dispatch(\n        showSnack({\n          message: `Course Add Successfully`,\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(PostImageCourseListFailure());\n      return false;\n    }\n  };\n}\nexport function performPostAccordionCourse(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(PostImageCourseListBegin());\n    try {\n      const courseId = data.courseId;\n      const type = data.type;\n      const result = await axios.post(\n        `${BASE_URL}course/${courseId}/${type}`,\n        data\n      );\n      dispatch(PostImageCourseListSuccess(result?.data));\n      dispatch(\n        showSnack({\n          message: `${type} Add Successfully`,\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(PostImageCourseListFailure());\n      return false;\n    }\n  };\n}\n\nexport function performUpdateCourse(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(UpdateCourseListBegin());\n    try {\n      const id = data.id;\n      const result = await axios.put(`${BASE_URL}course/${id}`, data);\n      dispatch(UpdateCourseListSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: \"Course Update Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(UpdateCourseListFailure());\n      return false;\n    }\n  };\n}\n\nexport function performUpdateAccordionCourse(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(UpdateCourseListBegin());\n    try {\n      const accordionId = data.accordionId;\n      const courseId = data.courseId;\n      const type = data.type;\n      const result = await axios.put(\n        `${BASE_URL}course/${courseId}/${type}/${accordionId}`,\n        data\n      );\n      dispatch(UpdateCourseListSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: `${type} Course Update Successfully`,\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(UpdateCourseListFailure());\n      return false;\n    }\n  };\n}\n\nexport function performDeleteCourse(id) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(DeleteCourseListBegin());\n    try {\n      await axios.delete(`${BASE_URL}course/${id}`);\n      dispatch(DeleteCourseListSuccess());\n      dispatch(\n        showSnack({\n          message: \"Course Delete Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return true;\n    } catch (error) {\n      dispatch(DeleteCourseListFailure());\n      return false;\n    }\n  };\n}\n\nexport function performDeleteAccordionCourse(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(DeleteCourseListBegin());\n    try {\n      const accordionId = data.accordionId;\n      const courseId = data.courseId;\n      const type = data.type;\n      const result = await axios.delete(\n        `${BASE_URL}course/${courseId}/${type}/${accordionId}`,\n        data\n      );\n      dispatch(DeleteCourseListSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: `${type} Course Delete Successfully`,\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(DeleteCourseListFailure());\n      return false;\n    }\n  };\n}\n","import React, { useRef, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport ConfirmDialog from \"../../../../../components/ConfirmDialog\";\nimport DataTable from \"../../../../../components/DataTable\";\nimport DisplayText from \"../../../../../components/DisplayText\";\nimport DropdownMenu from \"../../../../../components/DropdownMenu\";\nimport IconButton from \"../../../../../components/IconButton\";\nimport useWindowSize from \"../../../../../hooks/UseWindowSize\";\nimport { performDeleteAccordionCourse } from \"../../../../../redux/actionCreators/courseCreators\";\n\nconst ListAccordion = ({ fetching, deleteAccordionCourse, listData, id }) => {\n  const isMobile = useWindowSize();\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const history = useHistory();\n  const handleOnConfirm = async () => {\n    const data = {\n      type: \"accordion\",\n      courseId: id,\n      accordionId: deletingUser?.current?._id,\n    };\n    const result = await deleteAccordionCourse(data);\n    if (result.status === 200) {\n      history.push(\"/page\");\n    }\n  };\n\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() =>\n                history.push(\n                  `/page/courses/${id}/viewCourse/addAccordionCourse`,\n                  {\n                    courseId: id,\n                  }\n                )\n              }\n            >\n              Add Accordion\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                title: \"Accordion Title\",\n                field: \"AccordionTitle\",\n                width: 250,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.AccordionTitle}</span>\n                  </>\n                ),\n              },\n              {\n                title: \"Accordion Description\",\n                field: \"AccordionDescription\",\n                width: 400,\n                render: (rowData) => (\n                  <>\n                    <div\n                      style={{\n                        width: \"auto\",\n                        maxWidth: \"900px\",\n                        minWidth: \"400px\",\n                        height: \"300px\",\n                        overflow: \"scroll\",\n                      }}\n                    >\n                      <DisplayText\n                        htmlContent={rowData?.AccordionDescription}\n                      />\n                    </div>\n                  </>\n                ),\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/page/courses/${id}/viewCourse/${props.data._id}/editAccordionCourse`,\n                          {\n                            data: {\n                              ...props.data,\n                            },\n                          }\n                        ),\n                    },\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-danger\">\n                          <MdDelete size={20} className=\"me-2\" /> Delete\n                        </span>\n                      ),\n                      onClick: () => {\n                        setShowCDialog(true);\n                        deletingUser.current = props.data;\n                      },\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            data={listData}\n            loading={fetching}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Course Accordion\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.AccordionTitle}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.homepage.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  //   getHomepageDetail: (payload) => dispatch(performGetHomepageList(payload)),\n  deleteAccordionCourse: (payload) =>\n    dispatch(performDeleteAccordionCourse(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListAccordion);\n","import React, { useRef, useState } from \"react\";\nimport Avatar from \"react-avatar\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport ConfirmDialog from \"../../../../../components/ConfirmDialog\";\nimport DataTable from \"../../../../../components/DataTable\";\nimport DropdownMenu from \"../../../../../components/DropdownMenu\";\nimport IconButton from \"../../../../../components/IconButton\";\nimport useWindowSize from \"../../../../../hooks/UseWindowSize\";\nimport { performDeleteAccordionCourse } from \"../../../../../redux/actionCreators/courseCreators\";\nimport { BACKEND_URL } from \"../../../../../services/constants\";\n\nconst ListTrainingProfile = ({\n  fetching,\n  deleteAccordionCourse,\n  listData,\n  id,\n}) => {\n  const isMobile = useWindowSize();\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const history = useHistory();\n  const handleOnConfirm = async () => {\n    const data = {\n      type: \"trainingProfile\",\n      courseId: id,\n      accordionId: deletingUser?.current?._id,\n    };\n    const result = await deleteAccordionCourse(data);\n    if (result.status === 200) {\n      history.push(\"/page\");\n    }\n  };\n\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() =>\n                history.push(\n                  `/page/courses/${id}/viewCourse/addTrainerProfile`,\n                  {\n                    courseId: id,\n                  }\n                )\n              }\n            >\n              Add Trainer Profile\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                title: \"Trainer Name\",\n                field: \"trainerName\",\n                width: 400,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.trainerName}</span>\n                  </>\n                ),\n              },\n              {\n                title: \"Trainer Designation\",\n                field: \"trainerDesignation\",\n                width: 250,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.trainerDesignation}</span>\n                  </>\n                ),\n              },\n              {\n                title: \"Trainer Company\",\n                field: \"trainerCompany\",\n                width: 250,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.trainerCompany}</span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Trainer Image\",\n                field: \"trainerImage\",\n                render: (rowData) => (\n                  <>\n                    <Avatar\n                      src={BACKEND_URL + rowData?.trainerImage}\n                      name={rowData?.trainerName}\n                      size=\"70\"\n                      className=\"ff-primary rounded-circle me-3\"\n                    />\n                  </>\n                ),\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/page/courses/${id}/viewCourse/${props.data._id}/editTrainerProfile`,\n                          {\n                            data: {\n                              ...props.data,\n                            },\n                          }\n                        ),\n                    },\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-danger\">\n                          <MdDelete size={20} className=\"me-2\" /> Delete\n                        </span>\n                      ),\n                      onClick: () => {\n                        setShowCDialog(true);\n                        deletingUser.current = props.data;\n                      },\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            data={listData}\n            loading={fetching}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Course Accordion\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.trainerName}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.course.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteAccordionCourse: (payload) =>\n    dispatch(performDeleteAccordionCourse(payload)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListTrainingProfile);\n","import React, { useRef, useState } from \"react\";\nimport Avatar from \"react-avatar\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport ConfirmDialog from \"../../../../../components/ConfirmDialog\";\nimport DataTable from \"../../../../../components/DataTable\";\nimport DropdownMenu from \"../../../../../components/DropdownMenu\";\nimport IconButton from \"../../../../../components/IconButton\";\nimport useWindowSize from \"../../../../../hooks/UseWindowSize\";\nimport { performDeleteAccordionCourse } from \"../../../../../redux/actionCreators/courseCreators\";\nimport { BACKEND_URL } from \"../../../../../services/constants\";\n\nconst ListTestimonial = ({ fetching, deleteAccordionCourse, listData, id }) => {\n  const isMobile = useWindowSize();\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const history = useHistory();\n  const handleOnConfirm = async () => {\n    const data = {\n      type: \"testimonial\",\n      courseId: id,\n      accordionId: deletingUser?.current?._id,\n    };\n    const result = await deleteAccordionCourse(data);\n    if (result.status === 200) {\n      history.push(\"/page\");\n    }\n  };\n\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() =>\n                history.push(`/page/courses/${id}/viewCourse/addTestimonial`, {\n                  courseId: id,\n                })\n              }\n            >\n              Add Testimonial\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                title: \"Testimonial Name\",\n                field: \"studentName\",\n                width: 400,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.studentName}</span>\n                  </>\n                ),\n              },\n              {\n                title: \"Testimonial Description\",\n                field: \"studentDescription\",\n                width: 600,\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"600px\",\n                        paddingLeft: \"10px\",\n                        height: \"200px\",\n                        overflow: \"scroll\",\n                      }}\n                    >\n                      {rowData.studentDescription}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Testimonial User Image\",\n                field: \"studentImage\",\n                render: (rowData) => (\n                  <>\n                    <Avatar\n                      src={BACKEND_URL + rowData?.studentImage}\n                      name={rowData?.studentName}\n                      size=\"70\"\n                      className=\"ff-primary rounded-circle me-3\"\n                    />\n                  </>\n                ),\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/page/courses/${id}/viewCourse/${props.data._id}/editTestimonial`,\n                          {\n                            data: {\n                              ...props.data,\n                            },\n                          }\n                        ),\n                    },\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-danger\">\n                          <MdDelete size={20} className=\"me-2\" /> Delete\n                        </span>\n                      ),\n                      onClick: () => {\n                        setShowCDialog(true);\n                        deletingUser.current = props.data;\n                      },\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            data={listData}\n            loading={fetching}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Course Testimonial\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.studentName}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.course.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteAccordionCourse: (payload) =>\n    dispatch(performDeleteAccordionCourse(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListTestimonial);\n","import React, { useRef, useState } from \"react\";\nimport Avatar from \"react-avatar\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport ConfirmDialog from \"../../../../../components/ConfirmDialog\";\nimport DataTable from \"../../../../../components/DataTable\";\nimport DropdownMenu from \"../../../../../components/DropdownMenu\";\nimport IconButton from \"../../../../../components/IconButton\";\nimport useWindowSize from \"../../../../../hooks/UseWindowSize\";\nimport { performDeleteAccordionCourse } from \"../../../../../redux/actionCreators/courseCreators\";\nimport { BACKEND_URL } from \"../../../../../services/constants\";\n\nconst ListJoinImageSlider = ({\n  fetching,\n  deleteAccordionCourse,\n  listData,\n  id,\n}) => {\n  const isMobile = useWindowSize();\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const history = useHistory();\n  const handleOnConfirm = async () => {\n    const data = {\n      type: \"joinImage\",\n      courseId: id,\n      accordionId: deletingUser?.current?._id,\n    };\n    const result = await deleteAccordionCourse(data);\n    if (result.status === 200) {\n      history.push(\"/page\");\n    }\n  };\n\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() =>\n                history.push(\n                  `/page/courses/${id}/viewCourse/addJoinImageSlider`,\n                  {\n                    courseId: id,\n                  }\n                )\n              }\n            >\n              Add Join Image Slider\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                title: \"join Slider Description\",\n                field: \"joinDescription\",\n                width: 400,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.joinDescription}</span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Join Slider Image\",\n                field: \"joinImage\",\n                render: (rowData) => (\n                  <>\n                    <Avatar\n                      src={BACKEND_URL + rowData?.joinImage}\n                      name={rowData?.joinDescription}\n                      size=\"70\"\n                      className=\"ff-primary rounded-circle me-3\"\n                    />\n                  </>\n                ),\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/page/courses/${id}/viewCourse/${props.data._id}/editJoinSlider`,\n                          {\n                            data: {\n                              ...props.data,\n                            },\n                          }\n                        ),\n                    },\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-danger\">\n                          <MdDelete size={20} className=\"me-2\" /> Delete\n                        </span>\n                      ),\n                      onClick: () => {\n                        setShowCDialog(true);\n                        deletingUser.current = props.data;\n                      },\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            data={listData}\n            loading={fetching}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Course Join Image Slider\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.joinDescription}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.course.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteAccordionCourse: (payload) =>\n    dispatch(performDeleteAccordionCourse(payload)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListJoinImageSlider);\n","import React, { useRef, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport ConfirmDialog from \"../../../../../components/ConfirmDialog\";\nimport DataTable from \"../../../../../components/DataTable\";\nimport DropdownMenu from \"../../../../../components/DropdownMenu\";\nimport IconButton from \"../../../../../components/IconButton\";\nimport useWindowSize from \"../../../../../hooks/UseWindowSize\";\nimport { performDeleteAccordionCourse } from \"../../../../../redux/actionCreators/courseCreators\";\n\nconst ListOtherLink = ({ fetching, deleteAccordionCourse, listData, id }) => {\n  const isMobile = useWindowSize();\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const history = useHistory();\n  const handleOnConfirm = async () => {\n    const data = {\n      type: \"links\",\n      courseId: id,\n      accordionId: deletingUser?.current?._id,\n    };\n    const result = await deleteAccordionCourse(data);\n    if (result.status === 200) {\n      history.push(\"/page\");\n    }\n  };\n\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() =>\n                history.push(`/page/courses/${id}/viewCourse/addOtherLink`, {\n                  courseId: id,\n                })\n              }\n            >\n              Add Other Link\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                title: \"Course Other Name\",\n                field: \"CourseOtherName\",\n                width: 250,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.CourseOtherName}</span>\n                  </>\n                ),\n              },\n              {\n                title: \"Course Other Link\",\n                field: \"CourseOtherLink\",\n                width: 250,\n                render: (rowData) => (\n                  <>\n                    <a href={rowData?.CourseOtherLink}>\n                      {rowData.CourseOtherLink}\n                    </a>\n                  </>\n                ),\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/page/courses/${id}/viewCourse/${props.data._id}/editOtherCourseLink`,\n                          {\n                            data: {\n                              ...props.data,\n                            },\n                          }\n                        ),\n                    },\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-danger\">\n                          <MdDelete size={20} className=\"me-2\" /> Delete\n                        </span>\n                      ),\n                      onClick: () => {\n                        setShowCDialog(true);\n                        deletingUser.current = props.data;\n                      },\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            data={listData}\n            loading={fetching}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Course Other Link\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.CourseOtherName}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.course.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteAccordionCourse: (payload) =>\n    dispatch(performDeleteAccordionCourse(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListOtherLink);\n","import React, { useRef, useState } from \"react\";\nimport Avatar from \"react-avatar\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport ConfirmDialog from \"../../../../../components/ConfirmDialog\";\nimport DataTable from \"../../../../../components/DataTable\";\nimport DisplayText from \"../../../../../components/DisplayText\";\nimport DropdownMenu from \"../../../../../components/DropdownMenu\";\nimport IconButton from \"../../../../../components/IconButton\";\nimport { performDeleteAccordionCourse } from \"../../../../../redux/actionCreators/courseCreators\";\nimport { BACKEND_URL } from \"../../../../../services/constants\";\nimport useWindowSize from \"../../../../../hooks/UseWindowSize\";\n\nconst ListBriefAbout = ({ fetching, deleteAccordionCourse, listData, id }) => {\n  const isMobile = useWindowSize();\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const history = useHistory();\n  const handleOnConfirm = async () => {\n    const data = {\n      type: \"briefabout\",\n      courseId: id,\n      accordionId: deletingUser?.current?._id,\n    };\n    const result = await deleteAccordionCourse(data);\n    if (result.status === 200) {\n      history.push(\"/page\");\n    }\n  };\n\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() =>\n                history.push(`/page/courses/${id}/viewCourse/addBriefAbout`, {\n                  courseId: id,\n                })\n              }\n            >\n              Add Brief About\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                title: \"About Title\",\n                field: \"AboutTitle\",\n                width: 300,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.AboutTitle}</span>\n                  </>\n                ),\n              },\n              {\n                title: \"About Description\",\n                field: \"AboutDescription\",\n                width: 600,\n                render: (rowData) => (\n                  <>\n                    <div\n                      style={{\n                        width: \"auto\",\n                        maxWidth: \"900px\",\n                        minWidth: \"400px\",\n                        height: \"300px\",\n                        overflow: \"scroll\",\n                      }}\n                    >\n                      <DisplayText htmlContent={rowData?.AboutDescription} />\n                    </div>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"About Image\",\n                field: \"AboutImage\",\n                render: (rowData) => (\n                  <>\n                    <Avatar\n                      src={BACKEND_URL + rowData?.AboutImage}\n                      name={rowData?.AboutTitle}\n                      size=\"70\"\n                      className=\"ff-primary rounded-circle me-3\"\n                    />\n                  </>\n                ),\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/page/courses/${id}/viewCourse/${props.data._id}/editBriefAbout`,\n                          {\n                            data: {\n                              ...props.data,\n                            },\n                          }\n                        ),\n                    },\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-danger\">\n                          <MdDelete size={20} className=\"me-2\" /> Delete\n                        </span>\n                      ),\n                      onClick: () => {\n                        setShowCDialog(true);\n                        deletingUser.current = props.data;\n                      },\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            data={listData}\n            loading={fetching}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Course About Section\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.AboutTitle}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.course.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteAccordionCourse: (payload) =>\n    dispatch(performDeleteAccordionCourse(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListBriefAbout);\n","import React, { useState } from \"react\";\nimport { Card, Tab, Tabs } from \"react-bootstrap\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport IconButton from \"../../../../components/IconButton\";\nimport Page from \"../../../../components/Page\";\nimport useWindowSize from \"../../../../hooks/UseWindowSize\";\nimport ListAccordion from \"./accordionSection/ListAccordion\";\nimport ListTrainingProfile from \"./trainingProfile/ListTrainingProfile\";\nimport ListTestimonial from \"./testimonial/ListTestimonial\";\nimport ListJoinImageSlider from \"./courseJoinImageSlider/ListJoinImageSlider\";\nimport ListOtherLink from \"./courseOtherLink/ListOtherLink\";\nimport ListBriefAbout from \"./briefAbout/ListBriefAbout\";\n\nconst ViewCourse = ({ fetching }) => {\n  const isMobile = useWindowSize();\n  const history = useHistory();\n  const [key, setKey] = useState(\"accordion\");\n  const userData = history.location.state?.data;\n  const handleOnClose = () => {\n    history.goBack();\n  };\n  return (\n    <Page id=\"page--Course\" title=\"Course\">\n      <div className=\"d-flex align-items-center mb-3\">\n        <IconButton\n          icon={<BiArrowBack />}\n          variant=\"outline-link\"\n          onClick={handleOnClose}\n          className=\"p-0 me-2\"\n        />\n        <h4 className=\"m-0\"> Courses Details</h4>\n      </div>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body className={`${isMobile && \"p-0\"}`}>\n          <Tabs\n            id=\"controlled-tab-example\"\n            activeKey={key}\n            onSelect={(k) => setKey(k)}\n            className=\"mb-3\"\n          >\n            <Tab\n              eventKey=\"accordion\"\n              title={<span className=\"title_user\">Accordion Details</span>}\n            >\n              <ListAccordion\n                history={history}\n                id={userData?._id}\n                listData={userData?.accordionSections}\n              />\n            </Tab>\n            <Tab\n              eventKey=\"trainingProfile\"\n              title={\n                <span className=\"title_user\">Trainer Profile Details</span>\n              }\n            >\n              <ListTrainingProfile\n                history={history}\n                id={userData?._id}\n                listData={userData?.trainerProfiles}\n              />\n            </Tab>\n            <Tab\n              eventKey=\"testimonial\"\n              title={<span className=\"title_user\">Testimonial Details</span>}\n            >\n              <ListTestimonial\n                history={history}\n                id={userData?._id}\n                listData={userData?.testimonials}\n              />\n            </Tab>\n            <Tab\n              eventKey=\"joinImageSlider\"\n              title={\n                <span className=\"title_user\">Join Image Slider Details</span>\n              }\n            >\n              <ListJoinImageSlider\n                history={history}\n                id={userData?._id}\n                listData={userData?.joinCourseImageSlider}\n              />\n            </Tab>\n            <Tab\n              eventKey=\"otherLink\"\n              title={<span className=\"title_user\">Other Links Detail</span>}\n            >\n              <ListOtherLink\n                history={history}\n                id={userData?._id}\n                listData={userData?.courseOtherLinks}\n              />\n            </Tab>\n            <Tab\n              eventKey=\"briefAbout\"\n              title={<span className=\"title_user\">Brief About Detail</span>}\n            >\n              <ListBriefAbout\n                history={history}\n                id={userData?._id}\n                listData={userData?.briefAbout}\n              />\n            </Tab>\n          </Tabs>\n        </Card.Body>\n      </Card>\n    </Page>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.homepage.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  // getList: (payload) => dispatch(performGetCaseStudiesById(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewCourse);\n"],"sourceRoot":""}