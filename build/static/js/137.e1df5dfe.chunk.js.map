{"version":3,"sources":["partials/Page/Webinar/webinarTab/AccordionSection/ListAccordion.js","partials/Page/Webinar/webinarTab/webinarOtherLink/ListOtherLink.js","partials/Page/Webinar/webinarTab/briefAbout/ListBriefAbout.js","partials/Page/Webinar/webinarTab/testimonial/ListTestimonial.js","partials/Page/Webinar/webinarTab/JoinImageSlider/ListJoinImageSlider.js","partials/Page/Webinar/webinarTab/trainerProfile/ListTrainerProfile.js","partials/Page/Webinar/webinarTab/viewWebinar.js","components/IconButton/index.js","components/Form/Input.js","components/DataTable/index.js","components/DisplayText/index.js","components/ConfirmDialog/index.js","redux/actions/webinarActions.js","redux/actionCreators/webinarCreators.js"],"names":["connect","state","fetching","webinar","dispatch","deleteAccordionWebinar","payload","performDeleteWebinarDetail","listData","id","isMobile","useWindowSize","useState","showCDialog","setShowCDialog","deletingUser","useRef","history","useHistory","handleOnConfirm","a","data","type","courseId","accordionId","current","_id","status","push","Card","border","className","Body","IconButton","variant","icon","MdAdd","onClick","DataTable","columns","title","field","width","render","rowData","AccordionTitle","style","maxWidth","minWidth","height","overflow","DisplayText","htmlContent","AccordionDescription","actions","_","console","log","components","Action","props","DropdownMenu","menu","label","size","iconSize","search","downloadcsv","downloadExcel","filters","resetBtn","loading","ConfirmDialog","show","setShow","message","onConfirm","deleteWebinarDetail","webinarOtherName","href","webinarOtherLink","AboutTitle","AboutDescription","src","BACKEND_URL","AboutImage","name","course","deleteAccordionCourse","studentName","paddingLeft","studentDescription","studentImage","joinDescription","joinImage","trainerName","trainerDesignation","trainerCompany","trainerImage","homepage","key","setKey","userData","location","Page","goBack","Tabs","activeKey","onSelect","k","Tab","eventKey","accordionSections","trainerProfiles","WebinarOtherLinks","briefAbout","testimonials","joinWebinarImageSlider","Icon","extraProps","isLoading","disabled","children","defaultProps","Input","React","forwardRef","ref","onChange","onBlur","error","isClearable","hint","rest","uuidv4","reset","setReset","inputType","setInputType","placeholder","step","temp","defaultValue","value","restProps","htmlFor","target","fontSize","color","tableIcons","FirstPage","LastPage","NextPage","PreviousPage","SortArrow","onRowClick","options","selectedRow","getList","filterOptions","resetFilters","setFilters","refresh","tableRef","createRef","openFilters","setOpenFilters","tableProps","icons","boxShadow","localization","toolbar","searchTooltip","searchPlaceholder","showTitle","filtering","draggable","actionsColumnIndex","pageSize","emptyRowsWhenPaging","pageSizeOptions","query","Promise","resolve","reject","getDataTableQueryParams","result","undefined","docs","page","totalCount","totalDocs","rowStyle","backgroundColor","handleReset","useEffect","exportType","exportFromJSON","types","csv","newData","map","transformedData","Object","values","reduce","acc","obj","transformedObject","Link","fileName","xls","preview","handlePreview","contentRef","sanitizedHTML","DOMPurify","sanitize","innerHTML","querySelectorAll","forEach","preTag","html","textContent","DOMParser","parseFromString","body","divTag","document","createElement","parentNode","replaceChild","whiteSpace","wordBreak","borderRadius","getReason","bodyHtml","loadingBtnText","footer","submitting","setSubmitting","reason","setReason","handleClose","onHide","backdrop","keyboard","Header","closeButton","Title","dangerouslySetInnerHTML","__html","e","Footer","animation","length","PostImageWebinarListBegin","WEBINAR_TYPES","POST_IMAGE_WEBINAR_LIST_BEGIN","PostImageWebinarListSuccess","POST_IMAGE_WEBINAR_LIST_SUCCESS","PostImageWebinarListFailure","POST_IMAGE_WEBINAR_LIST_FAILURE","DeleteWebinarListBegin","DELETE_WEBINAR_LIST_BEGIN","DeleteWebinarListSuccess","DELETE_WEBINAR_LIST_SUCCESS","DeleteWebinarListFailure","DELETE_WEBINAR_LIST_FAILURE","UpdateWebinarListBegin","UPDATE_WEBINAR_LIST_BEGIN","UpdateWebinarListSuccess","UPDATE_WEBINAR_LIST_SUCCESS","UpdateWebinarListFailure","UPDATE_WEBINAR_LIST_FAILURE","performGetWebinarList","resetSnack","GET_ALL_WEBINAR_LIST_BEGIN","axios","get","BASE_URL","GET_ALL_WEBINAR_LIST_SUCCESS","showSnack","msg","getWebinarListFailure","GET_ALL_WEBINAR_LIST_FAILURE","performPostImageWebinar","post","performPostWebinar","performUpdateWebinar","put","performDeleteWebinar","delete","performPostWebinarDetail","WebinarId","performUpdateWebinarDetail"],"mappings":"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","file":"static/js/137.e1df5dfe.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport ConfirmDialog from \"../../../../../components/ConfirmDialog\";\nimport DataTable from \"../../../../../components/DataTable\";\nimport DisplayText from \"../../../../../components/DisplayText\";\nimport DropdownMenu from \"../../../../../components/DropdownMenu\";\nimport IconButton from \"../../../../../components/IconButton\";\nimport useWindowSize from \"../../../../../hooks/UseWindowSize\";\nimport { performDeleteWebinarDetail } from \"../../../../../redux/actionCreators/webinarCreators\";\n\nconst ListAccordion = ({ fetching, deleteAccordionWebinar, listData, id }) => {\n  const isMobile = useWindowSize();\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const history = useHistory();\n  const handleOnConfirm = async () => {\n    const data = {\n      type: \"accordion\",\n      courseId: id,\n      accordionId: deletingUser?.current?._id,\n    };\n    const result = await deleteAccordionWebinar(data);\n    if (result.status === 200) {\n      history.push(\"/page\");\n    }\n  };\n\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() =>\n                history.push(`/page/webinars/${id}/viewWebinar/addAccordion`, {\n                  courseId: id,\n                })\n              }\n            >\n              Add Accordion\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                title: \"Accordion Title\",\n                field: \"AccordionTitle\",\n                width: 250,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.AccordionTitle}</span>\n                  </>\n                ),\n              },\n              {\n                title: \"Accordion Description\",\n                field: \"AccordionDescription\",\n                width: 400,\n                render: (rowData) => (\n                  <>\n                    <div\n                      style={{\n                        width: \"auto\",\n                        maxWidth: \"900px\",\n                        minWidth: \"400px\",\n                        height: \"300px\",\n                        overflow: \"scroll\",\n                      }}\n                    >\n                      <DisplayText\n                        htmlContent={rowData?.AccordionDescription}\n                      />\n                    </div>\n                  </>\n                ),\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/page/webinars/${id}/viewWebinar/${props.data._id}/editAccordion`,\n                          {\n                            data: {\n                              ...props.data,\n                            },\n                          }\n                        ),\n                    },\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-danger\">\n                          <MdDelete size={20} className=\"me-2\" /> Delete\n                        </span>\n                      ),\n                      onClick: () => {\n                        setShowCDialog(true);\n                        deletingUser.current = props.data;\n                      },\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            data={listData}\n            loading={fetching}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Webinar Accordion\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.AccordionTitle}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.webinar.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteAccordionWebinar: (payload) =>\n    dispatch(performDeleteWebinarDetail(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListAccordion);\n","import React, { useRef, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport ConfirmDialog from \"../../../../../components/ConfirmDialog\";\nimport DataTable from \"../../../../../components/DataTable\";\nimport DropdownMenu from \"../../../../../components/DropdownMenu\";\nimport IconButton from \"../../../../../components/IconButton\";\nimport useWindowSize from \"../../../../../hooks/UseWindowSize\";\nimport { performDeleteWebinarDetail } from \"../../../../../redux/actionCreators/webinarCreators\";\n\nconst ListOtherLink = ({ fetching, deleteWebinarDetail, listData, id }) => {\n  const isMobile = useWindowSize();\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const history = useHistory();\n  const handleOnConfirm = async () => {\n    const data = {\n      type: \"links\",\n      courseId: id,\n      accordionId: deletingUser?.current?._id,\n    };\n    const result = await deleteWebinarDetail(data);\n    if (result.status === 200) {\n      history.push(\"/page\");\n    }\n  };\n\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() =>\n                history.push(`/page/webinars/${id}/viewWebinar/addOtherLink`, {\n                  courseId: id,\n                })\n              }\n            >\n              Add Other Link\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                title: \"Webinar Other Name\",\n                field: \"webinarOtherName\",\n                width: 250,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.webinarOtherName}</span>\n                  </>\n                ),\n              },\n              {\n                title: \"Webinar Other Link\",\n                field: \"webinarOtherLink\",\n                width: 250,\n                render: (rowData) => (\n                  <>\n                    <a href={rowData?.webinarOtherLink}>\n                      {rowData.webinarOtherLink}\n                    </a>\n                  </>\n                ),\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/page/webinars/${id}/viewWebinar/${props.data._id}/editOtherLink`,\n                          {\n                            data: {\n                              ...props.data,\n                            },\n                          }\n                        ),\n                    },\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-danger\">\n                          <MdDelete size={20} className=\"me-2\" /> Delete\n                        </span>\n                      ),\n                      onClick: () => {\n                        setShowCDialog(true);\n                        deletingUser.current = props.data;\n                      },\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            data={listData}\n            loading={fetching}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Webinar Other Link\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.webinarOtherName}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.webinar.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteWebinarDetail: (payload) =>\n    dispatch(performDeleteWebinarDetail(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListOtherLink);\n","import React, { useRef, useState } from \"react\";\nimport Avatar from \"react-avatar\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport ConfirmDialog from \"../../../../../components/ConfirmDialog\";\nimport DataTable from \"../../../../../components/DataTable\";\nimport DisplayText from \"../../../../../components/DisplayText\";\nimport DropdownMenu from \"../../../../../components/DropdownMenu\";\nimport IconButton from \"../../../../../components/IconButton\";\nimport useWindowSize from \"../../../../../hooks/UseWindowSize\";\nimport { performDeleteWebinarDetail } from \"../../../../../redux/actionCreators/webinarCreators\";\nimport { BACKEND_URL } from \"../../../../../services/constants\";\n\nconst ListBriefAbout = ({ fetching, deleteAccordionWebinar, listData, id }) => {\n  const isMobile = useWindowSize();\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const history = useHistory();\n  const handleOnConfirm = async () => {\n    const data = {\n      type: \"briefabout\",\n      courseId: id,\n      accordionId: deletingUser?.current?._id,\n    };\n    const result = await deleteAccordionWebinar(data);\n    if (result.status === 200) {\n      history.push(\"/page\");\n    }\n  };\n\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() =>\n                history.push(`/page/webinars/${id}/viewWebinar/addBriefAbout`, {\n                  courseId: id,\n                })\n              }\n            >\n              Add Brief About\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                title: \"About Title\",\n                field: \"AboutTitle\",\n                width: 300,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.AboutTitle}</span>\n                  </>\n                ),\n              },\n              {\n                title: \"About Description\",\n                field: \"AboutDescription\",\n                width: 600,\n                render: (rowData) => (\n                  <>\n                    <div\n                      style={{\n                        width: \"auto\",\n                        maxWidth: \"900px\",\n                        minWidth: \"400px\",\n                        height: \"300px\",\n                        overflow: \"scroll\",\n                      }}\n                    >\n                      <DisplayText htmlContent={rowData?.AboutDescription} />\n                    </div>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"About Image\",\n                field: \"AboutImage\",\n                render: (rowData) => (\n                  <>\n                    <Avatar\n                      src={BACKEND_URL + rowData?.AboutImage}\n                      name={rowData?.AboutTitle}\n                      size=\"70\"\n                      className=\"ff-primary rounded-circle me-3\"\n                    />\n                  </>\n                ),\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/page/webinars/${id}/viewWebinar/${props.data._id}/editBriefAbout`,\n                          {\n                            data: {\n                              ...props.data,\n                            },\n                          }\n                        ),\n                    },\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-danger\">\n                          <MdDelete size={20} className=\"me-2\" /> Delete\n                        </span>\n                      ),\n                      onClick: () => {\n                        setShowCDialog(true);\n                        deletingUser.current = props.data;\n                      },\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            data={listData}\n            loading={fetching}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Webinar About Section\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.AboutTitle}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.webinar.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteAccordionWebinar: (payload) =>\n    dispatch(performDeleteWebinarDetail(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListBriefAbout);\n","import React, { useRef, useState } from \"react\";\nimport Avatar from \"react-avatar\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport ConfirmDialog from \"../../../../../components/ConfirmDialog\";\nimport DataTable from \"../../../../../components/DataTable\";\nimport DropdownMenu from \"../../../../../components/DropdownMenu\";\nimport IconButton from \"../../../../../components/IconButton\";\nimport useWindowSize from \"../../../../../hooks/UseWindowSize\";\nimport { performDeleteWebinarDetail } from \"../../../../../redux/actionCreators/webinarCreators\";\nimport { BACKEND_URL } from \"../../../../../services/constants\";\n\nconst ListTestimonial = ({ fetching, deleteAccordionCourse, listData, id }) => {\n  const isMobile = useWindowSize();\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const history = useHistory();\n  const handleOnConfirm = async () => {\n    const data = {\n      type: \"testimonial\",\n      courseId: id,\n      accordionId: deletingUser?.current?._id,\n    };\n    const result = await deleteAccordionCourse(data);\n    if (result.status === 200) {\n      history.push(\"/page\");\n    }\n  };\n\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() =>\n                history.push(\n                  `/page/webinars/${id}/viewWebinar/addTestimonial`,\n                  { courseId: id }\n                )\n              }\n            >\n              Add Testimonial\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                title: \"Testimonial Name\",\n                field: \"studentName\",\n                width: 400,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.studentName}</span>\n                  </>\n                ),\n              },\n              {\n                title: \"Testimonial Description\",\n                field: \"studentDescription\",\n                width: 600,\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"600px\",\n                        paddingLeft: \"10px\",\n                        height: \"200px\",\n                        overflow: \"scroll\",\n                      }}\n                    >\n                      {rowData.studentDescription}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Testimonial User Image\",\n                field: \"studentImage\",\n                render: (rowData) => (\n                  <>\n                    <Avatar\n                      src={BACKEND_URL + rowData?.studentImage}\n                      name={rowData?.studentName}\n                      size=\"70\"\n                      className=\"ff-primary rounded-circle me-3\"\n                    />\n                  </>\n                ),\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/page/webinars/${id}/viewWebinar/${props.data._id}/editTestimonial`,\n                          {\n                            data: {\n                              ...props.data,\n                            },\n                          }\n                        ),\n                    },\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-danger\">\n                          <MdDelete size={20} className=\"me-2\" /> Delete\n                        </span>\n                      ),\n                      onClick: () => {\n                        setShowCDialog(true);\n                        deletingUser.current = props.data;\n                      },\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            data={listData}\n            loading={fetching}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Webinar Testimonial\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.studentName}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.course.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteAccordionCourse: (payload) =>\n    dispatch(performDeleteWebinarDetail(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListTestimonial);\n","import React, { useRef, useState } from \"react\";\nimport Avatar from \"react-avatar\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport ConfirmDialog from \"../../../../../components/ConfirmDialog\";\nimport DataTable from \"../../../../../components/DataTable\";\nimport DropdownMenu from \"../../../../../components/DropdownMenu\";\nimport IconButton from \"../../../../../components/IconButton\";\nimport useWindowSize from \"../../../../../hooks/UseWindowSize\";\nimport { performDeleteWebinarDetail } from \"../../../../../redux/actionCreators/webinarCreators\";\nimport { BACKEND_URL } from \"../../../../../services/constants\";\n\nconst ListJoinImageSlider = ({\n  fetching,\n  deleteAccordionCourse,\n  listData,\n  id,\n}) => {\n  const isMobile = useWindowSize();\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const history = useHistory();\n  const handleOnConfirm = async () => {\n    const data = {\n      type: \"joinImage\",\n      courseId: id,\n      accordionId: deletingUser?.current?._id,\n    };\n    const result = await deleteAccordionCourse(data);\n    if (result.status === 200) {\n      history.push(\"/page\");\n    }\n  };\n\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() =>\n                history.push(`/page/webinars/${id}/viewWebinar/addJoinImageSlider`, { courseId: id })\n              }\n            >\n              Add Join Image Slider\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                title: \"join Slider Description\",\n                field: \"joinDescription\",\n                width: 400,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.joinDescription}</span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Join Slider Image\",\n                field: \"joinImage\",\n                render: (rowData) => (\n                  <>\n                    <Avatar\n                      src={BACKEND_URL + rowData?.joinImage}\n                      name={rowData?.joinDescription}\n                      size=\"70\"\n                      className=\"ff-primary rounded-circle me-3\"\n                    />\n                  </>\n                ),\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/page/webinars/${id}/viewWebinar/${props.data._id}/editJoinSlider`,\n                          {\n                            data: {\n                              ...props.data,\n                            },\n                          }\n                        ),\n                    },\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-danger\">\n                          <MdDelete size={20} className=\"me-2\" /> Delete\n                        </span>\n                      ),\n                      onClick: () => {\n                        setShowCDialog(true);\n                        deletingUser.current = props.data;\n                      },\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            data={listData}\n            loading={fetching}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete webinar Join Image Slider\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.joinDescription}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.webinar.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteAccordionCourse: (payload) =>\n    dispatch(performDeleteWebinarDetail(payload)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListJoinImageSlider);\n","import React, { useRef, useState } from \"react\";\nimport Avatar from \"react-avatar\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport ConfirmDialog from \"../../../../../components/ConfirmDialog\";\nimport DataTable from \"../../../../../components/DataTable\";\nimport DropdownMenu from \"../../../../../components/DropdownMenu\";\nimport IconButton from \"../../../../../components/IconButton\";\nimport useWindowSize from \"../../../../../hooks/UseWindowSize\";\nimport { performDeleteWebinarDetail } from \"../../../../../redux/actionCreators/webinarCreators\";\nimport { BACKEND_URL } from \"../../../../../services/constants\";\n\nconst ListTrainingProfile = ({\n  fetching,\n  deleteAccordionCourse,\n  listData,\n  id,\n}) => {\n  const isMobile = useWindowSize();\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const history = useHistory();\n  const handleOnConfirm = async () => {\n    const data = {\n      type: \"trainingProfile\",\n      courseId: id,\n      accordionId: deletingUser?.current?._id,\n    };\n    const result = await deleteAccordionCourse(data);\n    if (result.status === 200) {\n      history.push(\"/page\");\n    }\n  };\n\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() =>\n                history.push(\n                  `/page/webinars/${id}/viewWebinar/addTrainerProfile`,\n                  { courseId: id }\n                )\n              }\n            >\n              Add Trainer Profile\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                title: \"Trainer Name\",\n                field: \"trainerName\",\n                width: 400,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.trainerName}</span>\n                  </>\n                ),\n              },\n              {\n                title: \"Trainer Designation\",\n                field: \"trainerDesignation\",\n                width: 250,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.trainerDesignation}</span>\n                  </>\n                ),\n              },\n              {\n                title: \"Trainer Company\",\n                field: \"trainerCompany\",\n                width: 250,\n                render: (rowData) => (\n                  <>\n                    <span>{rowData.trainerCompany}</span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Trainer Image\",\n                field: \"trainerImage\",\n                render: (rowData) => (\n                  <>\n                    <Avatar\n                      src={BACKEND_URL + rowData?.trainerImage}\n                      name={rowData?.trainerName}\n                      size=\"70\"\n                      className=\"ff-primary rounded-circle me-3\"\n                    />\n                  </>\n                ),\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/page/webinars/${id}/viewWebinar/${props.data._id}/editTrainerProfile`,\n                          {\n                            data: {\n                              ...props.data,\n                            },\n                          }\n                        ),\n                    },\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-danger\">\n                          <MdDelete size={20} className=\"me-2\" /> Delete\n                        </span>\n                      ),\n                      onClick: () => {\n                        setShowCDialog(true);\n                        deletingUser.current = props.data;\n                      },\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            data={listData}\n            loading={fetching}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Webinar Accordion\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.trainerName}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.webinar.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteAccordionCourse: (payload) =>\n    dispatch(performDeleteWebinarDetail(payload)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListTrainingProfile);\n","import React, { useState } from \"react\";\nimport { Card, Tab, Tabs } from \"react-bootstrap\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport IconButton from \"../../../../components/IconButton\";\nimport Page from \"../../../../components/Page\";\nimport useWindowSize from \"../../../../hooks/UseWindowSize\";\nimport ListAccordion from \"./AccordionSection/ListAccordion\";\nimport ListOtherLink from \"./webinarOtherLink/ListOtherLink\";\nimport ListBriefAbout from \"./briefAbout/ListBriefAbout\";\nimport ListTestimonial from \"./testimonial/ListTestimonial\";\nimport ListJoinImageSlider from \"./JoinImageSlider/ListJoinImageSlider\";\nimport ListTrainingProfile from \"./trainerProfile/ListTrainerProfile\";\n\nconst ViewWebinar = ({ fetching }) => {\n  const isMobile = useWindowSize();\n  const history = useHistory();\n  const [key, setKey] = useState(\"accordion\");\n  const userData = history.location.state?.data;\n  const handleOnClose = () => {\n    history.goBack();\n  };\n  return (\n    <Page id=\"page--Webinar\" title=\"Webinar\">\n      <div className=\"d-flex align-items-center mb-3\">\n        <IconButton\n          icon={<BiArrowBack />}\n          variant=\"outline-link\"\n          onClick={handleOnClose}\n          className=\"p-0 me-2\"\n        />\n        <h4 className=\"m-0\">Webinar Details</h4>\n      </div>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body className={`${isMobile && \"p-0\"}`}>\n          <Tabs\n            id=\"controlled-tab-example\"\n            activeKey={key}\n            onSelect={(k) => setKey(k)}\n            className=\"mb-3\"\n          >\n            <Tab\n              eventKey=\"accordion\"\n              title={<span className=\"title_user\">Accordion Details</span>}\n            >\n              <ListAccordion\n                history={history}\n                id={userData?._id}\n                listData={userData?.accordionSections}\n              />\n            </Tab>\n            <Tab\n              eventKey=\"trainingProfile\"\n              title={\n                <span className=\"title_user\">Trainer Profile Details</span>\n              }\n            >\n              <ListTrainingProfile\n                history={history}\n                id={userData?._id}\n                listData={userData?.trainerProfiles}\n              />\n            </Tab>\n            <Tab\n              eventKey=\"otherLink\"\n              title={<span className=\"title_user\">Other Links Detail</span>}\n            >\n              <ListOtherLink\n                history={history}\n                id={userData?._id}\n                listData={userData?.WebinarOtherLinks}\n              />\n            </Tab>\n            <Tab\n              eventKey=\"briefAbout\"\n              title={<span className=\"title_user\">Brief About Detail</span>}\n            >\n              <ListBriefAbout\n                history={history}\n                id={userData?._id}\n                listData={userData?.briefAbout}\n              />\n            </Tab>\n            <Tab\n              eventKey=\"testimonial\"\n              title={<span className=\"title_user\">Testimonial Details</span>}\n            >\n              <ListTestimonial\n                history={history}\n                id={userData?._id}\n                listData={userData?.testimonials}\n              />\n            </Tab>\n            <Tab\n              eventKey=\"joinImageSlider\"\n              title={\n                <span className=\"title_user\">Join Image Slider Details</span>\n              }\n            >\n              <ListJoinImageSlider\n                history={history}\n                id={userData?._id}\n                listData={userData?.joinWebinarImageSlider}\n              />\n            </Tab>\n          </Tabs>\n        </Card.Body>\n      </Card>\n    </Page>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.homepage.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  // getList: (payload) => dispatch(performGetCaseStudiesById(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewWebinar);\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Icon = (icon, size = \"\") => {\r\n  const extraProps = {\r\n    size: 22\r\n  };\r\n  if (size === 'lg') {\r\n    extraProps.size = 32;\r\n  } else if (size === 'sm') {\r\n    extraProps.size = 18;\r\n  }\r\n  return <icon.type {...icon.props} {...extraProps} />\r\n}\r\n\r\nconst IconButton = ({ variant, className, onClick, size, isLoading, disabled, children, icon }) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      className={`btn-icon ${size ? `btn-icon-${size}` : ''} ${isLoading ? `btn-icon-loading` : ''} ${className}`}\r\n      onClick={onClick}\r\n      size={size}\r\n      disabled={isLoading || disabled}\r\n    >\r\n      <span>{Icon(icon, size)}{children && <span>{children}</span>}</span>\r\n    </Button>\r\n  )\r\n}\r\n\r\nIconButton.propTypes = {\r\n  children: PropTypes.node,\r\n  variant: PropTypes.string,\r\n  className: PropTypes.string,\r\n  size: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  isLoading: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  icon: PropTypes.any,\r\n};\r\n\r\nIconButton.defaultProps = {\r\n  variant: \"default\",\r\n  className: \"\",\r\n  size: \"\",\r\n  onClick: () => null,\r\n  isLoading: false,\r\n  disabled: false,\r\n  icon: null\r\n}\r\n\r\nexport default IconButton;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { MdCancel } from \"react-icons/md\";\r\nimport { AiOutlineEyeInvisible, AiOutlineEye } from \"react-icons/ai\";\r\n\r\nimport IconButton from \"../IconButton\";\r\n\r\nconst Input = React.forwardRef(\r\n  (\r\n    {\r\n      className,\r\n      onChange,\r\n      onBlur,\r\n      label,\r\n      id,\r\n      error,\r\n      isClearable,\r\n      hint,\r\n      type,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const [reset, setReset] = useState(uuidv4());\r\n    const [inputType, setInputType] = useState(type);\r\n\r\n    const onClear = () => {\r\n      onChange({ target: { value: \"\" } });\r\n      setReset(uuidv4());\r\n    };\r\n\r\n    const restProps = () => {\r\n      const temp = { ...rest };\r\n      temp.defaultValue = temp.value || \"\";\r\n      delete temp.value;\r\n      return temp;\r\n    };\r\n\r\n    return (\r\n      <span\r\n        className={`d-inline-block w-100 position-relative pt-2 pb-4 input__wrapper ${\r\n          error ? \"error\" : \"\"\r\n        }`}\r\n        ref={ref}\r\n      >\r\n        <input\r\n          key={`input-${reset}`}\r\n          id={`input-${id}`}\r\n          type={inputType}\r\n          className={`${className}${isClearable ? \" input-clearable\" : \"\"}`}\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          placeholder={label}\r\n          step=\"any\"\r\n          {...restProps()}\r\n        />\r\n        <label htmlFor={`input-${id}`}>{label}</label>\r\n        <span className=\"input-error\">{error}</span>\r\n        {isClearable && (\r\n          <MdCancel className=\"input-clear-btn\" size={18} onClick={onClear} />\r\n        )}\r\n        {type === \"password\" && (\r\n          <IconButton\r\n            icon={\r\n              inputType === \"password\" ? (\r\n                <AiOutlineEyeInvisible />\r\n              ) : (\r\n                <AiOutlineEye />\r\n              )\r\n            }\r\n            variant=\"outline-link\"\r\n            onClick={() =>\r\n              setInputType(inputType === \"password\" ? \"text\" : \"password\")\r\n            }\r\n            className=\"p-0 m-0 position-absolute btn--show-password\"\r\n          />\r\n        )}\r\n        {hint !== \"\" && (\r\n          <span style={{ fontSize: \"12px\", color: \"#c1b1b1\" }}>{hint}</span>\r\n        )}\r\n      </span>\r\n    );\r\n  }\r\n);\r\n\r\nInput.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  label: PropTypes.string,\r\n  id: PropTypes.string,\r\n  error: PropTypes.string,\r\n  isClearable: PropTypes.bool,\r\n  type: PropTypes.string,\r\n  hint: PropTypes.string,\r\n};\r\n\r\nInput.defaultProps = {\r\n  className: \"\",\r\n  onChange: () => null,\r\n  onBlur: () => null,\r\n  label: \"\",\r\n  id: uuidv4(),\r\n  error: \"\",\r\n  isClearable: false,\r\n  type: \"text\",\r\n  hint: \"\",\r\n};\r\n\r\nexport default Input;\r\n","import MaterialTable from \"@material-table/core\";\r\nimport exportFromJSON from \"export-from-json\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { createRef, forwardRef, useEffect, useState } from \"react\";\r\nimport {\r\n  MdArrowUpward,\r\n  MdChevronLeft,\r\n  MdChevronRight,\r\n  MdDownload,\r\n  MdFilterAlt,\r\n  MdFirstPage,\r\n  MdLastPage,\r\n  MdRefresh,\r\n} from \"react-icons/md\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { getDataTableQueryParams } from \"../../utils/index\";\r\nimport IconButton from \"../IconButton\";\r\n\r\nconst tableIcons = {\r\n  FirstPage: forwardRef((props, ref) => <MdFirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <MdLastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <MdChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <MdChevronLeft {...props} ref={ref} />\r\n  )),\r\n  SortArrow: forwardRef((props, ref) => <MdArrowUpward {...props} ref={ref} />),\r\n};\r\n\r\nconst DataTable = ({\r\n  loading,\r\n  columns,\r\n  actions,\r\n  components,\r\n  onRowClick,\r\n  options,\r\n  selectedRow,\r\n  getList,\r\n  search,\r\n  downloadcsv,\r\n  downloadExcel,\r\n  filters,\r\n  filterOptions,\r\n  data,\r\n  setFilters,\r\n  resetFilters,\r\n  refresh,\r\n  resetBtn,\r\n}) => {\r\n  const tableRef = createRef();\r\n  const [reset, setReset] = useState(uuidv4());\r\n  const [openFilters, setOpenFilters] = useState(false);\r\n  const tableProps = {\r\n    isLoading: loading,\r\n    icons: tableIcons,\r\n    style: {\r\n      boxShadow: \"none\",\r\n    },\r\n    localization: {\r\n      toolbar: {\r\n        searchTooltip: \"Search\",\r\n        searchPlaceholder: \"Search\",\r\n      },\r\n    },\r\n    options: {\r\n      showTitle: false,\r\n      search: true,\r\n      toolbar: true,\r\n      filtering: openFilters,\r\n      draggable: false,\r\n      actionsColumnIndex: -1,\r\n      pageSize: 10,\r\n      emptyRowsWhenPaging: false, // To avoid of having empty rows\r\n      pageSizeOptions: [10, 30, 50, 100, 500],\r\n      ...options,\r\n    },\r\n    columns: columns,\r\n    data: data\r\n      ? data\r\n      : (query) =>\r\n          new Promise(async (resolve, reject) => {\r\n            try {\r\n              let result = await getList(getDataTableQueryParams(query));\r\n              if (!result.data) {\r\n                return reject();\r\n              }\r\n              return resolve({\r\n                data:\r\n                  result.data.docs !== undefined\r\n                    ? result.data.docs\r\n                    : result.data,\r\n                page: result.data.page !== undefined ? result.data.page - 1 : 0,\r\n                totalCount:\r\n                  result.data.totalDocs !== undefined\r\n                    ? result.data.totalDocs\r\n                    : 0, // this is the total count of rows or documents\r\n              });\r\n            } catch (err) {\r\n              return reject(err);\r\n            }\r\n          }),\r\n    actions: actions,\r\n    onRowClick: onRowClick,\r\n  };\r\n\r\n  if (components) {\r\n    tableProps.components = components;\r\n  }\r\n\r\n  if (onRowClick) {\r\n    tableProps.options = {\r\n      ...tableProps.options,\r\n      rowStyle: (rowData) => ({\r\n        backgroundColor:\r\n          selectedRow && selectedRow === rowData.id ? \"#f5f5f5\" : \"#FFF\",\r\n      }),\r\n      onRowClick: onRowClick,\r\n    };\r\n  }\r\n\r\n  const handleDownloadCSV = () => {\r\n    const fileName = \"CSVformat\";\r\n    const exportType = exportFromJSON.types.csv;\r\n    const newData = data.map(({ data, ...rest }) => {\r\n      const transformedData = data\r\n        ? Object.values(data).reduce((acc, obj) => ({ ...acc, ...obj }), {})\r\n        : {};\r\n      const transformedObject = {\r\n        _id: rest._id,\r\n        Link: rest.Link,\r\n        ...transformedData,\r\n      };\r\n      return data ? transformedObject : rest;\r\n    });\r\n    exportFromJSON({ data: newData, fileName, exportType });\r\n  };\r\n\r\n  const handleDownloadXLS = () => {\r\n    const fileName = \"ExcelFormat\";\r\n    const exportType = exportFromJSON.types.xls;\r\n    const newData = data.map(({ data, ...rest }) => {\r\n      const transformedData = data\r\n        ? Object.values(data).reduce((acc, obj) => ({ ...acc, ...obj }), {})\r\n        : {};\r\n      const transformedObject = {\r\n        _id: rest._id,\r\n        Link: rest.Link,\r\n        ...transformedData,\r\n      };\r\n      return data ? transformedObject : rest;\r\n    });\r\n    exportFromJSON({ data: newData, fileName, exportType });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    if (onRowClick) {\r\n      onRowClick(null);\r\n    }\r\n    resetFilters();\r\n    setReset(uuidv4());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (refresh) {\r\n      handleReset();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [refresh]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 d-flex flex-lg-row flex-column position-relative table-toolbar\">\r\n        <span className=\"d-flex flex-wrap zindex-dropdown end-0 gap-2 gap-lg-3 align-items-center justify-content-end ms-auto\">\r\n          {filters && (\r\n            <IconButton\r\n              icon={<MdFilterAlt />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={() => setOpenFilters(!openFilters)}\r\n              disabled={loading}\r\n            >\r\n              Filters\r\n            </IconButton>\r\n          )}\r\n\r\n          {resetBtn && (\r\n            <IconButton\r\n              icon={<MdRefresh />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleReset}\r\n              disabled={loading}\r\n            >\r\n              Reset\r\n            </IconButton>\r\n          )}\r\n          {downloadcsv && (\r\n            <IconButton\r\n              icon={<MdDownload />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleDownloadCSV}\r\n              disabled={loading}\r\n            >\r\n              CSV\r\n            </IconButton>\r\n          )}\r\n          {downloadExcel && (\r\n            <IconButton\r\n              icon={<MdDownload />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleDownloadXLS}\r\n              disabled={loading}\r\n            >\r\n              Excel\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      </div>\r\n\r\n      <MaterialTable\r\n        key={`data-table-${reset}`}\r\n        tableRef={tableRef}\r\n        {...tableProps}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nDataTable.propTypes = {\r\n  loading: PropTypes.bool,\r\n  columns: PropTypes.array.isRequired,\r\n  actions: PropTypes.array,\r\n  components: PropTypes.any,\r\n  onRowClick: PropTypes.any,\r\n  options: PropTypes.object,\r\n  selectedRow: PropTypes.string,\r\n  getList: PropTypes.func.isRequired,\r\n  search: PropTypes.bool,\r\n  filters: PropTypes.bool,\r\n  filterOptions: PropTypes.array,\r\n  setFilters: PropTypes.func,\r\n  resetFilters: PropTypes.func,\r\n  refresh: PropTypes.string,\r\n  resetBtn: PropTypes.bool,\r\n};\r\n\r\nDataTable.defaultProps = {\r\n  loading: false,\r\n  actions: [],\r\n  components: null,\r\n  onRowClick: null,\r\n  options: {},\r\n  selectedRow: null,\r\n  search: true,\r\n  filters: false,\r\n  filterOptions: [],\r\n  setFilters: () => null,\r\n  resetFilters: () => null,\r\n  refresh: null,\r\n  resetBtn: true,\r\n};\r\n\r\nexport default DataTable;\r\n","import DOMPurify from \"dompurify\";\nimport React, { useEffect, useRef } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { RxCross2 } from \"react-icons/rx\";\n\nconst DisplayText = ({ htmlContent, preview, handlePreview }) => {\n  const contentRef = useRef(null);\n  const convertHtmlToPlainText = (html) => {\n    const doc = new DOMParser().parseFromString(html, \"text/html\");\n    return doc.body.textContent || \"\";\n  };\n  useEffect(() => {\n    const sanitizedHTML = DOMPurify.sanitize(htmlContent);\n    contentRef.current.innerHTML = sanitizedHTML;\n    const preTags = contentRef.current.querySelectorAll(\"pre\");\n    preTags.forEach((preTag) => {\n      const textContent = convertHtmlToPlainText(preTag.innerHTML);\n      preTag.innerHTML = textContent;\n      const divTag = document.createElement(\"div\");\n      divTag.innerHTML = preTag.innerHTML;\n      preTag.parentNode.replaceChild(divTag, preTag);\n    });\n  }, [htmlContent]);\n\n  return (\n    <div className=\"position-relative\">\n      {preview && (\n        <div className=\"w-100 d-flex justify-content-end mb-2\">\n          <Button variant=\"primary\" onClick={() => handlePreview()}>\n            <RxCross2 />\n          </Button>\n        </div>\n      )}\n      <div\n        ref={contentRef}\n        style={{\n          whiteSpace: \"pre-wrap\",\n          wordBreak: \"break-word\",\n          border: \"1px solid grey\",\n          borderRadius: \"8px\",\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default DisplayText;\n","import React, { useState } from 'react';\r\nimport { Modal, Button, Spinner } from 'react-bootstrap';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Input from '../Form/Input';\r\n\r\nconst ConfirmDialog = ({ show, setShow, title, message, onConfirm, getReason, bodyHtml, loadingBtnText, footer }) => {\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [reason, setReason] = useState('');\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const handleOnConfirm = async () => {\r\n    setSubmitting(true);\r\n    await onConfirm(reason);\r\n    setSubmitting(false);\r\n    setShow(false);\r\n    setReason('');\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div dangerouslySetInnerHTML={{ __html: message }}></div>\r\n        {bodyHtml}\r\n        {getReason && (\r\n          <div>\r\n            <Input id=\"reason\" name=\"reason\" label=\"Reason\" value={reason} onChange={(e) => setReason(e.target.value)} />\r\n          </div>\r\n        )}\r\n      </Modal.Body>\r\n      {footer && (\r\n        <Modal.Footer>\r\n          <Button variant=\"default\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          {!getReason && (\r\n            <Button variant=\"danger\" onClick={handleOnConfirm}>\r\n              {!submitting && <span>Confirm</span>}\r\n              {submitting && (\r\n                <span>\r\n                  {loadingBtnText} <Spinner size=\"sm\" animation=\"border\" />\r\n                </span>\r\n              )}\r\n            </Button>\r\n          )}\r\n          {getReason && (\r\n            <Button disabled={reason === '' || reason.length <= 3} variant=\"danger\" onClick={handleOnConfirm}>\r\n              {!submitting && <span>Confirm</span>}\r\n              {submitting && (\r\n                <span>\r\n                  {loadingBtnText} <Spinner size=\"sm\" animation=\"border\" />\r\n                </span>\r\n              )}\r\n            </Button>\r\n          )}\r\n        </Modal.Footer>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nConfirmDialog.propTypes = {\r\n  show: PropTypes.bool,\r\n  setShow: PropTypes.func,\r\n  title: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onConfirm: PropTypes.func,\r\n  getReason: PropTypes.bool,\r\n  bodyHtml: PropTypes.node,\r\n  loadingBtnText: PropTypes.string,\r\n  footer: PropTypes.bool,\r\n};\r\n\r\nConfirmDialog.defaultProps = {\r\n  show: false,\r\n  setShow: () => null,\r\n  title: 'Give a title',\r\n  message: 'Your message here',\r\n  onConfirm: () => null,\r\n  getReason: false,\r\n  bodyHtml: <></>,\r\n  loadingBtnText: 'Deleting',\r\n  footer: true,\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import WEBINAR_TYPES from \"../types/webinarTypes\";\n\nexport const resetState = () => ({\n  type: WEBINAR_TYPES.RESET_STATE,\n});\n\nexport const getWebinarListBegin = () => ({\n  type: WEBINAR_TYPES.GET_ALL_WEBINAR_LIST_BEGIN,\n});\n\nexport const getWebinarListSuccess = (data) => ({\n  type: WEBINAR_TYPES.GET_ALL_WEBINAR_LIST_SUCCESS,\n  payload: data,\n});\n\nexport const getWebinarListFailure = (error) => ({\n  type: WEBINAR_TYPES.GET_ALL_WEBINAR_LIST_FAILURE,\n  payload: error,\n});\n\nexport const PostImageWebinarListBegin = () => ({\n  type: WEBINAR_TYPES.POST_IMAGE_WEBINAR_LIST_BEGIN,\n});\n\nexport const PostImageWebinarListSuccess = (data) => ({\n  type: WEBINAR_TYPES.POST_IMAGE_WEBINAR_LIST_SUCCESS,\n  payload: data,\n});\n\nexport const PostImageWebinarListFailure = (error) => ({\n  type: WEBINAR_TYPES.POST_IMAGE_WEBINAR_LIST_FAILURE,\n  payload: error,\n});\n\nexport const DeleteWebinarListBegin = () => ({\n  type: WEBINAR_TYPES.DELETE_WEBINAR_LIST_BEGIN,\n});\n\nexport const DeleteWebinarListSuccess = (data) => ({\n  type: WEBINAR_TYPES.DELETE_WEBINAR_LIST_SUCCESS,\n  payload: data,\n});\n\nexport const DeleteWebinarListFailure = (error) => ({\n  type: WEBINAR_TYPES.DELETE_WEBINAR_LIST_FAILURE,\n  payload: error,\n});\n\nexport const UpdateWebinarListBegin = () => ({\n  type: WEBINAR_TYPES.UPDATE_WEBINAR_LIST_BEGIN,\n});\n\nexport const UpdateWebinarListSuccess = (data) => ({\n  type: WEBINAR_TYPES.UPDATE_WEBINAR_LIST_SUCCESS,\n  payload: data,\n});\n\nexport const UpdateWebinarListFailure = (error) => ({\n  type: WEBINAR_TYPES.UPDATE_WEBINAR_LIST_FAILURE,\n  payload: error,\n});\n","import axios from \"axios\";\nimport { BASE_URL } from \"../../services/constants\";\nimport { resetSnack, showSnack } from \"../actions/alertActions\";\nimport {\n  DeleteWebinarListBegin,\n  DeleteWebinarListFailure,\n  DeleteWebinarListSuccess,\n  PostImageWebinarListBegin,\n  PostImageWebinarListFailure,\n  PostImageWebinarListSuccess,\n  UpdateWebinarListBegin,\n  UpdateWebinarListFailure,\n  UpdateWebinarListSuccess,\n  getWebinarListBegin,\n  getWebinarListFailure,\n  getWebinarListSuccess,\n} from \"../actions/webinarActions\";\n\nexport function performGetWebinarList() {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(getWebinarListBegin());\n    try {\n      const result = await axios.get(`${BASE_URL}webinar`);\n      dispatch(getWebinarListSuccess(result?.data?.docs?.data));\n      dispatch(\n        showSnack({\n          message: result?.data?.msg,\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(getWebinarListFailure());\n      return false;\n    }\n  };\n}\n\nexport function performPostImageWebinar(data, type) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(PostImageWebinarListBegin());\n    try {\n      const result = await axios.post(\n        `${BASE_URL}webinar/upload/${type}`,\n        data\n      );\n      dispatch(PostImageWebinarListSuccess(result?.data));\n      dispatch(\n        showSnack({\n          message: `${type} Retrieved Successfully`,\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(PostImageWebinarListFailure());\n      return false;\n    }\n  };\n}\n\nexport function performPostWebinar(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(PostImageWebinarListBegin());\n    try {\n      const result = await axios.post(`${BASE_URL}webinar`, data);\n      dispatch(PostImageWebinarListSuccess(result?.data));\n      dispatch(\n        showSnack({\n          message: `Webinar Add Successfully`,\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(PostImageWebinarListFailure());\n      return false;\n    }\n  };\n}\n\nexport function performUpdateWebinar(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(UpdateWebinarListBegin());\n    try {\n      const id = data.id;\n      const result = await axios.put(`${BASE_URL}webinar/${id}`, data);\n      dispatch(UpdateWebinarListSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: \"Webinar Update Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(UpdateWebinarListFailure());\n      return false;\n    }\n  };\n}\n\nexport function performDeleteWebinar(id) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(DeleteWebinarListBegin());\n    try {\n      await axios.delete(`${BASE_URL}webinar/${id}`);\n      dispatch(DeleteWebinarListSuccess());\n      dispatch(\n        showSnack({\n          message: \"Webinar Delete Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return true;\n    } catch (error) {\n      dispatch(DeleteWebinarListFailure());\n      return false;\n    }\n  };\n}\n\n//Dynamic Data adding in webinar\n\nexport function performPostWebinarDetail(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(PostImageWebinarListBegin());\n    try {\n      const WebinarId = data.courseId;\n      const type = data.type;\n      const result = await axios.post(\n        `${BASE_URL}Webinar/${WebinarId}/${type}`,\n        data\n      );\n      dispatch(PostImageWebinarListSuccess(result?.data));\n      dispatch(\n        showSnack({\n          message: `${type} Add Successfully`,\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(PostImageWebinarListFailure());\n      return false;\n    }\n  };\n}\n\nexport function performUpdateWebinarDetail(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(UpdateWebinarListBegin());\n    try {\n      const accordionId = data.accordionId;\n      const WebinarId = data.courseId;\n      const type = data.type;\n      const result = await axios.put(\n        `${BASE_URL}webinar/${WebinarId}/${type}/${accordionId}`,\n        data\n      );\n      dispatch(UpdateWebinarListSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: `${type} Webinar Update Successfully`,\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(UpdateWebinarListFailure());\n      return false;\n    }\n  };\n}\n\nexport function performDeleteWebinarDetail(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(DeleteWebinarListBegin());\n    try {\n      const accordionId = data.accordionId;\n      const WebinarId = data.courseId;\n      const type = data.type;\n      const result = await axios.delete(\n        `${BASE_URL}Webinar/${WebinarId}/${type}/${accordionId}`,\n        data\n      );\n      dispatch(DeleteWebinarListSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: `${type} Webinar Delete Successfully`,\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(DeleteWebinarListFailure());\n      return false;\n    }\n  };\n}\n"],"sourceRoot":""}