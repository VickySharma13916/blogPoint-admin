{"version":3,"sources":["partials/seodata/ListSeodata.js","containers/seodata/index.js","components/IconButton/index.js","../node_modules/@mui/system/node_modules/clsx/dist/clsx.mjs","components/DataTable/index.js","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/Box/Box.js","../node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js","redux/actions/seodataActions.js","redux/actionCreators/seoDataCreators.js"],"names":["connect","state","fetching","seodata","dispatch","getList","payload","performGetSeoDataList","refresh","history","useState","data","setData","fetchData","a","result","status","docs","useEffect","isMobile","useWindowSize","Card","border","className","Body","IconButton","variant","icon","type","MdAdd","onClick","push","DataTable","columns","width","title","field","render","rowData","src","BACKEND_URL","metaImage","name","size","style","metaTitle","metaDescription","metaKeywords","split","map","tag","createdAt","moment","format","actions","_","console","log","components","Action","props","DropdownMenu","menu","label","_id","iconSize","onRowClick","loading","search","downloadcsv","downloadExcel","filters","resetBtn","Seodata","useHistory","path","useRouteMatch","setRefresh","Page","id","children","uuidv4","Icon","extraProps","isLoading","disabled","defaultProps","r","e","t","f","n","Array","isArray","length","clsx","arguments","tableIcons","FirstPage","forwardRef","ref","LastPage","NextPage","PreviousPage","SortArrow","options","selectedRow","filterOptions","resetFilters","setFilters","tableRef","createRef","reset","setReset","openFilters","setOpenFilters","tableProps","icons","boxShadow","localization","toolbar","searchTooltip","searchPlaceholder","showTitle","filtering","draggable","actionsColumnIndex","pageSize","emptyRowsWhenPaging","pageSizeOptions","query","Promise","resolve","reject","getDataTableQueryParams","undefined","page","totalCount","totalDocs","rowStyle","backgroundColor","handleReset","exportType","exportFromJSON","types","csv","newData","rest","transformedData","Object","values","reduce","acc","obj","transformedObject","Link","fileName","xls","_excluded","defaultTheme","createTheme","Box","themeId","defaultClassName","generateClassName","BoxRoot","styled","shouldForwardProp","prop","styleFunctionSx","React","inProps","theme","useTheme","_extendSxProp","extendSxProp","component","other","_objectWithoutPropertiesLoose","_jsx","_extends","as","createBox","THEME_ID","ClassNameGenerator","generate","finalSx","inSx","sx","_props$theme$unstable","_props$theme","systemProps","otherProps","config","unstable_sxConfig","defaultSxConfig","keys","forEach","splitProps","isPlainObject","postSeoDataBegin","SEO_DATA_TYPES","POST_SEO_DATA_BEGIN","postSeoDataSuccess","POST_SEO_DATA_SUCCESS","postSeoDataFailure","error","POST_SEO_DATA_FAILURE","updateSeoDataSuccess","UPDATE_SEO_DATA_SUCCESS","resetSnack","GET_LIST_BEGIN","axios","get","BASE_URL","GET_LIST_SUCCESS","showSnack","message","getSeoDataListFailure","GET_LIST_FAILURE","performAddMetaImage","post","performPostSeoData","performUpdateSeoData","UPDATE_SEO_DATA_BEGIN","put","updateSeoDataFailure","UPDATE_SEO_DATA_FAILURE"],"mappings":"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","file":"static/js/139.c37cfe42.chunk.js","sourcesContent":["import moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { MdAdd, MdEdit } from \"react-icons/md\";\r\nimport { connect } from \"react-redux\";\r\nimport DataTable from \"../../components/DataTable\";\r\nimport DropdownMenu from \"../../components/DropdownMenu\";\r\nimport IconButton from \"../../components/IconButton\";\r\nimport useWindowSize from \"../../hooks/UseWindowSize\";\r\nimport { performGetSeoDataList } from \"../../redux/actionCreators/seoDataCreators\";\r\nimport Avatar from \"react-avatar\";\r\nimport { BACKEND_URL } from \"../../services/constants\";\r\n\r\nconst ListSeodata = ({ fetching, getList, refresh, history }) => {\r\n  const [data, setData] = useState([]);\r\n  const fetchData = async () => {\r\n    const result = await getList();\r\n    if (result.status === 200) {\r\n      setData(result?.data?.docs?.data);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const isMobile = useWindowSize();\r\n  return (\r\n    <>\r\n      <Card\r\n        border=\"light\"\r\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\r\n      >\r\n        <Card.Body className={`${isMobile && \"p-0\"}`}>\r\n          <div\r\n            className={`${\r\n              isMobile ? \"my-3\" : \"my-2\"\r\n            } d-flex justify-content-end`}\r\n          >\r\n            <IconButton\r\n              variant=\"primary\"\r\n              icon={{ type: MdAdd }}\r\n              onClick={() => history.push(`/seodata/addSeoData`)}\r\n            >\r\n              Add SEO Data\r\n            </IconButton>\r\n          </div>\r\n          <DataTable\r\n            columns={[\r\n              {\r\n                width: 300,\r\n                title: \"Meta Image\",\r\n                field: \"metaImage\",\r\n                render: (rowData) => (\r\n                  <>\r\n                    <Avatar\r\n                      src={BACKEND_URL + rowData?.metaImage}\r\n                      name={rowData?.name}\r\n                      size=\"70\"\r\n                      className=\"ff-primary rounded-circle me-3\"\r\n                    />\r\n                  </>\r\n                ),\r\n              },\r\n              {\r\n                width: 300,\r\n                title: \"Meta Title\",\r\n                field: \"metaTitle\",\r\n                render: (rowData) => (\r\n                  <>\r\n                    <span\r\n                      style={{\r\n                        width: \"300px\",\r\n                      }}\r\n                    >\r\n                      {rowData?.metaTitle}\r\n                    </span>\r\n                  </>\r\n                ),\r\n              },\r\n              {\r\n                width: 300,\r\n                title: \"Name\",\r\n                field: \"name\",\r\n                render: (rowData) => (\r\n                  <>\r\n                    <span\r\n                      style={{\r\n                        width: \"300px\",\r\n                      }}\r\n                    >\r\n                      {rowData?.name}\r\n                    </span>\r\n                  </>\r\n                ),\r\n              },\r\n              {\r\n                width: 500,\r\n                title: \"Meta Description\",\r\n                field: \"metaDescription\",\r\n                render: (rowData) => (\r\n                  <>\r\n                    <span\r\n                      style={{\r\n                        width: \"300px\",\r\n                      }}\r\n                    >\r\n                      {rowData?.metaDescription}\r\n                    </span>\r\n                  </>\r\n                ),\r\n              },\r\n              {\r\n                width: 300,\r\n                title: \"Meta Keywords Tags\",\r\n                field: \"metaKeywords\",\r\n                render: (rowData) => (\r\n                  <>\r\n                    <span\r\n                      style={{\r\n                        width: \"300px\",\r\n                      }}\r\n                    >\r\n                      {rowData?.metaKeywords?.split(\",\")?.map((tag) => (\r\n                        <div className=\"text-primary\">{tag}</div>\r\n                      ))}\r\n                    </span>\r\n                  </>\r\n                ),\r\n              },\r\n              {\r\n                width: 300,\r\n                title: \"Date\",\r\n                field: \"createdAt\",\r\n                render: (rowData) => (\r\n                  <span\r\n                    style={{\r\n                      width: \"500px\",\r\n                    }}\r\n                  >\r\n                    {rowData.createdAt\r\n                      ? moment(rowData.createdAt).format(\"DD,MM, YYYY\")\r\n                      : \"N/A\"}\r\n                  </span>\r\n                ),\r\n              },\r\n            ]}\r\n            actions={[\r\n              {\r\n                onClick: (_, rowData) => console.log(rowData),\r\n              },\r\n            ]}\r\n            components={{\r\n              Action: (props) => (\r\n                <DropdownMenu\r\n                  menu={[\r\n                    {\r\n                      label: (\r\n                        <span className=\"d-flex align-items-center text-secondary\">\r\n                          <MdEdit size={20} className=\"me-2\" /> Edit\r\n                        </span>\r\n                      ),\r\n                      onClick: () =>\r\n                        history.push(`/seodata/${props.data._id}/edit`, {\r\n                          data: props.data,\r\n                        }),\r\n                    },\r\n                  ]}\r\n                  iconSize=\"large\"\r\n                />\r\n              ),\r\n            }}\r\n            onRowClick={(_, rowData) => null}\r\n            loading={fetching}\r\n            data={data}\r\n            search={false}\r\n            downloadcsv={true}\r\n            downloadExcel={true}\r\n            filters={true}\r\n            resetBtn={false}\r\n            refresh={refresh}\r\n          />\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  fetching: state.seodata.fetching,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getList: (payload) => dispatch(performGetSeoDataList(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListSeodata);\r\n","import React, { useState } from \"react\";\r\nimport { Route, useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Page from \"../../components/Page\";\r\nimport ListSeodata from \"../../partials/seodata/ListSeodata\";\r\n\r\nconst Seodata = () => {\r\n  const history = useHistory();\r\n  const { path } = useRouteMatch();\r\n  const [refresh, setRefresh] = useState(\"\");\r\n\r\n  return (\r\n    <Page id=\"page--Seodata\" title=\"Seodata\">\r\n      <div className=\"d-flex align-items-start mb-3\">\r\n        <h1 className=\"m-0\">SEO Data</h1>\r\n      </div>\r\n      <Route\r\n        path={`${path}/`}\r\n        children={\r\n          <ListSeodata\r\n            refresh={refresh}\r\n            setRefresh={() => setRefresh(uuidv4())}\r\n            history={history}\r\n          />\r\n        }\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Seodata;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Icon = (icon, size = \"\") => {\r\n  const extraProps = {\r\n    size: 22\r\n  };\r\n  if (size === 'lg') {\r\n    extraProps.size = 32;\r\n  } else if (size === 'sm') {\r\n    extraProps.size = 18;\r\n  }\r\n  return <icon.type {...icon.props} {...extraProps} />\r\n}\r\n\r\nconst IconButton = ({ variant, className, onClick, size, isLoading, disabled, children, icon }) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      className={`btn-icon ${size ? `btn-icon-${size}` : ''} ${isLoading ? `btn-icon-loading` : ''} ${className}`}\r\n      onClick={onClick}\r\n      size={size}\r\n      disabled={isLoading || disabled}\r\n    >\r\n      <span>{Icon(icon, size)}{children && <span>{children}</span>}</span>\r\n    </Button>\r\n  )\r\n}\r\n\r\nIconButton.propTypes = {\r\n  children: PropTypes.node,\r\n  variant: PropTypes.string,\r\n  className: PropTypes.string,\r\n  size: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  isLoading: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  icon: PropTypes.any,\r\n};\r\n\r\nIconButton.defaultProps = {\r\n  variant: \"default\",\r\n  className: \"\",\r\n  size: \"\",\r\n  onClick: () => null,\r\n  isLoading: false,\r\n  disabled: false,\r\n  icon: null\r\n}\r\n\r\nexport default IconButton;","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import MaterialTable from \"@material-table/core\";\r\nimport exportFromJSON from \"export-from-json\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { createRef, forwardRef, useEffect, useState } from \"react\";\r\nimport {\r\n  MdArrowUpward,\r\n  MdChevronLeft,\r\n  MdChevronRight,\r\n  MdDownload,\r\n  MdFilterAlt,\r\n  MdFirstPage,\r\n  MdLastPage,\r\n  MdRefresh,\r\n} from \"react-icons/md\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { getDataTableQueryParams } from \"../../utils/index\";\r\nimport IconButton from \"../IconButton\";\r\n\r\nconst tableIcons = {\r\n  FirstPage: forwardRef((props, ref) => <MdFirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <MdLastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <MdChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <MdChevronLeft {...props} ref={ref} />\r\n  )),\r\n  SortArrow: forwardRef((props, ref) => <MdArrowUpward {...props} ref={ref} />),\r\n};\r\n\r\nconst DataTable = ({\r\n  loading,\r\n  columns,\r\n  actions,\r\n  components,\r\n  onRowClick,\r\n  options,\r\n  selectedRow,\r\n  getList,\r\n  search,\r\n  downloadcsv,\r\n  downloadExcel,\r\n  filters,\r\n  filterOptions,\r\n  data,\r\n  setFilters,\r\n  resetFilters,\r\n  refresh,\r\n  resetBtn,\r\n}) => {\r\n  const tableRef = createRef();\r\n  const [reset, setReset] = useState(uuidv4());\r\n  const [openFilters, setOpenFilters] = useState(false);\r\n  const tableProps = {\r\n    isLoading: loading,\r\n    icons: tableIcons,\r\n    style: {\r\n      boxShadow: \"none\",\r\n    },\r\n    localization: {\r\n      toolbar: {\r\n        searchTooltip: \"Search\",\r\n        searchPlaceholder: \"Search\",\r\n      },\r\n    },\r\n    options: {\r\n      showTitle: false,\r\n      search: true,\r\n      toolbar: true,\r\n      filtering: openFilters,\r\n      draggable: false,\r\n      actionsColumnIndex: -1,\r\n      pageSize: 10,\r\n      emptyRowsWhenPaging: false, // To avoid of having empty rows\r\n      pageSizeOptions: [10, 30, 50, 100, 500],\r\n      ...options,\r\n    },\r\n    columns: columns,\r\n    data: data\r\n      ? data\r\n      : (query) =>\r\n          new Promise(async (resolve, reject) => {\r\n            try {\r\n              let result = await getList(getDataTableQueryParams(query));\r\n              if (!result.data) {\r\n                return reject();\r\n              }\r\n              return resolve({\r\n                data:\r\n                  result.data.docs !== undefined\r\n                    ? result.data.docs\r\n                    : result.data,\r\n                page: result.data.page !== undefined ? result.data.page - 1 : 0,\r\n                totalCount:\r\n                  result.data.totalDocs !== undefined\r\n                    ? result.data.totalDocs\r\n                    : 0, // this is the total count of rows or documents\r\n              });\r\n            } catch (err) {\r\n              return reject(err);\r\n            }\r\n          }),\r\n    actions: actions,\r\n    onRowClick: onRowClick,\r\n  };\r\n\r\n  if (components) {\r\n    tableProps.components = components;\r\n  }\r\n\r\n  if (onRowClick) {\r\n    tableProps.options = {\r\n      ...tableProps.options,\r\n      rowStyle: (rowData) => ({\r\n        backgroundColor:\r\n          selectedRow && selectedRow === rowData.id ? \"#f5f5f5\" : \"#FFF\",\r\n      }),\r\n      onRowClick: onRowClick,\r\n    };\r\n  }\r\n\r\n  const handleDownloadCSV = () => {\r\n    const fileName = \"CSVformat\";\r\n    const exportType = exportFromJSON.types.csv;\r\n    const newData = data.map(({ data, ...rest }) => {\r\n      const transformedData = data\r\n        ? Object.values(data).reduce((acc, obj) => ({ ...acc, ...obj }), {})\r\n        : {};\r\n      const transformedObject = {\r\n        _id: rest._id,\r\n        Link: rest.Link,\r\n        ...transformedData,\r\n      };\r\n      return data ? transformedObject : rest;\r\n    });\r\n    exportFromJSON({ data: newData, fileName, exportType });\r\n  };\r\n\r\n  const handleDownloadXLS = () => {\r\n    const fileName = \"ExcelFormat\";\r\n    const exportType = exportFromJSON.types.xls;\r\n    const newData = data.map(({ data, ...rest }) => {\r\n      const transformedData = data\r\n        ? Object.values(data).reduce((acc, obj) => ({ ...acc, ...obj }), {})\r\n        : {};\r\n      const transformedObject = {\r\n        _id: rest._id,\r\n        Link: rest.Link,\r\n        ...transformedData,\r\n      };\r\n      return data ? transformedObject : rest;\r\n    });\r\n    exportFromJSON({ data: newData, fileName, exportType });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    if (onRowClick) {\r\n      onRowClick(null);\r\n    }\r\n    resetFilters();\r\n    setReset(uuidv4());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (refresh) {\r\n      handleReset();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [refresh]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 d-flex flex-lg-row flex-column position-relative table-toolbar\">\r\n        <span className=\"d-flex flex-wrap zindex-dropdown end-0 gap-2 gap-lg-3 align-items-center justify-content-end ms-auto\">\r\n          {filters && (\r\n            <IconButton\r\n              icon={<MdFilterAlt />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={() => setOpenFilters(!openFilters)}\r\n              disabled={loading}\r\n            >\r\n              Filters\r\n            </IconButton>\r\n          )}\r\n\r\n          {resetBtn && (\r\n            <IconButton\r\n              icon={<MdRefresh />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleReset}\r\n              disabled={loading}\r\n            >\r\n              Reset\r\n            </IconButton>\r\n          )}\r\n          {downloadcsv && (\r\n            <IconButton\r\n              icon={<MdDownload />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleDownloadCSV}\r\n              disabled={loading}\r\n            >\r\n              CSV\r\n            </IconButton>\r\n          )}\r\n          {downloadExcel && (\r\n            <IconButton\r\n              icon={<MdDownload />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleDownloadXLS}\r\n              disabled={loading}\r\n            >\r\n              Excel\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      </div>\r\n\r\n      <MaterialTable\r\n        key={`data-table-${reset}`}\r\n        tableRef={tableRef}\r\n        {...tableProps}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nDataTable.propTypes = {\r\n  loading: PropTypes.bool,\r\n  columns: PropTypes.array.isRequired,\r\n  actions: PropTypes.array,\r\n  components: PropTypes.any,\r\n  onRowClick: PropTypes.any,\r\n  options: PropTypes.object,\r\n  selectedRow: PropTypes.string,\r\n  getList: PropTypes.func.isRequired,\r\n  search: PropTypes.bool,\r\n  filters: PropTypes.bool,\r\n  filterOptions: PropTypes.array,\r\n  setFilters: PropTypes.func,\r\n  resetFilters: PropTypes.func,\r\n  refresh: PropTypes.string,\r\n  resetBtn: PropTypes.bool,\r\n};\r\n\r\nDataTable.defaultProps = {\r\n  loading: false,\r\n  actions: [],\r\n  components: null,\r\n  onRowClick: null,\r\n  options: {},\r\n  selectedRow: null,\r\n  search: true,\r\n  filters: false,\r\n  filterOptions: [],\r\n  setFilters: () => null,\r\n  resetFilters: () => null,\r\n  refresh: null,\r\n  resetBtn: true,\r\n};\r\n\r\nexport default DataTable;\r\n","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sx\"];\nimport { isPlainObject } from '@mui/utils';\nimport defaultSxConfig from './defaultSxConfig';\nconst splitProps = props => {\n  var _props$theme$unstable, _props$theme;\n  const result = {\n    systemProps: {},\n    otherProps: {}\n  };\n  const config = (_props$theme$unstable = props == null || (_props$theme = props.theme) == null ? void 0 : _props$theme.unstable_sxConfig) != null ? _props$theme$unstable : defaultSxConfig;\n  Object.keys(props).forEach(prop => {\n    if (config[prop]) {\n      result.systemProps[prop] = props[prop];\n    } else {\n      result.otherProps[prop] = props[prop];\n    }\n  });\n  return result;\n};\nexport default function extendSxProp(props) {\n  const {\n      sx: inSx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    systemProps,\n    otherProps\n  } = splitProps(other);\n  let finalSx;\n  if (Array.isArray(inSx)) {\n    finalSx = [systemProps, ...inSx];\n  } else if (typeof inSx === 'function') {\n    finalSx = (...args) => {\n      const result = inSx(...args);\n      if (!isPlainObject(result)) {\n        return systemProps;\n      }\n      return _extends({}, systemProps, result);\n    };\n  } else {\n    finalSx = _extends({}, systemProps, inSx);\n  }\n  return _extends({}, otherProps, {\n    sx: finalSx\n  });\n}","import SEO_DATA_TYPES from \"../types/seodataTypes\";\r\n\r\nexport const resetState = () => ({\r\n  type: SEO_DATA_TYPES.RESET_STATE,\r\n});\r\n\r\nexport const getSeoDataListBegin = () => ({\r\n  type: SEO_DATA_TYPES.GET_LIST_BEGIN,\r\n});\r\n\r\nexport const getSeoDataListSuccess = (data) => ({\r\n  type: SEO_DATA_TYPES.GET_LIST_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const getSeoDataListFailure = (error) => ({\r\n  type: SEO_DATA_TYPES.GET_LIST_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const postSeoDataBegin = () => ({\r\n  type: SEO_DATA_TYPES.POST_SEO_DATA_BEGIN,\r\n});\r\n\r\nexport const postSeoDataSuccess = (data) => ({\r\n  type: SEO_DATA_TYPES.POST_SEO_DATA_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const postSeoDataFailure = (error) => ({\r\n  type: SEO_DATA_TYPES.POST_SEO_DATA_FAILURE,\r\n  payload: error,\r\n});\r\nexport const updateSeoDataBegin = () => ({\r\n  type: SEO_DATA_TYPES.UPDATE_SEO_DATA_BEGIN,\r\n});\r\n\r\nexport const updateSeoDataSuccess = (data) => ({\r\n  type: SEO_DATA_TYPES.UPDATE_SEO_DATA_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const updateSeoDataFailure = (error) => ({\r\n  type: SEO_DATA_TYPES.UPDATE_SEO_DATA_FAILURE,\r\n  payload: error,\r\n});\r\n","import { showSnack, resetSnack } from \"../actions/alertActions\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../services/constants\";\r\nimport {\r\n  getSeoDataListBegin,\r\n  getSeoDataListFailure,\r\n  getSeoDataListSuccess,\r\n  postSeoDataBegin,\r\n  postSeoDataFailure,\r\n  postSeoDataSuccess,\r\n  updateSeoDataBegin,\r\n  updateSeoDataFailure,\r\n  updateSeoDataSuccess,\r\n} from \"../actions/seodataActions\";\r\n\r\nexport function performGetSeoDataList() {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(getSeoDataListBegin());\r\n    try {\r\n      const result = await axios.get(`${BASE_URL}seodata`);\r\n      dispatch(getSeoDataListSuccess(result?.data?.docs?.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"SEO Data Retrieved Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(getSeoDataListFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performAddMetaImage(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postSeoDataBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}seodata/uploads`, data);\r\n      dispatch(postSeoDataSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Meta Image Add Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postSeoDataFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performPostSeoData(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postSeoDataBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}seodata`, data);\r\n      dispatch(postSeoDataSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"SEO Data Add Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postSeoDataFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performUpdateSeoData(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(updateSeoDataBegin());\r\n    try {\r\n      const id = data.id;\r\n      const result = await axios.put(`${BASE_URL}seodata/${id}`, data);\r\n      dispatch(updateSeoDataSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"SEO Data Update Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(updateSeoDataFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n"],"sourceRoot":""}