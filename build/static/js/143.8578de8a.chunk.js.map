{"version":3,"sources":["components/IconButton/index.js","components/Form/Input.js","services/utils.js","services/requests.js","redux/actionCreators/authCreators.js","redux/actions/accountActions.js","redux/actionCreators/accountCreators.js","partials/Account/EditProfile.js"],"names":["Icon","icon","size","extraProps","type","props","IconButton","variant","className","onClick","isLoading","disabled","children","defaultProps","Input","React","forwardRef","ref","onChange","onBlur","label","id","error","isClearable","hint","rest","useState","uuidv4","reset","setReset","inputType","setInputType","placeholder","step","temp","defaultValue","value","restProps","htmlFor","target","style","fontSize","color","options","extractErrorMessage","data","_","isString","console","log","errorHandler","status","store","dispatch","showSnack","message","getToken","a","state","getState","token","auth","access","refresh","decodedToken","jwt_decode","date","Date","setUTCSeconds","exp","valueOf","axios","post","BASE_URL","ENDPOINTS","REFRESH_TOKEN","refreshToken","result","refreshTokenSuccess","accessToken","response","makeRequest","Promise","resolve","reject","defaultOptions","baseURL","headers","reason","timeout","client","create","interceptors","request","use","config","Authorization","then","catch","GET","url","params","method","POST","performGetAdminList","resetSnack","getAdminDetailsBegin","get","getAdminDetailsSuccess","docs","msg","getAdminDetailsFailure","performLogin","loginBegin","loginSuccess","user","role","loginFailure","performAdminImagePost","postProfileDetailBegin","postProfileDetailSuccess","postProfileDetailFailure","performSignUp","performForgotPassword","setSubmitting","performEmailVerificationAdmin","postVerifyEmailBegin","VERIFY_EMAIL","postVerifyEmailSuccess","postVerifyEmailFailure","performForgotPasswordEmailVerificationAdmin","passwordVerifyEmailBegin","passwordVerifyEmailSuccess","passwordVerifyEmailFailure","performResetPassword","resetPasswordBegin","resetPasswordSuccess","resetPasswordFailure","performDeleteAdmin","delete","resetState","ACCOUNT_TYPES","RESET_STATE","updateProfileBegin","UPDATE_PROFILE_BEGIN","updateProfileSuccess","UPDATE_PROFILE_SUCCESS","updateProfileFailure","UPDATE_PROFILE_FAILURE","payload","updatePasswordBegin","UPDATE_PASSWORD_BEGIN","updatePasswordSuccess","UPDATE_PASSWORD_SUCCESS","updatePasswordFailure","UPDATE_PASSWORD_FAILURE","performUpdateProfile","put","updateUserData","performUpdateAdminProfile","postAdminProfileDetailsBegin","postAdminProfileDetailsSuccess","postAdminProfileDetailsFailure","performUpdatePassword","schema","yup","firstName","required","lastName","mobileNumber","connect","submitting","account","handleUpdate","handleAddAdminImage","history","useHistory","useForm","resolver","yupResolver","defaultValues","register","handleSubmit","errors","formState","adminImage","setadminImage","fileInputImageRef","useRef","adminImageUrl","Postbrandlogoimages","e","file","files","formData","FormData","append","name","imageUrl","onSubmit","newData","_id","push","isMobile","useWindowSize","useEffect","title","border","maxWidth","Header","to","Body","xs","src","BACKEND_URL","alt","display","MdAddAPhoto","current","click","md","animation"],"mappings":"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","file":"static/js/143.8578de8a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Icon = (icon, size = \"\") => {\r\n  const extraProps = {\r\n    size: 22\r\n  };\r\n  if (size === 'lg') {\r\n    extraProps.size = 32;\r\n  } else if (size === 'sm') {\r\n    extraProps.size = 18;\r\n  }\r\n  return <icon.type {...icon.props} {...extraProps} />\r\n}\r\n\r\nconst IconButton = ({ variant, className, onClick, size, isLoading, disabled, children, icon }) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      className={`btn-icon ${size ? `btn-icon-${size}` : ''} ${isLoading ? `btn-icon-loading` : ''} ${className}`}\r\n      onClick={onClick}\r\n      size={size}\r\n      disabled={isLoading || disabled}\r\n    >\r\n      <span>{Icon(icon, size)}{children && <span>{children}</span>}</span>\r\n    </Button>\r\n  )\r\n}\r\n\r\nIconButton.propTypes = {\r\n  children: PropTypes.node,\r\n  variant: PropTypes.string,\r\n  className: PropTypes.string,\r\n  size: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  isLoading: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  icon: PropTypes.any,\r\n};\r\n\r\nIconButton.defaultProps = {\r\n  variant: \"default\",\r\n  className: \"\",\r\n  size: \"\",\r\n  onClick: () => null,\r\n  isLoading: false,\r\n  disabled: false,\r\n  icon: null\r\n}\r\n\r\nexport default IconButton;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { MdCancel } from \"react-icons/md\";\r\nimport { AiOutlineEyeInvisible, AiOutlineEye } from \"react-icons/ai\";\r\n\r\nimport IconButton from \"../IconButton\";\r\n\r\nconst Input = React.forwardRef(\r\n  (\r\n    {\r\n      className,\r\n      onChange,\r\n      onBlur,\r\n      label,\r\n      id,\r\n      error,\r\n      isClearable,\r\n      hint,\r\n      type,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const [reset, setReset] = useState(uuidv4());\r\n    const [inputType, setInputType] = useState(type);\r\n\r\n    const onClear = () => {\r\n      onChange({ target: { value: \"\" } });\r\n      setReset(uuidv4());\r\n    };\r\n\r\n    const restProps = () => {\r\n      const temp = { ...rest };\r\n      temp.defaultValue = temp.value || \"\";\r\n      delete temp.value;\r\n      return temp;\r\n    };\r\n\r\n    return (\r\n      <span\r\n        className={`d-inline-block w-100 position-relative pt-2 pb-4 input__wrapper ${\r\n          error ? \"error\" : \"\"\r\n        }`}\r\n        ref={ref}\r\n      >\r\n        <input\r\n          key={`input-${reset}`}\r\n          id={`input-${id}`}\r\n          type={inputType}\r\n          className={`${className}${isClearable ? \" input-clearable\" : \"\"}`}\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          placeholder={label}\r\n          step=\"any\"\r\n          {...restProps()}\r\n        />\r\n        <label htmlFor={`input-${id}`}>{label}</label>\r\n        <span className=\"input-error\">{error}</span>\r\n        {isClearable && (\r\n          <MdCancel className=\"input-clear-btn\" size={18} onClick={onClear} />\r\n        )}\r\n        {type === \"password\" && (\r\n          <IconButton\r\n            icon={\r\n              inputType === \"password\" ? (\r\n                <AiOutlineEyeInvisible />\r\n              ) : (\r\n                <AiOutlineEye />\r\n              )\r\n            }\r\n            variant=\"outline-link\"\r\n            onClick={() =>\r\n              setInputType(inputType === \"password\" ? \"text\" : \"password\")\r\n            }\r\n            className=\"p-0 m-0 position-absolute btn--show-password\"\r\n          />\r\n        )}\r\n        {hint !== \"\" && (\r\n          <span style={{ fontSize: \"12px\", color: \"#c1b1b1\" }}>{hint}</span>\r\n        )}\r\n      </span>\r\n    );\r\n  }\r\n);\r\n\r\nInput.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  label: PropTypes.string,\r\n  id: PropTypes.string,\r\n  error: PropTypes.string,\r\n  isClearable: PropTypes.bool,\r\n  type: PropTypes.string,\r\n  hint: PropTypes.string,\r\n};\r\n\r\nInput.defaultProps = {\r\n  className: \"\",\r\n  onChange: () => null,\r\n  onBlur: () => null,\r\n  label: \"\",\r\n  id: uuidv4(),\r\n  error: \"\",\r\n  isClearable: false,\r\n  type: \"text\",\r\n  hint: \"\",\r\n};\r\n\r\nexport default Input;\r\n","import axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport _ from \"lodash-es\";\r\nimport { showSnack } from \"../redux/actions/alertActions\";\r\nimport { refreshTokenSuccess } from \"../redux/actions/authActions\";\r\nimport { store } from \"../redux/store\";\r\nimport { BASE_URL, ENDPOINTS } from \"./constants\";\r\n\r\nconst options = {\r\n  variant: \"error\",\r\n};\r\n\r\nconst extractErrorMessage = (data) => {\r\n  if (_.isString(data)) {\r\n    return data;\r\n  }\r\n\r\n  if (!data.error) {\r\n    return \"Something went wrong\";\r\n  }\r\n\r\n  if (!_.isString(data.error)) {\r\n    console.log(data.error);\r\n  }\r\n\r\n  return data.error;\r\n};\r\n\r\nexport const errorHandler = ({ status, data }) => {\r\n  switch (status) {\r\n    case 401:\r\n      store.dispatch(\r\n        showSnack({ message: extractErrorMessage(data), options })\r\n      );\r\n      // store.dispatch(logout());\r\n      break;\r\n    case 400:\r\n      store.dispatch(\r\n        showSnack({ message: extractErrorMessage(data), options })\r\n      );\r\n      break;\r\n    case 403:\r\n      store.dispatch(\r\n        showSnack({ message: extractErrorMessage(data), options })\r\n      );\r\n      break;\r\n    case 422:\r\n      store.dispatch(\r\n        showSnack({ message: extractErrorMessage(data), options })\r\n      );\r\n      break;\r\n    case 404:\r\n      store.dispatch(showSnack({ message: \"Resource not found\", options }));\r\n      break;\r\n    default:\r\n      store.dispatch(showSnack({ message: \"Something went wrong\", options }));\r\n      break;\r\n  }\r\n};\r\n\r\nexport const getToken = async () => {\r\n  const state = store.getState();\r\n  const {\r\n    auth: { token },\r\n  } = state;\r\n\r\n  if (!token || !token.access.token || !token.refresh.token) {\r\n    return null;\r\n  }\r\n\r\n  const decodedToken = jwt_decode(token.access.token);\r\n  const date = new Date(0);\r\n  date.setUTCSeconds(decodedToken.exp);\r\n  if (date.valueOf() < new Date().valueOf()) {\r\n    try {\r\n      const result = await axios.post(\r\n        `${BASE_URL}/${ENDPOINTS.REFRESH_TOKEN}`,\r\n        { refreshToken: token.refresh.token }\r\n      );\r\n      store.dispatch(refreshTokenSuccess({ token: result.data.data }));\r\n      return result.data.data.accessToken;\r\n    } catch (err) {\r\n      errorHandler(err.response);\r\n    }\r\n  }\r\n  return token.access.token;\r\n};\r\n\r\nexport const uniqueValues = (arr, keyProps) => {\r\n  const kvArray = arr.map((entry) => {\r\n    const key = keyProps.map((k) => entry.headers[k]).join(\"|\");\r\n    return [key, entry];\r\n  });\r\n  const map = new Map(kvArray);\r\n  return Array.from(map.values());\r\n};\r\n","import axios from \"axios\";\r\nimport { BASE_URL, ENDPOINTS } from \"./constants\";\r\nimport { getToken, errorHandler } from \"./utils\";\r\n\r\nconst makeRequest = async (options) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const defaultOptions = {\r\n        baseURL: BASE_URL,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          reason: options.data?.reason || null,\r\n        },\r\n        timeout: 60000,\r\n      };\r\n\r\n      delete options.data?.reason;\r\n      const client = axios.create(defaultOptions);\r\n      const token = await getToken();\r\n      if (token) {\r\n        client.interceptors.request.use(function (config) {\r\n          config.headers.Authorization = `Bearer ${token}`;\r\n          return config;\r\n        });\r\n      }\r\n\r\n      return client(options)\r\n        .then((response) => {\r\n          return resolve(response.data);\r\n        })\r\n        .catch((error) => {\r\n          errorHandler(error.response ? error.response : { status: 500 });\r\n          return reject(\r\n            error.response && error.response.data.error\r\n              ? error.response.data.error\r\n              : \"Something went wrong\"\r\n          );\r\n        });\r\n    } catch (err) {\r\n      errorHandler({ status: 500 });\r\n      reject(err.message);\r\n    }\r\n  });\r\n};\r\n\r\nexport const GET = ({ url, params = {}, data = {} }) =>\r\n  makeRequest({ url, method: \"get\", params, data });\r\n\r\nexport const POST = ({ url, params = {}, data = {} }) =>\r\n  makeRequest({ url, method: \"post\", params, data });\r\n\r\nexport const PUT = ({ url, params = {}, data = {} }) =>\r\n  makeRequest({ url, method: \"put\", params, data });\r\n\r\nexport const PATCH = ({ url, params = {}, data = {} }) =>\r\n  makeRequest({ url, method: \"patch\", params, data });\r\n\r\nexport const DELETE = ({ url, params = {}, data = {} }) =>\r\n  makeRequest({ url, method: \"delete\", params, data });\r\n\r\nexport default ENDPOINTS;\r\n","import { resetSnack, showSnack } from \"../actions/alertActions\";\r\nimport {\r\n  getAdminDetailsBegin,\r\n  getAdminDetailsFailure,\r\n  getAdminDetailsSuccess,\r\n  getProfileDetailsBegin,\r\n  getProfileDetailsFailure,\r\n  getProfileDetailsSuccess,\r\n  loginBegin,\r\n  loginFailure,\r\n  loginSuccess,\r\n  passwordVerifyEmailBegin,\r\n  passwordVerifyEmailFailure,\r\n  passwordVerifyEmailSuccess,\r\n  postProfileDetailBegin,\r\n  postProfileDetailFailure,\r\n  postProfileDetailSuccess,\r\n  postVerifyEmailBegin,\r\n  postVerifyEmailFailure,\r\n  postVerifyEmailSuccess,\r\n  resetPasswordBegin,\r\n  resetPasswordFailure,\r\n  resetPasswordSuccess,\r\n  setSubmitting,\r\n} from \"../actions/authActions\";\r\n\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../services/constants\";\r\nimport ENDPOINTS, { GET, POST } from \"../../services/requests\";\r\n\r\nexport function performGetAdminList() {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(getAdminDetailsBegin());\r\n    try {\r\n      const result = await axios.get(`${BASE_URL}admin`);\r\n      dispatch(getAdminDetailsSuccess(result?.data?.docs?.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: result?.data?.msg,\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(getAdminDetailsFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performLogin(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(loginBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}admin/login`, data);\r\n      if (result.status === 200) {\r\n        dispatch(\r\n          loginSuccess({\r\n            token: result.data.token,\r\n            user: result.data.user,\r\n            role: null,\r\n          })\r\n        );\r\n        dispatch(\r\n          showSnack({\r\n            message: \"Logged in successfully!\",\r\n            options: {\r\n              variant: \"success\",\r\n            },\r\n          })\r\n        );\r\n      } else {\r\n        // Handle error messages from the backend\r\n        dispatch(\r\n          showSnack({\r\n            message: result.data.error || \"Something went wrong!\",\r\n            options: {\r\n              variant: \"error\",\r\n            },\r\n          })\r\n        );\r\n      }\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Something went wrong!\",\r\n          options: {\r\n            variant: \"error\",\r\n          },\r\n        })\r\n      );\r\n      dispatch(loginFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performAdminImagePost(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postProfileDetailBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}admin/uploads`, data);\r\n      dispatch(postProfileDetailSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Admin Image Add Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postProfileDetailFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performSignUp(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postProfileDetailBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}admin/signup`, data);\r\n      dispatch(postProfileDetailSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Sign Up Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postProfileDetailFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performForgotPassword(data) {\r\n  return async (dispatch) => {\r\n    dispatch(setSubmitting(true));\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}admin/forgot-password`, data);\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Verification Link Send to the Email.\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result.data;\r\n    } catch (error) {\r\n      return false;\r\n    } finally {\r\n      dispatch(setSubmitting(false));\r\n    }\r\n  };\r\n}\r\n\r\nexport function performEmailVerificationAdmin(data) {\r\n  return async (dispatch) => {\r\n    dispatch(setSubmitting(true));\r\n    dispatch(postVerifyEmailBegin());\r\n    try {\r\n      const result = await POST({ url: ENDPOINTS.VERIFY_EMAIL, data });\r\n      if (!result) {\r\n        dispatch(\r\n          showSnack({\r\n            message: result.message,\r\n            options: {\r\n              variant: \"success\",\r\n            },\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(postVerifyEmailSuccess(result.data));\r\n        dispatch(\r\n          showSnack({\r\n            message: result.message,\r\n            options: {\r\n              variant: \"success\",\r\n            },\r\n          })\r\n        );\r\n      }\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postVerifyEmailFailure(error));\r\n    } finally {\r\n      dispatch(setSubmitting(false));\r\n    }\r\n  };\r\n}\r\n\r\nexport function performForgotPasswordEmailVerificationAdmin(data) {\r\n  return async (dispatch) => {\r\n    dispatch(passwordVerifyEmailBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}admin/verify-token`, data);\r\n      if (!result) {\r\n        dispatch(\r\n          showSnack({\r\n            message: \"Invalid Token\",\r\n            options: {\r\n              variant: \"error\",\r\n            },\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(passwordVerifyEmailSuccess());\r\n        dispatch(\r\n          showSnack({\r\n            message: \"Email Token Verified\",\r\n            options: {\r\n              variant: \"success\",\r\n            },\r\n          })\r\n        );\r\n      }\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(passwordVerifyEmailFailure(error));\r\n    }\r\n  };\r\n}\r\n\r\nexport function performResetPassword(data) {\r\n  return async (dispatch) => {\r\n    dispatch(setSubmitting(true));\r\n    dispatch(resetPasswordBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}admin/reset-password`, data);\r\n      dispatch(resetPasswordSuccess(result));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Password Reset Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(resetPasswordFailure(error));\r\n      return false;\r\n    } finally {\r\n      dispatch(setSubmitting(false));\r\n    }\r\n  };\r\n}\r\n\r\nexport function performGetProfileDetails(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(getProfileDetailsBegin());\r\n    try {\r\n      const result = await GET({ url: ENDPOINTS.GET_PROFILE });\r\n\r\n      dispatch(getProfileDetailsSuccess(result.data));\r\n\r\n      return true;\r\n    } catch (error) {\r\n      dispatch(getProfileDetailsFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performDeleteAdmin(id) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postProfileDetailBegin());\r\n    try {\r\n      await axios.delete(`${BASE_URL}admin/${id}`);\r\n      dispatch(postProfileDetailSuccess());\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Admin Delete Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return true;\r\n    } catch (error) {\r\n      dispatch(postProfileDetailFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n","import ACCOUNT_TYPES from \"../types/accountTypes\";\r\n\r\nexport const resetState = () => ({\r\n  type: ACCOUNT_TYPES.RESET_STATE,\r\n});\r\n\r\nexport const updateProfileBegin = () => ({\r\n  type: ACCOUNT_TYPES.UPDATE_PROFILE_BEGIN,\r\n});\r\n\r\nexport const updateProfileSuccess = () => ({\r\n  type: ACCOUNT_TYPES.UPDATE_PROFILE_SUCCESS,\r\n});\r\n\r\nexport const updateProfileFailure = (error) => ({\r\n  type: ACCOUNT_TYPES.UPDATE_PROFILE_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const updatePasswordBegin = () => ({\r\n  type: ACCOUNT_TYPES.UPDATE_PASSWORD_BEGIN,\r\n});\r\n\r\nexport const updatePasswordSuccess = (data) => ({\r\n  type: ACCOUNT_TYPES.UPDATE_PASSWORD_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const updatePasswordFailure = (error) => ({\r\n  type: ACCOUNT_TYPES.UPDATE_PASSWORD_FAILURE,\r\n  payload: { error },\r\n});\r\n","import {\r\n  updatePasswordBegin,\r\n  updatePasswordFailure,\r\n  updatePasswordSuccess,\r\n  updateProfileBegin,\r\n  updateProfileFailure,\r\n  updateProfileSuccess,\r\n} from \"../actions/accountActions\";\r\nimport { resetSnack, showSnack } from \"../actions/alertActions\";\r\nimport {\r\n  postAdminProfileDetailsBegin,\r\n  postAdminProfileDetailsFailure,\r\n  postAdminProfileDetailsSuccess,\r\n  updateUserData,\r\n} from \"../actions/authActions\";\r\n\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../services/constants\";\r\n\r\nexport function performUpdateProfile(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(updateProfileBegin());\r\n    try {\r\n      const id = data?.id;\r\n      const result = await axios.put(`${BASE_URL}admin/${id}`, data);\r\n      dispatch(updateUserData(result.data.user));\r\n      dispatch(updateProfileSuccess());\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Admin Data Update Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return true;\r\n    } catch (error) {\r\n      dispatch(updateProfileFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\nexport function performUpdateAdminProfile(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postAdminProfileDetailsBegin());\r\n    try {\r\n      const id = data?.id;\r\n      await axios.put(`${BASE_URL}admin/${id}`, data);\r\n      dispatch(postAdminProfileDetailsSuccess());\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Admin Data Update Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return true;\r\n    } catch (error) {\r\n      dispatch(postAdminProfileDetailsFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performUpdatePassword(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(updatePasswordBegin());\r\n    try {\r\n      const result = await axios.put(`${BASE_URL}admin/change-password`, data);\r\n      dispatch(updatePasswordSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Password Update Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n\r\n      return true;\r\n    } catch (error) {\r\n      dispatch(updatePasswordFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport Avatar from \"react-avatar\";\r\nimport { Button, Card, Col, Form, Row, Spinner } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { BiArrowBack } from \"react-icons/bi\";\r\nimport { MdAddAPhoto } from \"react-icons/md\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport Input from \"../../components/Form/Input\";\r\nimport IconButton from \"../../components/IconButton\";\r\nimport { performUpdateProfile } from \"../../redux/actionCreators/accountCreators\";\r\nimport { performAdminImagePost } from \"../../redux/actionCreators/authCreators\";\r\nimport { resetState } from \"../../redux/actions/accountActions\";\r\nimport useWindowSize from \"../../hooks/UseWindowSize\";\r\nimport Page from \"../../components/Page\";\r\nimport { BACKEND_URL } from \"../../services/constants\";\r\n\r\nconst schema = yup\r\n  .object({\r\n    firstName: yup.string().required(),\r\n    lastName: yup.string().required(),\r\n    mobileNumber: yup.string().required(),\r\n  })\r\n  .required();\r\n\r\nconst EditProfile = ({\r\n  user,\r\n  submitting,\r\n  reset,\r\n  handleUpdate,\r\n  handleAddAdminImage,\r\n}) => {\r\n  const history = useHistory();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n    defaultValues: {\r\n      firstName: user?.firstName,\r\n      lastName: user?.lastName,\r\n      mobileNumber: user?.mobileNumber,\r\n    },\r\n  });\r\n  const [adminImage, setadminImage] = useState(null);\r\n  const fileInputImageRef = useRef(null);\r\n  const handleadminImageClick = () => {\r\n    fileInputImageRef.current.click();\r\n  };\r\n\r\n  const adminImageUrl = user?.adminImage;\r\n  const Postbrandlogoimages = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"adminImage\", file, file.name);\r\n    const result = await handleAddAdminImage(formData);\r\n    if (result.status === 200) {\r\n      setadminImage(result?.data?.imageUrl);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    const newData = {\r\n      ...data,\r\n      id: user?._id,\r\n      adminImage: adminImage ? adminImage : adminImageUrl,\r\n    };\r\n    const result = await handleUpdate(newData);\r\n    if (!result) return false;\r\n    history.push(\"/account\");\r\n  };\r\n\r\n  const isMobile = useWindowSize();\r\n\r\n  useEffect(() => {\r\n    reset();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Page id=\"page--account\" title=\"Account\" className=\"h-100\">\r\n      <Card\r\n        border=\"light\"\r\n        className={`w-100 mx-auto px-4 pt-3 pb-4 my-5 position-relative profile__edit ${\r\n          isMobile && \"p-0\"\r\n        }`}\r\n        style={{ maxWidth: 500 }}\r\n      >\r\n        <Card.Header className=\"d-flex align-items-center\">\r\n          <Link to=\"/account\" className=\"btn btn-link px-0 me-3\" title=\"Back\">\r\n            <BiArrowBack size={24} />\r\n          </Link>\r\n          Edit Admin Profile\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <div\r\n            className={`${\r\n              isMobile ? \"my-3\" : \"my-2\"\r\n            } d-flex justify-content-end`}\r\n          >\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n              <Row>\r\n                <Col xs={12}>\r\n                  <div className=\"image-uploader-container\">\r\n                    <div className=\"brandimage pb-2\">Admin Image</div>\r\n                    <div className=\"image-container\">\r\n                      {adminImage ? (\r\n                        <img\r\n                          src={BACKEND_URL + adminImage}\r\n                          alt=\"uploaded-item\"\r\n                        />\r\n                      ) : (\r\n                        <Avatar\r\n                          src={BACKEND_URL + adminImageUrl}\r\n                          name=\"Admin Image\"\r\n                          size=\"100\"\r\n                          className=\"ff-primary rounded-circle me-3\"\r\n                        />\r\n                      )}\r\n                      <input\r\n                        id=\"adminImage\"\r\n                        type=\"file\"\r\n                        ref={fileInputImageRef}\r\n                        onChange={(e) => Postbrandlogoimages(e)}\r\n                        style={{ display: \"none\" }}\r\n                      />\r\n                    </div>\r\n                    <IconButton\r\n                      className={\"add-image-icon\"}\r\n                      variant=\"primary\"\r\n                      icon={{ type: MdAddAPhoto }}\r\n                      onClick={() => handleadminImageClick()}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col xs={12} md={12}>\r\n                  <Input\r\n                    id=\"firstName\"\r\n                    name=\"firstName\"\r\n                    label=\"First Name\"\r\n                    {...register(\"firstName\")}\r\n                    error={errors.firstName?.message}\r\n                  />\r\n                </Col>\r\n                <Col xs={12} md={12}>\r\n                  <Input\r\n                    id=\"lastName\"\r\n                    name=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    {...register(\"lastName\")}\r\n                    error={errors.lastName?.message}\r\n                  />\r\n                </Col>\r\n                <Col xs={12} md={12}>\r\n                  <Input\r\n                    id=\"mobileNumber\"\r\n                    name=\"mobileNumber\"\r\n                    label=\"Mobile Number\"\r\n                    {...register(\"mobileNumber\")}\r\n                    error={errors.mobileNumber?.message}\r\n                  />\r\n                </Col>\r\n                <Col xs={12} className=\"pt-4 position-relative text-center\">\r\n                  <div className=\"d-flex align-items-center justify-content-center\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"primary\"\r\n                      className={`px-5`}\r\n                      disabled={submitting}\r\n                    >\r\n                      {!submitting && <span>Update</span>}\r\n                      {submitting && <Spinner animation=\"border\" size=\"sm\" />}\r\n                    </Button>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  submitting: state.account.submitting,\r\n  user: state.auth.user,\r\n  error: state.account.error,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  reset: () => dispatch(resetState()),\r\n  handleUpdate: (payload) => dispatch(performUpdateProfile(payload)),\r\n  handleAddAdminImage: (payload) => dispatch(performAdminImagePost(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfile);\r\n"],"sourceRoot":""}