{"version":3,"sources":["partials/DynamicForm/ListDynamicForm.js","containers/DynamicForm/index.js","components/IconButton/index.js","components/Form/Input.js","components/DataTable/index.js","components/ConfirmDialog/index.js","redux/actions/dynamicFormActions.js","redux/actionCreators/dynamicFormCreators.js"],"names":["connect","state","fetching","dynamicForm","dispatch","getInputTypeDetail","payload","performGetDynamicForm","deleteDynamicForm","performDeleteDynamicForm","useState","data","setData","isMobile","useWindowSize","showCDialog","setShowCDialog","deletingUser","useRef","history","useHistory","url","useRouteMatch","fetchData","a","result","status","useEffect","handleOnConfirm","current","_id","Card","border","className","Body","IconButton","variant","icon","type","MdAdd","onClick","push","DataTable","columns","title","render","rowData","inputLink","width","field","filtering","statusColor","statusText","actions","_","console","log","components","Action","props","DropdownMenu","menu","label","size","iconSize","search","onRowClick","filters","downloadcsv","downloadExcel","resetBtn","loading","ConfirmDialog","show","setShow","message","onConfirm","DynamicForm","path","refresh","setRefresh","Page","id","children","uuidv4","Icon","extraProps","isLoading","disabled","defaultProps","Input","React","forwardRef","ref","onChange","onBlur","error","isClearable","hint","rest","reset","setReset","inputType","setInputType","placeholder","step","temp","defaultValue","value","restProps","htmlFor","target","style","fontSize","color","tableIcons","FirstPage","LastPage","NextPage","PreviousPage","SortArrow","options","selectedRow","getList","filterOptions","resetFilters","setFilters","tableRef","createRef","openFilters","setOpenFilters","tableProps","icons","boxShadow","localization","toolbar","searchTooltip","searchPlaceholder","showTitle","draggable","actionsColumnIndex","pageSize","emptyRowsWhenPaging","pageSizeOptions","query","Promise","resolve","reject","getDataTableQueryParams","undefined","docs","page","totalCount","totalDocs","rowStyle","backgroundColor","handleReset","exportType","exportFromJSON","types","csv","newData","map","transformedData","Object","values","reduce","acc","obj","transformedObject","Link","fileName","xls","getReason","bodyHtml","loadingBtnText","footer","submitting","setSubmitting","reason","setReason","handleClose","onHide","backdrop","keyboard","Header","closeButton","Title","dangerouslySetInnerHTML","__html","name","e","Footer","animation","length","postDynamicFormSuccess","DYNAMIC_FORM_TYPES","POST_DYNAMIC_FORM_SUCCESS","updateDynamicFormSuccess","UPDATE_DYNAMIC_FORM_SUCCESS","resetSnack","GET_DYNAMIC_FORM_BEGIN","axios","get","BASE_URL","GET_DYNAMIC_FORM_SUCCESS","showSnack","getDynamicFormFailure","GET_DYNAMIC_FORM_FAILURE","performPostDynamicForm","POST_DYNAMIC_FORM_BEGIN","post","postDynamicFormFailure","POST_DYNAMIC_FORM_FAILURE","performUpdateDynamicForm","UPDATE_DYNAMIC_FORM_BEGIN","put","updateDynamicFormFailure","UPDATE_DYNAMIC_FORM_FAILURE","DELETE_DYNAMIC_FORM_BEGIN","delete","deleteDynamicFormSuccess","DELETE_DYNAMIC_FORM_SUCCESS","deleteDynamicFormFailure","DELETE_DYNAMIC_FORM_FAILURE"],"mappings":"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","file":"static/js/144.f95b45d4.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\r\nimport { connect } from \"react-redux\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport ConfirmDialog from \"../../components/ConfirmDialog\";\r\nimport DataTable from \"../../components/DataTable\";\r\nimport DropdownMenu from \"../../components/DropdownMenu\";\r\nimport IconButton from \"../../components/IconButton\";\r\nimport useWindowSize from \"../../hooks/UseWindowSize\";\r\nimport {\r\n  performDeleteDynamicForm,\r\n  performGetDynamicForm,\r\n} from \"../../redux/actionCreators/dynamicFormCreators\";\r\nimport { BiSolidUserCircle } from \"react-icons/bi\";\r\n\r\nconst ListDynamicForm = ({\r\n  fetching,\r\n  deleteDynamicForm,\r\n  getInputTypeDetail,\r\n}) => {\r\n  const [data, setData] = useState([]);\r\n  const isMobile = useWindowSize();\r\n  const [showCDialog, setShowCDialog] = useState(false);\r\n  const deletingUser = useRef(null);\r\n  const history = useHistory();\r\n  const { url } = useRouteMatch();\r\n\r\n  const fetchData = async () => {\r\n    const result = await getInputTypeDetail();\r\n    if (result.status === 200) {\r\n      setData(result?.data);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleOnConfirm = async () => {\r\n    const result = await deleteDynamicForm(deletingUser.current?._id);\r\n    if (result) {\r\n      fetchData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        border=\"light\"\r\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\r\n      >\r\n        <Card.Body>\r\n          <div\r\n            className={`${\r\n              isMobile ? \"my-3\" : \"my-2\"\r\n            } d-flex justify-content-end`}\r\n          >\r\n            <IconButton\r\n              variant=\"primary\"\r\n              icon={{ type: MdAdd }}\r\n              onClick={() => history.push(`${url}/addDynamicForm`)}\r\n            >\r\n              Add Dynamic Form List\r\n            </IconButton>\r\n          </div>\r\n          <DataTable\r\n            columns={[\r\n              {\r\n                title: \"Dynamic Input Link\",\r\n                render: (rowData) => (\r\n                  <>{rowData.inputLink ? rowData.inputLink : \"N/A\"}</>\r\n                ),\r\n              },\r\n              {\r\n                width: 300,\r\n                title: \"Status\",\r\n                field: \"status\",\r\n                filtering: false,\r\n                render: (rowData) => {\r\n                  let statusColor = \"success\";\r\n                  let statusText = \"Published\";\r\n                  if (rowData.status === false) {\r\n                    statusColor = \"warning\";\r\n                    statusText = \"Draft\";\r\n                  }\r\n                  return (\r\n                    <span className={`text-${statusColor}`}>{statusText}</span>\r\n                  );\r\n                },\r\n              },\r\n            ]}\r\n            actions={[\r\n              {\r\n                onClick: (_, rowData) => console.log(rowData),\r\n              },\r\n            ]}\r\n            components={{\r\n              Action: (props) => (\r\n                <DropdownMenu\r\n                  menu={[\r\n                    {\r\n                      label: (\r\n                        <span className=\"d-flex align-items-center text-secondary\">\r\n                          <BiSolidUserCircle size={20} className=\"me-2\" />\r\n                          Dynamic Form Detail\r\n                        </span>\r\n                      ),\r\n                      onClick: () =>\r\n                        history.push(`${url}/viewDynamicForm`, {\r\n                          data: props.data,\r\n                        }),\r\n                    },\r\n                    {\r\n                      label: (\r\n                        <span className=\"d-flex align-items-center text-secondary\">\r\n                          <MdEdit size={20} className=\"me-2\" /> Edit\r\n                        </span>\r\n                      ),\r\n                      onClick: () =>\r\n                        history.push(`${url}/${props.data._id}/edit`, {\r\n                          data: props.data,\r\n                        }),\r\n                    },\r\n                    {\r\n                      label: (\r\n                        <span className=\"d-flex align-items-center text-danger\">\r\n                          <MdDelete size={20} className=\"me-2\" /> Delete\r\n                        </span>\r\n                      ),\r\n                      onClick: () => {\r\n                        setShowCDialog(true);\r\n                        deletingUser.current = props.data;\r\n                      },\r\n                    },\r\n                  ]}\r\n                  iconSize=\"large\"\r\n                />\r\n              ),\r\n            }}\r\n            search={false}\r\n            onRowClick={(_, rowData) => null}\r\n            filters={true}\r\n            downloadcsv={true}\r\n            downloadExcel={true}\r\n            resetBtn={false}\r\n            data={data}\r\n            loading={fetching}\r\n          />\r\n        </Card.Body>\r\n      </Card>\r\n      <ConfirmDialog\r\n        show={showCDialog}\r\n        setShow={setShowCDialog}\r\n        title=\"Delete Dynamic Form\"\r\n        message={`Are you sure, you want to delete <b>${deletingUser?.current?.inputLink}</b>?`}\r\n        onConfirm={handleOnConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  fetching: state.dynamicForm.fetching,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getInputTypeDetail: (payload) => dispatch(performGetDynamicForm(payload)),\r\n  deleteDynamicForm: (payload) => dispatch(performDeleteDynamicForm(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListDynamicForm);\r\n","import React, { useState } from \"react\";\r\nimport { Route, useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Page from \"../../components/Page\";\r\nimport ListDynamicForm from \"../../partials/DynamicForm/ListDynamicForm\";\r\n\r\nconst DynamicForm = () => {\r\n  const history = useHistory();\r\n  const { path } = useRouteMatch();\r\n  const [refresh, setRefresh] = useState(\"\");\r\n\r\n  return (\r\n    <Page id=\"page--DynamicForm\" title=\"Dynamic Form \">\r\n      <div className=\"d-flex align-items-start mb-3\">\r\n        <h1 className=\"m-0\">Dynamic Form List</h1>\r\n      </div>\r\n      <Route\r\n        path={`${path}/`}\r\n        children={\r\n          <ListDynamicForm\r\n            refresh={refresh}\r\n            setRefresh={() => setRefresh(uuidv4())}\r\n            history={history}\r\n          />\r\n        }\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default DynamicForm;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Icon = (icon, size = \"\") => {\r\n  const extraProps = {\r\n    size: 22\r\n  };\r\n  if (size === 'lg') {\r\n    extraProps.size = 32;\r\n  } else if (size === 'sm') {\r\n    extraProps.size = 18;\r\n  }\r\n  return <icon.type {...icon.props} {...extraProps} />\r\n}\r\n\r\nconst IconButton = ({ variant, className, onClick, size, isLoading, disabled, children, icon }) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      className={`btn-icon ${size ? `btn-icon-${size}` : ''} ${isLoading ? `btn-icon-loading` : ''} ${className}`}\r\n      onClick={onClick}\r\n      size={size}\r\n      disabled={isLoading || disabled}\r\n    >\r\n      <span>{Icon(icon, size)}{children && <span>{children}</span>}</span>\r\n    </Button>\r\n  )\r\n}\r\n\r\nIconButton.propTypes = {\r\n  children: PropTypes.node,\r\n  variant: PropTypes.string,\r\n  className: PropTypes.string,\r\n  size: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  isLoading: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  icon: PropTypes.any,\r\n};\r\n\r\nIconButton.defaultProps = {\r\n  variant: \"default\",\r\n  className: \"\",\r\n  size: \"\",\r\n  onClick: () => null,\r\n  isLoading: false,\r\n  disabled: false,\r\n  icon: null\r\n}\r\n\r\nexport default IconButton;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { MdCancel } from \"react-icons/md\";\r\nimport { AiOutlineEyeInvisible, AiOutlineEye } from \"react-icons/ai\";\r\n\r\nimport IconButton from \"../IconButton\";\r\n\r\nconst Input = React.forwardRef(\r\n  (\r\n    {\r\n      className,\r\n      onChange,\r\n      onBlur,\r\n      label,\r\n      id,\r\n      error,\r\n      isClearable,\r\n      hint,\r\n      type,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const [reset, setReset] = useState(uuidv4());\r\n    const [inputType, setInputType] = useState(type);\r\n\r\n    const onClear = () => {\r\n      onChange({ target: { value: \"\" } });\r\n      setReset(uuidv4());\r\n    };\r\n\r\n    const restProps = () => {\r\n      const temp = { ...rest };\r\n      temp.defaultValue = temp.value || \"\";\r\n      delete temp.value;\r\n      return temp;\r\n    };\r\n\r\n    return (\r\n      <span\r\n        className={`d-inline-block w-100 position-relative pt-2 pb-4 input__wrapper ${\r\n          error ? \"error\" : \"\"\r\n        }`}\r\n        ref={ref}\r\n      >\r\n        <input\r\n          key={`input-${reset}`}\r\n          id={`input-${id}`}\r\n          type={inputType}\r\n          className={`${className}${isClearable ? \" input-clearable\" : \"\"}`}\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          placeholder={label}\r\n          step=\"any\"\r\n          {...restProps()}\r\n        />\r\n        <label htmlFor={`input-${id}`}>{label}</label>\r\n        <span className=\"input-error\">{error}</span>\r\n        {isClearable && (\r\n          <MdCancel className=\"input-clear-btn\" size={18} onClick={onClear} />\r\n        )}\r\n        {type === \"password\" && (\r\n          <IconButton\r\n            icon={\r\n              inputType === \"password\" ? (\r\n                <AiOutlineEyeInvisible />\r\n              ) : (\r\n                <AiOutlineEye />\r\n              )\r\n            }\r\n            variant=\"outline-link\"\r\n            onClick={() =>\r\n              setInputType(inputType === \"password\" ? \"text\" : \"password\")\r\n            }\r\n            className=\"p-0 m-0 position-absolute btn--show-password\"\r\n          />\r\n        )}\r\n        {hint !== \"\" && (\r\n          <span style={{ fontSize: \"12px\", color: \"#c1b1b1\" }}>{hint}</span>\r\n        )}\r\n      </span>\r\n    );\r\n  }\r\n);\r\n\r\nInput.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  label: PropTypes.string,\r\n  id: PropTypes.string,\r\n  error: PropTypes.string,\r\n  isClearable: PropTypes.bool,\r\n  type: PropTypes.string,\r\n  hint: PropTypes.string,\r\n};\r\n\r\nInput.defaultProps = {\r\n  className: \"\",\r\n  onChange: () => null,\r\n  onBlur: () => null,\r\n  label: \"\",\r\n  id: uuidv4(),\r\n  error: \"\",\r\n  isClearable: false,\r\n  type: \"text\",\r\n  hint: \"\",\r\n};\r\n\r\nexport default Input;\r\n","import MaterialTable from \"@material-table/core\";\r\nimport exportFromJSON from \"export-from-json\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { createRef, forwardRef, useEffect, useState } from \"react\";\r\nimport {\r\n  MdArrowUpward,\r\n  MdChevronLeft,\r\n  MdChevronRight,\r\n  MdDownload,\r\n  MdFilterAlt,\r\n  MdFirstPage,\r\n  MdLastPage,\r\n  MdRefresh,\r\n} from \"react-icons/md\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { getDataTableQueryParams } from \"../../utils/index\";\r\nimport IconButton from \"../IconButton\";\r\n\r\nconst tableIcons = {\r\n  FirstPage: forwardRef((props, ref) => <MdFirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <MdLastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <MdChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <MdChevronLeft {...props} ref={ref} />\r\n  )),\r\n  SortArrow: forwardRef((props, ref) => <MdArrowUpward {...props} ref={ref} />),\r\n};\r\n\r\nconst DataTable = ({\r\n  loading,\r\n  columns,\r\n  actions,\r\n  components,\r\n  onRowClick,\r\n  options,\r\n  selectedRow,\r\n  getList,\r\n  search,\r\n  downloadcsv,\r\n  downloadExcel,\r\n  filters,\r\n  filterOptions,\r\n  data,\r\n  setFilters,\r\n  resetFilters,\r\n  refresh,\r\n  resetBtn,\r\n}) => {\r\n  const tableRef = createRef();\r\n  const [reset, setReset] = useState(uuidv4());\r\n  const [openFilters, setOpenFilters] = useState(false);\r\n  const tableProps = {\r\n    isLoading: loading,\r\n    icons: tableIcons,\r\n    style: {\r\n      boxShadow: \"none\",\r\n    },\r\n    localization: {\r\n      toolbar: {\r\n        searchTooltip: \"Search\",\r\n        searchPlaceholder: \"Search\",\r\n      },\r\n    },\r\n    options: {\r\n      showTitle: false,\r\n      search: true,\r\n      toolbar: true,\r\n      filtering: openFilters,\r\n      draggable: false,\r\n      actionsColumnIndex: -1,\r\n      pageSize: 10,\r\n      emptyRowsWhenPaging: false, // To avoid of having empty rows\r\n      pageSizeOptions: [10, 30, 50, 100, 500],\r\n      ...options,\r\n    },\r\n    columns: columns,\r\n    data: data\r\n      ? data\r\n      : (query) =>\r\n          new Promise(async (resolve, reject) => {\r\n            try {\r\n              let result = await getList(getDataTableQueryParams(query));\r\n              if (!result.data) {\r\n                return reject();\r\n              }\r\n              return resolve({\r\n                data:\r\n                  result.data.docs !== undefined\r\n                    ? result.data.docs\r\n                    : result.data,\r\n                page: result.data.page !== undefined ? result.data.page - 1 : 0,\r\n                totalCount:\r\n                  result.data.totalDocs !== undefined\r\n                    ? result.data.totalDocs\r\n                    : 0, // this is the total count of rows or documents\r\n              });\r\n            } catch (err) {\r\n              return reject(err);\r\n            }\r\n          }),\r\n    actions: actions,\r\n    onRowClick: onRowClick,\r\n  };\r\n\r\n  if (components) {\r\n    tableProps.components = components;\r\n  }\r\n\r\n  if (onRowClick) {\r\n    tableProps.options = {\r\n      ...tableProps.options,\r\n      rowStyle: (rowData) => ({\r\n        backgroundColor:\r\n          selectedRow && selectedRow === rowData.id ? \"#f5f5f5\" : \"#FFF\",\r\n      }),\r\n      onRowClick: onRowClick,\r\n    };\r\n  }\r\n\r\n  const handleDownloadCSV = () => {\r\n    const fileName = \"CSVformat\";\r\n    const exportType = exportFromJSON.types.csv;\r\n    const newData = data.map(({ data, ...rest }) => {\r\n      const transformedData = data\r\n        ? Object.values(data).reduce((acc, obj) => ({ ...acc, ...obj }), {})\r\n        : {};\r\n      const transformedObject = {\r\n        _id: rest._id,\r\n        Link: rest.Link,\r\n        ...transformedData,\r\n      };\r\n      return data ? transformedObject : rest;\r\n    });\r\n    exportFromJSON({ data: newData, fileName, exportType });\r\n  };\r\n\r\n  const handleDownloadXLS = () => {\r\n    const fileName = \"ExcelFormat\";\r\n    const exportType = exportFromJSON.types.xls;\r\n    const newData = data.map(({ data, ...rest }) => {\r\n      const transformedData = data\r\n        ? Object.values(data).reduce((acc, obj) => ({ ...acc, ...obj }), {})\r\n        : {};\r\n      const transformedObject = {\r\n        _id: rest._id,\r\n        Link: rest.Link,\r\n        ...transformedData,\r\n      };\r\n      return data ? transformedObject : rest;\r\n    });\r\n    exportFromJSON({ data: newData, fileName, exportType });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    if (onRowClick) {\r\n      onRowClick(null);\r\n    }\r\n    resetFilters();\r\n    setReset(uuidv4());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (refresh) {\r\n      handleReset();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [refresh]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 d-flex flex-lg-row flex-column position-relative table-toolbar\">\r\n        <span className=\"d-flex flex-wrap zindex-dropdown end-0 gap-2 gap-lg-3 align-items-center justify-content-end ms-auto\">\r\n          {filters && (\r\n            <IconButton\r\n              icon={<MdFilterAlt />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={() => setOpenFilters(!openFilters)}\r\n              disabled={loading}\r\n            >\r\n              Filters\r\n            </IconButton>\r\n          )}\r\n\r\n          {resetBtn && (\r\n            <IconButton\r\n              icon={<MdRefresh />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleReset}\r\n              disabled={loading}\r\n            >\r\n              Reset\r\n            </IconButton>\r\n          )}\r\n          {downloadcsv && (\r\n            <IconButton\r\n              icon={<MdDownload />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleDownloadCSV}\r\n              disabled={loading}\r\n            >\r\n              CSV\r\n            </IconButton>\r\n          )}\r\n          {downloadExcel && (\r\n            <IconButton\r\n              icon={<MdDownload />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleDownloadXLS}\r\n              disabled={loading}\r\n            >\r\n              Excel\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      </div>\r\n\r\n      <MaterialTable\r\n        key={`data-table-${reset}`}\r\n        tableRef={tableRef}\r\n        {...tableProps}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nDataTable.propTypes = {\r\n  loading: PropTypes.bool,\r\n  columns: PropTypes.array.isRequired,\r\n  actions: PropTypes.array,\r\n  components: PropTypes.any,\r\n  onRowClick: PropTypes.any,\r\n  options: PropTypes.object,\r\n  selectedRow: PropTypes.string,\r\n  getList: PropTypes.func.isRequired,\r\n  search: PropTypes.bool,\r\n  filters: PropTypes.bool,\r\n  filterOptions: PropTypes.array,\r\n  setFilters: PropTypes.func,\r\n  resetFilters: PropTypes.func,\r\n  refresh: PropTypes.string,\r\n  resetBtn: PropTypes.bool,\r\n};\r\n\r\nDataTable.defaultProps = {\r\n  loading: false,\r\n  actions: [],\r\n  components: null,\r\n  onRowClick: null,\r\n  options: {},\r\n  selectedRow: null,\r\n  search: true,\r\n  filters: false,\r\n  filterOptions: [],\r\n  setFilters: () => null,\r\n  resetFilters: () => null,\r\n  refresh: null,\r\n  resetBtn: true,\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { useState } from 'react';\r\nimport { Modal, Button, Spinner } from 'react-bootstrap';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Input from '../Form/Input';\r\n\r\nconst ConfirmDialog = ({ show, setShow, title, message, onConfirm, getReason, bodyHtml, loadingBtnText, footer }) => {\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [reason, setReason] = useState('');\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const handleOnConfirm = async () => {\r\n    setSubmitting(true);\r\n    await onConfirm(reason);\r\n    setSubmitting(false);\r\n    setShow(false);\r\n    setReason('');\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div dangerouslySetInnerHTML={{ __html: message }}></div>\r\n        {bodyHtml}\r\n        {getReason && (\r\n          <div>\r\n            <Input id=\"reason\" name=\"reason\" label=\"Reason\" value={reason} onChange={(e) => setReason(e.target.value)} />\r\n          </div>\r\n        )}\r\n      </Modal.Body>\r\n      {footer && (\r\n        <Modal.Footer>\r\n          <Button variant=\"default\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          {!getReason && (\r\n            <Button variant=\"danger\" onClick={handleOnConfirm}>\r\n              {!submitting && <span>Confirm</span>}\r\n              {submitting && (\r\n                <span>\r\n                  {loadingBtnText} <Spinner size=\"sm\" animation=\"border\" />\r\n                </span>\r\n              )}\r\n            </Button>\r\n          )}\r\n          {getReason && (\r\n            <Button disabled={reason === '' || reason.length <= 3} variant=\"danger\" onClick={handleOnConfirm}>\r\n              {!submitting && <span>Confirm</span>}\r\n              {submitting && (\r\n                <span>\r\n                  {loadingBtnText} <Spinner size=\"sm\" animation=\"border\" />\r\n                </span>\r\n              )}\r\n            </Button>\r\n          )}\r\n        </Modal.Footer>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nConfirmDialog.propTypes = {\r\n  show: PropTypes.bool,\r\n  setShow: PropTypes.func,\r\n  title: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onConfirm: PropTypes.func,\r\n  getReason: PropTypes.bool,\r\n  bodyHtml: PropTypes.node,\r\n  loadingBtnText: PropTypes.string,\r\n  footer: PropTypes.bool,\r\n};\r\n\r\nConfirmDialog.defaultProps = {\r\n  show: false,\r\n  setShow: () => null,\r\n  title: 'Give a title',\r\n  message: 'Your message here',\r\n  onConfirm: () => null,\r\n  getReason: false,\r\n  bodyHtml: <></>,\r\n  loadingBtnText: 'Deleting',\r\n  footer: true,\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import DYNAMIC_FORM_TYPES from \"../types/dynamicFormTypes\";\n\nexport const getDynamicFormBegin = () => ({\n  type: DYNAMIC_FORM_TYPES.GET_DYNAMIC_FORM_BEGIN,\n});\n\nexport const getDynamicFormSuccess = (data) => ({\n  type: DYNAMIC_FORM_TYPES.GET_DYNAMIC_FORM_SUCCESS,\n  payload: data,\n});\n\nexport const getDynamicFormFailure = (error) => ({\n  type: DYNAMIC_FORM_TYPES.GET_DYNAMIC_FORM_FAILURE,\n  payload: error,\n});\nexport const postDynamicFormBegin = () => ({\n  type: DYNAMIC_FORM_TYPES.POST_DYNAMIC_FORM_BEGIN,\n});\n\nexport const postDynamicFormSuccess = (data) => ({\n  type: DYNAMIC_FORM_TYPES.POST_DYNAMIC_FORM_SUCCESS,\n  payload: data,\n});\n\nexport const postDynamicFormFailure = (error) => ({\n  type: DYNAMIC_FORM_TYPES.POST_DYNAMIC_FORM_FAILURE,\n  payload: error,\n});\nexport const updateDynamicFormBegin = () => ({\n  type: DYNAMIC_FORM_TYPES.UPDATE_DYNAMIC_FORM_BEGIN,\n});\n\nexport const updateDynamicFormSuccess = (data) => ({\n  type: DYNAMIC_FORM_TYPES.UPDATE_DYNAMIC_FORM_SUCCESS,\n  payload: data,\n});\n\nexport const updateDynamicFormFailure = (error) => ({\n  type: DYNAMIC_FORM_TYPES.UPDATE_DYNAMIC_FORM_FAILURE,\n  payload: error,\n});\nexport const deleteDynamicFormBegin = () => ({\n  type: DYNAMIC_FORM_TYPES.DELETE_DYNAMIC_FORM_BEGIN,\n});\n\nexport const deleteDynamicFormSuccess = (data) => ({\n  type: DYNAMIC_FORM_TYPES.DELETE_DYNAMIC_FORM_SUCCESS,\n  payload: data,\n});\n\nexport const deleteDynamicFormFailure = (error) => ({\n  type: DYNAMIC_FORM_TYPES.DELETE_DYNAMIC_FORM_FAILURE,\n  payload: error,\n});\n","import axios from \"axios\";\nimport { BASE_URL } from \"../../services/constants\";\nimport { resetSnack, showSnack } from \"../actions/alertActions\";\nimport {\n  deleteDynamicFormBegin,\n  deleteDynamicFormFailure,\n  deleteDynamicFormSuccess,\n  getDynamicFormBegin,\n  getDynamicFormFailure,\n  getDynamicFormSuccess,\n  postDynamicFormBegin,\n  postDynamicFormFailure,\n  postDynamicFormSuccess,\n  updateDynamicFormBegin,\n  updateDynamicFormFailure,\n  updateDynamicFormSuccess,\n} from \"../actions/dynamicFormActions\";\n\nexport function performGetDynamicForm() {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(getDynamicFormBegin());\n    try {\n      const result = await axios.get(`${BASE_URL}inputField`);\n      dispatch(getDynamicFormSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: \"Dynamic Input Form Retrieved Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(getDynamicFormFailure());\n      return false;\n    }\n  };\n}\n\nexport function performPostDynamicForm(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(postDynamicFormBegin());\n    try {\n      const result = await axios.post(`${BASE_URL}inputField`, data);\n      dispatch(postDynamicFormSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: \"Dynamic Input Form Add Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(postDynamicFormFailure());\n      return false;\n    }\n  };\n}\n\nexport function performUpdateDynamicForm(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(updateDynamicFormBegin());\n    try {\n      const id = data.id;\n      const result = await axios.put(`${BASE_URL}inputField/${id}`, data);\n      dispatch(updateDynamicFormSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: \"Dynamic Input Form Update Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(updateDynamicFormFailure());\n      return false;\n    }\n  };\n}\n\nexport function performDeleteDynamicForm(id) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(deleteDynamicFormBegin());\n    try {\n      await axios.delete(`${BASE_URL}inputField/${id}`);\n      dispatch(deleteDynamicFormSuccess());\n      dispatch(\n        showSnack({\n          message: \"Dynamic Input Form Delete Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return true;\n    } catch (error) {\n      dispatch(deleteDynamicFormFailure());\n      return false;\n    }\n  };\n}\n"],"sourceRoot":""}