{"version":3,"sources":["partials/HeaderAdd/ListHeaderAdd.js","containers/HeaderAdd/index.js","components/IconButton/index.js","components/Form/Input.js","components/DataTable/index.js","components/ConfirmDialog/index.js","redux/actions/headerActions.js","redux/actionCreators/headerAddCreators.js"],"names":["connect","state","fetching","headerAdd","dispatch","getHeaderAddDetail","payload","performGetHeaderAddList","deleteHeaderAdd","performDeleteHeaderAdd","useState","data","setData","isMobile","useWindowSize","showCDialog","setShowCDialog","deletingUser","useRef","history","useHistory","url","useRouteMatch","fetchData","a","result","status","docs","useEffect","handleOnConfirm","current","_id","Card","border","className","Body","IconButton","variant","icon","type","MdAdd","onClick","push","DataTable","columns","title","field","width","render","rowData","src","BACKEND_URL","headerAddImage","name","headerAddLink","size","href","actions","_","console","log","components","Action","props","DropdownMenu","menu","label","iconSize","search","resetBtn","loading","onRowClick","filters","downloadcsv","downloadExcel","ConfirmDialog","show","setShow","message","onConfirm","HeaderAdd","path","refresh","setRefresh","Page","id","children","uuidv4","Icon","extraProps","isLoading","disabled","defaultProps","Input","React","forwardRef","ref","onChange","onBlur","error","isClearable","hint","rest","reset","setReset","inputType","setInputType","placeholder","step","temp","defaultValue","value","restProps","htmlFor","target","style","fontSize","color","tableIcons","FirstPage","LastPage","NextPage","PreviousPage","SortArrow","options","selectedRow","getList","filterOptions","resetFilters","setFilters","tableRef","createRef","openFilters","setOpenFilters","tableProps","icons","boxShadow","localization","toolbar","searchTooltip","searchPlaceholder","showTitle","filtering","draggable","actionsColumnIndex","pageSize","emptyRowsWhenPaging","pageSizeOptions","query","Promise","resolve","reject","getDataTableQueryParams","undefined","page","totalCount","totalDocs","rowStyle","backgroundColor","handleReset","exportType","exportFromJSON","types","csv","newData","map","transformedData","Object","values","reduce","acc","obj","transformedObject","Link","fileName","xls","getReason","bodyHtml","loadingBtnText","footer","submitting","setSubmitting","reason","setReason","handleClose","onHide","backdrop","keyboard","Header","closeButton","Title","dangerouslySetInnerHTML","__html","e","Footer","animation","length","postHeaderAddBegin","HEADER_ADD_TYPES","POST_HEADER_ADD_BEGIN","postHeaderAddSuccess","POST_HEADER_ADD_SUCCESS","postHeaderAddFailure","POST_HEADER_ADD_FAILURE","updateHeaderAddSuccess","UPDATE_HEADER_ADD_SUCCESS","resetSnack","GET_HEADER_ADD_LIST_BEGIN","axios","get","BASE_URL","GET_HEADER_ADD_LIST_SUCCESS","showSnack","getHeaderAddListFailure","GET_HEADER_ADD_LIST_FAILURE","performImagePosthHeaderAdd","post","performPostHeaderAdd","performUpdateHeaderAdd","UPDATE_HEADER_ADD_BEGIN","put","updateHeaderAddFailure","UPDATE_HEADER_ADD_FAILURE","DELETE_HEADER_ADD_BEGIN","delete","deleteHeaderAddSuccess","DELETE_HEADER_ADD_SUCCESS","deleteHeaderAddFailure","DELETE_HEADER_ADD_FAILURE"],"mappings":"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","file":"static/js/145.55a2d0ca.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Avatar from \"react-avatar\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport ConfirmDialog from \"../../components/ConfirmDialog\";\nimport DataTable from \"../../components/DataTable\";\nimport DropdownMenu from \"../../components/DropdownMenu\";\nimport IconButton from \"../../components/IconButton\";\nimport useWindowSize from \"../../hooks/UseWindowSize\";\nimport {\n  performDeleteHeaderAdd,\n  performGetHeaderAddList,\n} from \"../../redux/actionCreators/headerAddCreators\";\nimport { BACKEND_URL } from \"../../services/constants\";\n\nconst ListHeaderAdd = ({ fetching, deleteHeaderAdd, getHeaderAddDetail }) => {\n  const [data, setData] = useState([]);\n  const isMobile = useWindowSize();\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const history = useHistory();\n  const { url } = useRouteMatch();\n\n  const fetchData = async () => {\n    const result = await getHeaderAddDetail();\n    if (result.status === 200) {\n      setData(result?.data?.docs?.data);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleOnConfirm = async () => {\n    const result = await deleteHeaderAdd(deletingUser.current?._id);\n    if (result) {\n      fetchData();\n    }\n  };\n\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() => history.push(`${url}/AddHeaderAdd`)}\n            >\n              Add Header Banner Advertisement\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                title: \"Header Add Image\",\n                field: \"headerAddImage\",\n                width: 200,\n                render: (rowData) => (\n                  <>\n                    <Avatar\n                      src={BACKEND_URL + rowData?.headerAddImage}\n                      name={rowData?.headerAddLink}\n                      size=\"50\"\n                      className=\"ff-primary rounded-circle me-3\"\n                    />\n                  </>\n                ),\n              },\n              {\n                title: \"Header Add Image Link\",\n                field: \"headerAddLink\",\n                render: (rowData) => (\n                  <>\n                    <a href={rowData?.headerAddLink}>\n                      {rowData.headerAddLink ? rowData?.headerAddLink : \"N/A\"}\n                    </a>\n                  </>\n                ),\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(`${url}/${props.data._id}/edit`, {\n                          data: props.data,\n                        }),\n                    },\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-danger\">\n                          <MdDelete size={20} className=\"me-2\" /> Delete\n                        </span>\n                      ),\n                      onClick: () => {\n                        setShowCDialog(true);\n                        deletingUser.current = props.data;\n                      },\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            search={false}\n            resetBtn={false}\n            data={data}\n            loading={fetching}\n            onRowClick={(_, rowData) => null}\n            filters={true}\n            downloadcsv={true}\n            downloadExcel={true}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Header Advertisement\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.headerAddLink}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.headerAdd.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getHeaderAddDetail: (payload) => dispatch(performGetHeaderAddList(payload)),\n  deleteHeaderAdd: (payload) => dispatch(performDeleteHeaderAdd(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListHeaderAdd);\n","import React, { useState } from \"react\";\nimport { Route, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Page from \"../../components/Page\";\nimport ListHeaderAdd from \"../../partials/HeaderAdd/ListHeaderAdd\";\n\nconst HeaderAdd = () => {\n  const history = useHistory();\n  const { path } = useRouteMatch();\n  const [refresh, setRefresh] = useState(\"\");\n\n  return (\n    <Page id=\"page--HeaderAdd\" title=\"HeaderAdd\">\n      <div className=\"d-flex align-items-start mb-3\">\n        <h1 className=\"m-0\">Header Addvertisement</h1>\n      </div>\n      <Route\n        path={`${path}/`}\n        children={\n          <ListHeaderAdd\n            refresh={refresh}\n            setRefresh={() => setRefresh(uuidv4())}\n            history={history}\n          />\n        }\n      />\n    </Page>\n  );\n};\n\nexport default HeaderAdd;\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Icon = (icon, size = \"\") => {\r\n  const extraProps = {\r\n    size: 22\r\n  };\r\n  if (size === 'lg') {\r\n    extraProps.size = 32;\r\n  } else if (size === 'sm') {\r\n    extraProps.size = 18;\r\n  }\r\n  return <icon.type {...icon.props} {...extraProps} />\r\n}\r\n\r\nconst IconButton = ({ variant, className, onClick, size, isLoading, disabled, children, icon }) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      className={`btn-icon ${size ? `btn-icon-${size}` : ''} ${isLoading ? `btn-icon-loading` : ''} ${className}`}\r\n      onClick={onClick}\r\n      size={size}\r\n      disabled={isLoading || disabled}\r\n    >\r\n      <span>{Icon(icon, size)}{children && <span>{children}</span>}</span>\r\n    </Button>\r\n  )\r\n}\r\n\r\nIconButton.propTypes = {\r\n  children: PropTypes.node,\r\n  variant: PropTypes.string,\r\n  className: PropTypes.string,\r\n  size: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  isLoading: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  icon: PropTypes.any,\r\n};\r\n\r\nIconButton.defaultProps = {\r\n  variant: \"default\",\r\n  className: \"\",\r\n  size: \"\",\r\n  onClick: () => null,\r\n  isLoading: false,\r\n  disabled: false,\r\n  icon: null\r\n}\r\n\r\nexport default IconButton;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { MdCancel } from \"react-icons/md\";\r\nimport { AiOutlineEyeInvisible, AiOutlineEye } from \"react-icons/ai\";\r\n\r\nimport IconButton from \"../IconButton\";\r\n\r\nconst Input = React.forwardRef(\r\n  (\r\n    {\r\n      className,\r\n      onChange,\r\n      onBlur,\r\n      label,\r\n      id,\r\n      error,\r\n      isClearable,\r\n      hint,\r\n      type,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const [reset, setReset] = useState(uuidv4());\r\n    const [inputType, setInputType] = useState(type);\r\n\r\n    const onClear = () => {\r\n      onChange({ target: { value: \"\" } });\r\n      setReset(uuidv4());\r\n    };\r\n\r\n    const restProps = () => {\r\n      const temp = { ...rest };\r\n      temp.defaultValue = temp.value || \"\";\r\n      delete temp.value;\r\n      return temp;\r\n    };\r\n\r\n    return (\r\n      <span\r\n        className={`d-inline-block w-100 position-relative pt-2 pb-4 input__wrapper ${\r\n          error ? \"error\" : \"\"\r\n        }`}\r\n        ref={ref}\r\n      >\r\n        <input\r\n          key={`input-${reset}`}\r\n          id={`input-${id}`}\r\n          type={inputType}\r\n          className={`${className}${isClearable ? \" input-clearable\" : \"\"}`}\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          placeholder={label}\r\n          step=\"any\"\r\n          {...restProps()}\r\n        />\r\n        <label htmlFor={`input-${id}`}>{label}</label>\r\n        <span className=\"input-error\">{error}</span>\r\n        {isClearable && (\r\n          <MdCancel className=\"input-clear-btn\" size={18} onClick={onClear} />\r\n        )}\r\n        {type === \"password\" && (\r\n          <IconButton\r\n            icon={\r\n              inputType === \"password\" ? (\r\n                <AiOutlineEyeInvisible />\r\n              ) : (\r\n                <AiOutlineEye />\r\n              )\r\n            }\r\n            variant=\"outline-link\"\r\n            onClick={() =>\r\n              setInputType(inputType === \"password\" ? \"text\" : \"password\")\r\n            }\r\n            className=\"p-0 m-0 position-absolute btn--show-password\"\r\n          />\r\n        )}\r\n        {hint !== \"\" && (\r\n          <span style={{ fontSize: \"12px\", color: \"#c1b1b1\" }}>{hint}</span>\r\n        )}\r\n      </span>\r\n    );\r\n  }\r\n);\r\n\r\nInput.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  label: PropTypes.string,\r\n  id: PropTypes.string,\r\n  error: PropTypes.string,\r\n  isClearable: PropTypes.bool,\r\n  type: PropTypes.string,\r\n  hint: PropTypes.string,\r\n};\r\n\r\nInput.defaultProps = {\r\n  className: \"\",\r\n  onChange: () => null,\r\n  onBlur: () => null,\r\n  label: \"\",\r\n  id: uuidv4(),\r\n  error: \"\",\r\n  isClearable: false,\r\n  type: \"text\",\r\n  hint: \"\",\r\n};\r\n\r\nexport default Input;\r\n","import MaterialTable from \"@material-table/core\";\r\nimport exportFromJSON from \"export-from-json\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { createRef, forwardRef, useEffect, useState } from \"react\";\r\nimport {\r\n  MdArrowUpward,\r\n  MdChevronLeft,\r\n  MdChevronRight,\r\n  MdDownload,\r\n  MdFilterAlt,\r\n  MdFirstPage,\r\n  MdLastPage,\r\n  MdRefresh,\r\n} from \"react-icons/md\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { getDataTableQueryParams } from \"../../utils/index\";\r\nimport IconButton from \"../IconButton\";\r\n\r\nconst tableIcons = {\r\n  FirstPage: forwardRef((props, ref) => <MdFirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <MdLastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <MdChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <MdChevronLeft {...props} ref={ref} />\r\n  )),\r\n  SortArrow: forwardRef((props, ref) => <MdArrowUpward {...props} ref={ref} />),\r\n};\r\n\r\nconst DataTable = ({\r\n  loading,\r\n  columns,\r\n  actions,\r\n  components,\r\n  onRowClick,\r\n  options,\r\n  selectedRow,\r\n  getList,\r\n  search,\r\n  downloadcsv,\r\n  downloadExcel,\r\n  filters,\r\n  filterOptions,\r\n  data,\r\n  setFilters,\r\n  resetFilters,\r\n  refresh,\r\n  resetBtn,\r\n}) => {\r\n  const tableRef = createRef();\r\n  const [reset, setReset] = useState(uuidv4());\r\n  const [openFilters, setOpenFilters] = useState(false);\r\n  const tableProps = {\r\n    isLoading: loading,\r\n    icons: tableIcons,\r\n    style: {\r\n      boxShadow: \"none\",\r\n    },\r\n    localization: {\r\n      toolbar: {\r\n        searchTooltip: \"Search\",\r\n        searchPlaceholder: \"Search\",\r\n      },\r\n    },\r\n    options: {\r\n      showTitle: false,\r\n      search: true,\r\n      toolbar: true,\r\n      filtering: openFilters,\r\n      draggable: false,\r\n      actionsColumnIndex: -1,\r\n      pageSize: 10,\r\n      emptyRowsWhenPaging: false, // To avoid of having empty rows\r\n      pageSizeOptions: [10, 30, 50, 100, 500],\r\n      ...options,\r\n    },\r\n    columns: columns,\r\n    data: data\r\n      ? data\r\n      : (query) =>\r\n          new Promise(async (resolve, reject) => {\r\n            try {\r\n              let result = await getList(getDataTableQueryParams(query));\r\n              if (!result.data) {\r\n                return reject();\r\n              }\r\n              return resolve({\r\n                data:\r\n                  result.data.docs !== undefined\r\n                    ? result.data.docs\r\n                    : result.data,\r\n                page: result.data.page !== undefined ? result.data.page - 1 : 0,\r\n                totalCount:\r\n                  result.data.totalDocs !== undefined\r\n                    ? result.data.totalDocs\r\n                    : 0, // this is the total count of rows or documents\r\n              });\r\n            } catch (err) {\r\n              return reject(err);\r\n            }\r\n          }),\r\n    actions: actions,\r\n    onRowClick: onRowClick,\r\n  };\r\n\r\n  if (components) {\r\n    tableProps.components = components;\r\n  }\r\n\r\n  if (onRowClick) {\r\n    tableProps.options = {\r\n      ...tableProps.options,\r\n      rowStyle: (rowData) => ({\r\n        backgroundColor:\r\n          selectedRow && selectedRow === rowData.id ? \"#f5f5f5\" : \"#FFF\",\r\n      }),\r\n      onRowClick: onRowClick,\r\n    };\r\n  }\r\n\r\n  const handleDownloadCSV = () => {\r\n    const fileName = \"CSVformat\";\r\n    const exportType = exportFromJSON.types.csv;\r\n    const newData = data.map(({ data, ...rest }) => {\r\n      const transformedData = data\r\n        ? Object.values(data).reduce((acc, obj) => ({ ...acc, ...obj }), {})\r\n        : {};\r\n      const transformedObject = {\r\n        _id: rest._id,\r\n        Link: rest.Link,\r\n        ...transformedData,\r\n      };\r\n      return data ? transformedObject : rest;\r\n    });\r\n    exportFromJSON({ data: newData, fileName, exportType });\r\n  };\r\n\r\n  const handleDownloadXLS = () => {\r\n    const fileName = \"ExcelFormat\";\r\n    const exportType = exportFromJSON.types.xls;\r\n    const newData = data.map(({ data, ...rest }) => {\r\n      const transformedData = data\r\n        ? Object.values(data).reduce((acc, obj) => ({ ...acc, ...obj }), {})\r\n        : {};\r\n      const transformedObject = {\r\n        _id: rest._id,\r\n        Link: rest.Link,\r\n        ...transformedData,\r\n      };\r\n      return data ? transformedObject : rest;\r\n    });\r\n    exportFromJSON({ data: newData, fileName, exportType });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    if (onRowClick) {\r\n      onRowClick(null);\r\n    }\r\n    resetFilters();\r\n    setReset(uuidv4());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (refresh) {\r\n      handleReset();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [refresh]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 d-flex flex-lg-row flex-column position-relative table-toolbar\">\r\n        <span className=\"d-flex flex-wrap zindex-dropdown end-0 gap-2 gap-lg-3 align-items-center justify-content-end ms-auto\">\r\n          {filters && (\r\n            <IconButton\r\n              icon={<MdFilterAlt />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={() => setOpenFilters(!openFilters)}\r\n              disabled={loading}\r\n            >\r\n              Filters\r\n            </IconButton>\r\n          )}\r\n\r\n          {resetBtn && (\r\n            <IconButton\r\n              icon={<MdRefresh />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleReset}\r\n              disabled={loading}\r\n            >\r\n              Reset\r\n            </IconButton>\r\n          )}\r\n          {downloadcsv && (\r\n            <IconButton\r\n              icon={<MdDownload />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleDownloadCSV}\r\n              disabled={loading}\r\n            >\r\n              CSV\r\n            </IconButton>\r\n          )}\r\n          {downloadExcel && (\r\n            <IconButton\r\n              icon={<MdDownload />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleDownloadXLS}\r\n              disabled={loading}\r\n            >\r\n              Excel\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      </div>\r\n\r\n      <MaterialTable\r\n        key={`data-table-${reset}`}\r\n        tableRef={tableRef}\r\n        {...tableProps}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nDataTable.propTypes = {\r\n  loading: PropTypes.bool,\r\n  columns: PropTypes.array.isRequired,\r\n  actions: PropTypes.array,\r\n  components: PropTypes.any,\r\n  onRowClick: PropTypes.any,\r\n  options: PropTypes.object,\r\n  selectedRow: PropTypes.string,\r\n  getList: PropTypes.func.isRequired,\r\n  search: PropTypes.bool,\r\n  filters: PropTypes.bool,\r\n  filterOptions: PropTypes.array,\r\n  setFilters: PropTypes.func,\r\n  resetFilters: PropTypes.func,\r\n  refresh: PropTypes.string,\r\n  resetBtn: PropTypes.bool,\r\n};\r\n\r\nDataTable.defaultProps = {\r\n  loading: false,\r\n  actions: [],\r\n  components: null,\r\n  onRowClick: null,\r\n  options: {},\r\n  selectedRow: null,\r\n  search: true,\r\n  filters: false,\r\n  filterOptions: [],\r\n  setFilters: () => null,\r\n  resetFilters: () => null,\r\n  refresh: null,\r\n  resetBtn: true,\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { useState } from 'react';\r\nimport { Modal, Button, Spinner } from 'react-bootstrap';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Input from '../Form/Input';\r\n\r\nconst ConfirmDialog = ({ show, setShow, title, message, onConfirm, getReason, bodyHtml, loadingBtnText, footer }) => {\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [reason, setReason] = useState('');\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const handleOnConfirm = async () => {\r\n    setSubmitting(true);\r\n    await onConfirm(reason);\r\n    setSubmitting(false);\r\n    setShow(false);\r\n    setReason('');\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div dangerouslySetInnerHTML={{ __html: message }}></div>\r\n        {bodyHtml}\r\n        {getReason && (\r\n          <div>\r\n            <Input id=\"reason\" name=\"reason\" label=\"Reason\" value={reason} onChange={(e) => setReason(e.target.value)} />\r\n          </div>\r\n        )}\r\n      </Modal.Body>\r\n      {footer && (\r\n        <Modal.Footer>\r\n          <Button variant=\"default\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          {!getReason && (\r\n            <Button variant=\"danger\" onClick={handleOnConfirm}>\r\n              {!submitting && <span>Confirm</span>}\r\n              {submitting && (\r\n                <span>\r\n                  {loadingBtnText} <Spinner size=\"sm\" animation=\"border\" />\r\n                </span>\r\n              )}\r\n            </Button>\r\n          )}\r\n          {getReason && (\r\n            <Button disabled={reason === '' || reason.length <= 3} variant=\"danger\" onClick={handleOnConfirm}>\r\n              {!submitting && <span>Confirm</span>}\r\n              {submitting && (\r\n                <span>\r\n                  {loadingBtnText} <Spinner size=\"sm\" animation=\"border\" />\r\n                </span>\r\n              )}\r\n            </Button>\r\n          )}\r\n        </Modal.Footer>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nConfirmDialog.propTypes = {\r\n  show: PropTypes.bool,\r\n  setShow: PropTypes.func,\r\n  title: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onConfirm: PropTypes.func,\r\n  getReason: PropTypes.bool,\r\n  bodyHtml: PropTypes.node,\r\n  loadingBtnText: PropTypes.string,\r\n  footer: PropTypes.bool,\r\n};\r\n\r\nConfirmDialog.defaultProps = {\r\n  show: false,\r\n  setShow: () => null,\r\n  title: 'Give a title',\r\n  message: 'Your message here',\r\n  onConfirm: () => null,\r\n  getReason: false,\r\n  bodyHtml: <></>,\r\n  loadingBtnText: 'Deleting',\r\n  footer: true,\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import HEADER_ADD_TYPES from \"../types/headerAddTypes\";\n\nexport const resetState = () => ({\n  type: HEADER_ADD_TYPES.RESET_STATE,\n});\n\nexport const getHeaderAddListBegin = () => ({\n  type: HEADER_ADD_TYPES.GET_HEADER_ADD_LIST_BEGIN,\n});\n\nexport const getHeaderAddListSuccess = (data) => ({\n  type: HEADER_ADD_TYPES.GET_HEADER_ADD_LIST_SUCCESS,\n  payload: data,\n});\n\nexport const getHeaderAddListFailure = (error) => ({\n  type: HEADER_ADD_TYPES.GET_HEADER_ADD_LIST_FAILURE,\n  payload: error,\n});\nexport const postHeaderAddBegin = () => ({\n  type: HEADER_ADD_TYPES.POST_HEADER_ADD_BEGIN,\n});\n\nexport const postHeaderAddSuccess = (data) => ({\n  type: HEADER_ADD_TYPES.POST_HEADER_ADD_SUCCESS,\n  payload: data,\n});\n\nexport const postHeaderAddFailure = (error) => ({\n  type: HEADER_ADD_TYPES.POST_HEADER_ADD_FAILURE,\n  payload: error,\n});\nexport const deleteHeaderAddBegin = () => ({\n  type: HEADER_ADD_TYPES.DELETE_HEADER_ADD_BEGIN,\n});\n\nexport const deleteHeaderAddSuccess = (data) => ({\n  type: HEADER_ADD_TYPES.DELETE_HEADER_ADD_SUCCESS,\n  payload: data,\n});\n\nexport const deleteHeaderAddFailure = (error) => ({\n  type: HEADER_ADD_TYPES.DELETE_HEADER_ADD_FAILURE,\n  payload: error,\n});\nexport const updateHeaderAddBegin = () => ({\n  type: HEADER_ADD_TYPES.UPDATE_HEADER_ADD_BEGIN,\n});\n\nexport const updateHeaderAddSuccess = (data) => ({\n  type: HEADER_ADD_TYPES.UPDATE_HEADER_ADD_SUCCESS,\n  payload: data,\n});\n\nexport const updateHeaderAddFailure = (error) => ({\n  type: HEADER_ADD_TYPES.UPDATE_HEADER_ADD_FAILURE,\n  payload: error,\n});\n","import { showSnack, resetSnack } from \"../actions/alertActions\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../services/constants\";\nimport {\n  deleteHeaderAddBegin,\n  deleteHeaderAddFailure,\n  deleteHeaderAddSuccess,\n  getHeaderAddListBegin,\n  getHeaderAddListFailure,\n  getHeaderAddListSuccess,\n  postHeaderAddBegin,\n  postHeaderAddFailure,\n  postHeaderAddSuccess,\n  updateHeaderAddBegin,\n  updateHeaderAddFailure,\n  updateHeaderAddSuccess,\n} from \"../actions/headerActions\";\n\nexport function performGetHeaderAddList() {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(getHeaderAddListBegin());\n    try {\n      const result = await axios.get(`${BASE_URL}headerAdd`);\n      dispatch(getHeaderAddListSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: \"Header Advertisement List Retrieved Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(getHeaderAddListFailure());\n      return false;\n    }\n  };\n}\n\nexport function performImagePosthHeaderAdd(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(postHeaderAddBegin());\n    try {\n      const result = await axios.post(`${BASE_URL}headerAdd/uploads`, data);\n      dispatch(postHeaderAddSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: \"Header Advertisement Image Add Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(postHeaderAddFailure());\n      return false;\n    }\n  };\n}\n\nexport function performPostHeaderAdd(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(postHeaderAddBegin());\n    try {\n      const result = await axios.post(`${BASE_URL}headerAdd`, data);\n      dispatch(postHeaderAddSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: \"Header Advertisement Add Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(postHeaderAddFailure());\n      return false;\n    }\n  };\n}\n\nexport function performUpdateHeaderAdd(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(updateHeaderAddBegin());\n    try {\n      const id = data.id;\n      const result = await axios.put(`${BASE_URL}headerAdd/${id}`, data);\n      dispatch(updateHeaderAddSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: \"Header Advertisement Update Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(updateHeaderAddFailure());\n      return false;\n    }\n  };\n}\n\nexport function performDeleteHeaderAdd(id) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(deleteHeaderAddBegin());\n    try {\n      await axios.delete(`${BASE_URL}headerAdd/${id}`);\n      dispatch(deleteHeaderAddSuccess());\n      dispatch(\n        showSnack({\n          message: \"Header Advertisement Delete Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return true;\n    } catch (error) {\n      dispatch(deleteHeaderAddFailure());\n      return false;\n    }\n  };\n}\n"],"sourceRoot":""}