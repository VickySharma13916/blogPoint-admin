{"version":3,"sources":["partials/Forms/Newsletter/viewUserDetail.js","components/IconButton/index.js","components/Form/Input.js","components/DataTable/index.js","components/ConfirmDialog/index.js","redux/actions/newsletterActions.js","redux/actionCreators/newsletterCrestors.js"],"names":["connect","state","fetching","newsletter","dispatch","deleteNewsletterUserDetail","payload","performDeleteNewsLetterUserdetail","isMobile","useWindowSize","history","useHistory","userData","location","data","useState","showCDialog","setShowCDialog","deletingUser","useRef","handleOnConfirm","a","carrerid","_id","userId","current","push","id","title","className","icon","variant","onClick","goBack","border","Body","columns","field","customFilterAndSearch","term","rowData","firstName","render","lastName","email","width","style","height","overflow","message","actions","_","console","log","components","Action","props","menu","label","size","iconSize","onRowClick","loading","NewsletterUserDetail","search","downloadcsv","downloadExcel","filters","resetBtn","show","setShow","NewsletterTitle","onConfirm","Icon","extraProps","type","IconButton","isLoading","disabled","children","defaultProps","Input","React","forwardRef","ref","onChange","onBlur","error","isClearable","hint","rest","uuidv4","reset","setReset","inputType","setInputType","placeholder","step","temp","defaultValue","value","restProps","htmlFor","target","fontSize","color","tableIcons","FirstPage","LastPage","NextPage","PreviousPage","SortArrow","DataTable","options","selectedRow","getList","filterOptions","resetFilters","setFilters","refresh","tableRef","createRef","openFilters","setOpenFilters","tableProps","icons","boxShadow","localization","toolbar","searchTooltip","searchPlaceholder","showTitle","filtering","draggable","actionsColumnIndex","pageSize","emptyRowsWhenPaging","pageSizeOptions","query","Promise","resolve","reject","getDataTableQueryParams","result","undefined","docs","page","totalCount","totalDocs","rowStyle","backgroundColor","handleReset","useEffect","exportType","exportFromJSON","types","csv","newData","map","transformedData","Object","values","reduce","acc","obj","transformedObject","Link","fileName","xls","ConfirmDialog","getReason","bodyHtml","loadingBtnText","footer","submitting","setSubmitting","reason","setReason","handleClose","onHide","backdrop","keyboard","Header","closeButton","Title","dangerouslySetInnerHTML","__html","name","e","Footer","animation","length","postNewsletterSuccess","NEWSLETTER_TYPES","POST_NEWSLETTER_SUCCESS","updateNewsletterBegin","UPDATE_NEWSLETTER_BEGIN","updateNewsletterSuccess","UPDATE_NEWSLETTER_SUCCESS","updateNewsletterFailure","UPDATE_NEWSLETTER_FAILURE","postNewsletterImageBegin","POST_IMAGE_NEWSLETTER_BEGIN","postNewsletterImageSuccess","POST_IMAGE_NEWSLETTER_SUCCESS","postNewsletterImageFailure","POST_IMAGE_NEWSLETTER_FAILURE","performGetNewsletterList","resetSnack","GET_NEWSLETTER_LIST_BEGIN","axios","get","BASE_URL","GET_NEWSLETTER_LIST_SUCCESS","showSnack","getNewsletterListFailure","GET_NEWSLETTER_LIST_FAILURE","performImagePostNewsletter","post","performPostNewsletterFile","performPostNewsletter","POST_NEWSLETTER_BEGIN","postNewsletterFailure","POST_NEWSLETTER_FAILURE","performUpdateNewsletter","put","performDeleteNewsletter","delete"],"mappings":"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","file":"static/js/148.c02f5a3c.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { MdDelete } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport ConfirmDialog from \"../../../components/ConfirmDialog\";\nimport DataTable from \"../../../components/DataTable\";\nimport DropdownMenu from \"../../../components/DropdownMenu\";\nimport IconButton from \"../../../components/IconButton\";\nimport Page from \"../../../components/Page\";\nimport useWindowSize from \"../../../hooks/UseWindowSize\";\nimport { performDeleteNewsLetterUserdetail } from \"../../../redux/actionCreators/newsletterCrestors\";\n\nconst ViewUserDetail = ({ fetching, deleteNewsletterUserDetail }) => {\n  const isMobile = useWindowSize();\n  const history = useHistory();\n  const userData = history.location.state?.data;\n  const handleOnClose = () => {\n    history.goBack();\n  };\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const handleOnConfirm = async () => {\n    const data = {\n      carrerid: userData?._id,\n      userId: deletingUser.current?._id,\n    };\n    const result = await deleteNewsletterUserDetail(data);\n    if (result) {\n      history.push(\"/form\");\n    }\n  };\n  return (\n    <Page id=\"page--Carrer\" title=\"Carrer\">\n      <div className=\"d-flex align-items-center mb-3\">\n        <IconButton\n          icon={<BiArrowBack />}\n          variant=\"outline-link\"\n          onClick={handleOnClose}\n          className=\"p-0 me-2\"\n        />\n        <h4 className=\"m-0\">Newsletter User Details</h4>\n      </div>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body className={`${isMobile && \"p-0\"}`}>\n          <DataTable\n            columns={[\n              {\n                title: \"First Name\",\n                field: \"firstName\",\n                customFilterAndSearch: (term, rowData) =>\n                  term === rowData.firstName,\n                render: (rowData) => (\n                  <>\n                    <span>\n                      <>{rowData.firstName ? rowData.firstName : \"N/A\"}</>\n                    </span>\n                  </>\n                ),\n              },\n              {\n                title: \"Last name\",\n                field: \"lastName\",\n                customFilterAndSearch: (term, rowData) =>\n                  term === rowData.lastName,\n                render: (rowData) => (\n                  <div>{rowData.lastName ? rowData.lastName : \"N/A\"}</div>\n                ),\n              },\n              {\n                title: \"Email\",\n                field: \"email\",\n                customFilterAndSearch: (term, rowData) =>\n                  term === rowData.email,\n                render: (rowData) => (\n                  <span>{rowData.email ? rowData.email : \"N/A\"}</span>\n                ),\n              },\n              {\n                width: 600,\n                title: \"Message\",\n                field: \"message\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"600px\",\n                        height: \"300px\",\n                        overflow: \"scroll\",\n                      }}\n                    >\n                      {rowData?.message}\n                    </span>\n                  </>\n                ),\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-danger\">\n                          <MdDelete size={20} className=\"me-2\" /> Delete\n                        </span>\n                      ),\n                      onClick: () => {\n                        setShowCDialog(true);\n                        deletingUser.current = props.data;\n                      },\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            onRowClick={(_, rowData) => null}\n            loading={fetching}\n            data={userData?.NewsletterUserDetail}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Newsletter User Details\"\n        message={`Are you sure, you want to delete <b>${\n          userData?.NewsletterTitle\n        } - ${\n          deletingUser.current?.firstName + \" \" + deletingUser.current?.lastName\n        }</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </Page>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.newsletter.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteNewsletterUserDetail: (payload) =>\n    dispatch(performDeleteNewsLetterUserdetail(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewUserDetail);\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Icon = (icon, size = \"\") => {\r\n  const extraProps = {\r\n    size: 22\r\n  };\r\n  if (size === 'lg') {\r\n    extraProps.size = 32;\r\n  } else if (size === 'sm') {\r\n    extraProps.size = 18;\r\n  }\r\n  return <icon.type {...icon.props} {...extraProps} />\r\n}\r\n\r\nconst IconButton = ({ variant, className, onClick, size, isLoading, disabled, children, icon }) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      className={`btn-icon ${size ? `btn-icon-${size}` : ''} ${isLoading ? `btn-icon-loading` : ''} ${className}`}\r\n      onClick={onClick}\r\n      size={size}\r\n      disabled={isLoading || disabled}\r\n    >\r\n      <span>{Icon(icon, size)}{children && <span>{children}</span>}</span>\r\n    </Button>\r\n  )\r\n}\r\n\r\nIconButton.propTypes = {\r\n  children: PropTypes.node,\r\n  variant: PropTypes.string,\r\n  className: PropTypes.string,\r\n  size: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  isLoading: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  icon: PropTypes.any,\r\n};\r\n\r\nIconButton.defaultProps = {\r\n  variant: \"default\",\r\n  className: \"\",\r\n  size: \"\",\r\n  onClick: () => null,\r\n  isLoading: false,\r\n  disabled: false,\r\n  icon: null\r\n}\r\n\r\nexport default IconButton;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { MdCancel } from \"react-icons/md\";\r\nimport { AiOutlineEyeInvisible, AiOutlineEye } from \"react-icons/ai\";\r\n\r\nimport IconButton from \"../IconButton\";\r\n\r\nconst Input = React.forwardRef(\r\n  (\r\n    {\r\n      className,\r\n      onChange,\r\n      onBlur,\r\n      label,\r\n      id,\r\n      error,\r\n      isClearable,\r\n      hint,\r\n      type,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const [reset, setReset] = useState(uuidv4());\r\n    const [inputType, setInputType] = useState(type);\r\n\r\n    const onClear = () => {\r\n      onChange({ target: { value: \"\" } });\r\n      setReset(uuidv4());\r\n    };\r\n\r\n    const restProps = () => {\r\n      const temp = { ...rest };\r\n      temp.defaultValue = temp.value || \"\";\r\n      delete temp.value;\r\n      return temp;\r\n    };\r\n\r\n    return (\r\n      <span\r\n        className={`d-inline-block w-100 position-relative pt-2 pb-4 input__wrapper ${\r\n          error ? \"error\" : \"\"\r\n        }`}\r\n        ref={ref}\r\n      >\r\n        <input\r\n          key={`input-${reset}`}\r\n          id={`input-${id}`}\r\n          type={inputType}\r\n          className={`${className}${isClearable ? \" input-clearable\" : \"\"}`}\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          placeholder={label}\r\n          step=\"any\"\r\n          {...restProps()}\r\n        />\r\n        <label htmlFor={`input-${id}`}>{label}</label>\r\n        <span className=\"input-error\">{error}</span>\r\n        {isClearable && (\r\n          <MdCancel className=\"input-clear-btn\" size={18} onClick={onClear} />\r\n        )}\r\n        {type === \"password\" && (\r\n          <IconButton\r\n            icon={\r\n              inputType === \"password\" ? (\r\n                <AiOutlineEyeInvisible />\r\n              ) : (\r\n                <AiOutlineEye />\r\n              )\r\n            }\r\n            variant=\"outline-link\"\r\n            onClick={() =>\r\n              setInputType(inputType === \"password\" ? \"text\" : \"password\")\r\n            }\r\n            className=\"p-0 m-0 position-absolute btn--show-password\"\r\n          />\r\n        )}\r\n        {hint !== \"\" && (\r\n          <span style={{ fontSize: \"12px\", color: \"#c1b1b1\" }}>{hint}</span>\r\n        )}\r\n      </span>\r\n    );\r\n  }\r\n);\r\n\r\nInput.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  label: PropTypes.string,\r\n  id: PropTypes.string,\r\n  error: PropTypes.string,\r\n  isClearable: PropTypes.bool,\r\n  type: PropTypes.string,\r\n  hint: PropTypes.string,\r\n};\r\n\r\nInput.defaultProps = {\r\n  className: \"\",\r\n  onChange: () => null,\r\n  onBlur: () => null,\r\n  label: \"\",\r\n  id: uuidv4(),\r\n  error: \"\",\r\n  isClearable: false,\r\n  type: \"text\",\r\n  hint: \"\",\r\n};\r\n\r\nexport default Input;\r\n","import MaterialTable from \"@material-table/core\";\r\nimport exportFromJSON from \"export-from-json\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { createRef, forwardRef, useEffect, useState } from \"react\";\r\nimport {\r\n  MdArrowUpward,\r\n  MdChevronLeft,\r\n  MdChevronRight,\r\n  MdDownload,\r\n  MdFilterAlt,\r\n  MdFirstPage,\r\n  MdLastPage,\r\n  MdRefresh,\r\n} from \"react-icons/md\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { getDataTableQueryParams } from \"../../utils/index\";\r\nimport IconButton from \"../IconButton\";\r\n\r\nconst tableIcons = {\r\n  FirstPage: forwardRef((props, ref) => <MdFirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <MdLastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <MdChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <MdChevronLeft {...props} ref={ref} />\r\n  )),\r\n  SortArrow: forwardRef((props, ref) => <MdArrowUpward {...props} ref={ref} />),\r\n};\r\n\r\nconst DataTable = ({\r\n  loading,\r\n  columns,\r\n  actions,\r\n  components,\r\n  onRowClick,\r\n  options,\r\n  selectedRow,\r\n  getList,\r\n  search,\r\n  downloadcsv,\r\n  downloadExcel,\r\n  filters,\r\n  filterOptions,\r\n  data,\r\n  setFilters,\r\n  resetFilters,\r\n  refresh,\r\n  resetBtn,\r\n}) => {\r\n  const tableRef = createRef();\r\n  const [reset, setReset] = useState(uuidv4());\r\n  const [openFilters, setOpenFilters] = useState(false);\r\n  const tableProps = {\r\n    isLoading: loading,\r\n    icons: tableIcons,\r\n    style: {\r\n      boxShadow: \"none\",\r\n    },\r\n    localization: {\r\n      toolbar: {\r\n        searchTooltip: \"Search\",\r\n        searchPlaceholder: \"Search\",\r\n      },\r\n    },\r\n    options: {\r\n      showTitle: false,\r\n      search: true,\r\n      toolbar: true,\r\n      filtering: openFilters,\r\n      draggable: false,\r\n      actionsColumnIndex: -1,\r\n      pageSize: 10,\r\n      emptyRowsWhenPaging: false, // To avoid of having empty rows\r\n      pageSizeOptions: [10, 30, 50, 100, 500],\r\n      ...options,\r\n    },\r\n    columns: columns,\r\n    data: data\r\n      ? data\r\n      : (query) =>\r\n          new Promise(async (resolve, reject) => {\r\n            try {\r\n              let result = await getList(getDataTableQueryParams(query));\r\n              if (!result.data) {\r\n                return reject();\r\n              }\r\n              return resolve({\r\n                data:\r\n                  result.data.docs !== undefined\r\n                    ? result.data.docs\r\n                    : result.data,\r\n                page: result.data.page !== undefined ? result.data.page - 1 : 0,\r\n                totalCount:\r\n                  result.data.totalDocs !== undefined\r\n                    ? result.data.totalDocs\r\n                    : 0, // this is the total count of rows or documents\r\n              });\r\n            } catch (err) {\r\n              return reject(err);\r\n            }\r\n          }),\r\n    actions: actions,\r\n    onRowClick: onRowClick,\r\n  };\r\n\r\n  if (components) {\r\n    tableProps.components = components;\r\n  }\r\n\r\n  if (onRowClick) {\r\n    tableProps.options = {\r\n      ...tableProps.options,\r\n      rowStyle: (rowData) => ({\r\n        backgroundColor:\r\n          selectedRow && selectedRow === rowData.id ? \"#f5f5f5\" : \"#FFF\",\r\n      }),\r\n      onRowClick: onRowClick,\r\n    };\r\n  }\r\n\r\n  const handleDownloadCSV = () => {\r\n    const fileName = \"CSVformat\";\r\n    const exportType = exportFromJSON.types.csv;\r\n    const newData = data.map(({ data, ...rest }) => {\r\n      const transformedData = data\r\n        ? Object.values(data).reduce((acc, obj) => ({ ...acc, ...obj }), {})\r\n        : {};\r\n      const transformedObject = {\r\n        _id: rest._id,\r\n        Link: rest.Link,\r\n        ...transformedData,\r\n      };\r\n      return data ? transformedObject : rest;\r\n    });\r\n    exportFromJSON({ data: newData, fileName, exportType });\r\n  };\r\n\r\n  const handleDownloadXLS = () => {\r\n    const fileName = \"ExcelFormat\";\r\n    const exportType = exportFromJSON.types.xls;\r\n    const newData = data.map(({ data, ...rest }) => {\r\n      const transformedData = data\r\n        ? Object.values(data).reduce((acc, obj) => ({ ...acc, ...obj }), {})\r\n        : {};\r\n      const transformedObject = {\r\n        _id: rest._id,\r\n        Link: rest.Link,\r\n        ...transformedData,\r\n      };\r\n      return data ? transformedObject : rest;\r\n    });\r\n    exportFromJSON({ data: newData, fileName, exportType });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    if (onRowClick) {\r\n      onRowClick(null);\r\n    }\r\n    resetFilters();\r\n    setReset(uuidv4());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (refresh) {\r\n      handleReset();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [refresh]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 d-flex flex-lg-row flex-column position-relative table-toolbar\">\r\n        <span className=\"d-flex flex-wrap zindex-dropdown end-0 gap-2 gap-lg-3 align-items-center justify-content-end ms-auto\">\r\n          {filters && (\r\n            <IconButton\r\n              icon={<MdFilterAlt />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={() => setOpenFilters(!openFilters)}\r\n              disabled={loading}\r\n            >\r\n              Filters\r\n            </IconButton>\r\n          )}\r\n\r\n          {resetBtn && (\r\n            <IconButton\r\n              icon={<MdRefresh />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleReset}\r\n              disabled={loading}\r\n            >\r\n              Reset\r\n            </IconButton>\r\n          )}\r\n          {downloadcsv && (\r\n            <IconButton\r\n              icon={<MdDownload />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleDownloadCSV}\r\n              disabled={loading}\r\n            >\r\n              CSV\r\n            </IconButton>\r\n          )}\r\n          {downloadExcel && (\r\n            <IconButton\r\n              icon={<MdDownload />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleDownloadXLS}\r\n              disabled={loading}\r\n            >\r\n              Excel\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      </div>\r\n\r\n      <MaterialTable\r\n        key={`data-table-${reset}`}\r\n        tableRef={tableRef}\r\n        {...tableProps}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nDataTable.propTypes = {\r\n  loading: PropTypes.bool,\r\n  columns: PropTypes.array.isRequired,\r\n  actions: PropTypes.array,\r\n  components: PropTypes.any,\r\n  onRowClick: PropTypes.any,\r\n  options: PropTypes.object,\r\n  selectedRow: PropTypes.string,\r\n  getList: PropTypes.func.isRequired,\r\n  search: PropTypes.bool,\r\n  filters: PropTypes.bool,\r\n  filterOptions: PropTypes.array,\r\n  setFilters: PropTypes.func,\r\n  resetFilters: PropTypes.func,\r\n  refresh: PropTypes.string,\r\n  resetBtn: PropTypes.bool,\r\n};\r\n\r\nDataTable.defaultProps = {\r\n  loading: false,\r\n  actions: [],\r\n  components: null,\r\n  onRowClick: null,\r\n  options: {},\r\n  selectedRow: null,\r\n  search: true,\r\n  filters: false,\r\n  filterOptions: [],\r\n  setFilters: () => null,\r\n  resetFilters: () => null,\r\n  refresh: null,\r\n  resetBtn: true,\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { useState } from 'react';\r\nimport { Modal, Button, Spinner } from 'react-bootstrap';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Input from '../Form/Input';\r\n\r\nconst ConfirmDialog = ({ show, setShow, title, message, onConfirm, getReason, bodyHtml, loadingBtnText, footer }) => {\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [reason, setReason] = useState('');\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const handleOnConfirm = async () => {\r\n    setSubmitting(true);\r\n    await onConfirm(reason);\r\n    setSubmitting(false);\r\n    setShow(false);\r\n    setReason('');\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div dangerouslySetInnerHTML={{ __html: message }}></div>\r\n        {bodyHtml}\r\n        {getReason && (\r\n          <div>\r\n            <Input id=\"reason\" name=\"reason\" label=\"Reason\" value={reason} onChange={(e) => setReason(e.target.value)} />\r\n          </div>\r\n        )}\r\n      </Modal.Body>\r\n      {footer && (\r\n        <Modal.Footer>\r\n          <Button variant=\"default\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          {!getReason && (\r\n            <Button variant=\"danger\" onClick={handleOnConfirm}>\r\n              {!submitting && <span>Confirm</span>}\r\n              {submitting && (\r\n                <span>\r\n                  {loadingBtnText} <Spinner size=\"sm\" animation=\"border\" />\r\n                </span>\r\n              )}\r\n            </Button>\r\n          )}\r\n          {getReason && (\r\n            <Button disabled={reason === '' || reason.length <= 3} variant=\"danger\" onClick={handleOnConfirm}>\r\n              {!submitting && <span>Confirm</span>}\r\n              {submitting && (\r\n                <span>\r\n                  {loadingBtnText} <Spinner size=\"sm\" animation=\"border\" />\r\n                </span>\r\n              )}\r\n            </Button>\r\n          )}\r\n        </Modal.Footer>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nConfirmDialog.propTypes = {\r\n  show: PropTypes.bool,\r\n  setShow: PropTypes.func,\r\n  title: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onConfirm: PropTypes.func,\r\n  getReason: PropTypes.bool,\r\n  bodyHtml: PropTypes.node,\r\n  loadingBtnText: PropTypes.string,\r\n  footer: PropTypes.bool,\r\n};\r\n\r\nConfirmDialog.defaultProps = {\r\n  show: false,\r\n  setShow: () => null,\r\n  title: 'Give a title',\r\n  message: 'Your message here',\r\n  onConfirm: () => null,\r\n  getReason: false,\r\n  bodyHtml: <></>,\r\n  loadingBtnText: 'Deleting',\r\n  footer: true,\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import NEWSLETTER_TYPES from \"../types/newsletterTypes\";\r\n\r\nexport const resetState = () => ({\r\n  type: NEWSLETTER_TYPES.RESET_STATE,\r\n});\r\n\r\nexport const getNewsletterListBegin = () => ({\r\n  type: NEWSLETTER_TYPES.GET_NEWSLETTER_LIST_BEGIN,\r\n});\r\n\r\nexport const getNewsletterListSuccess = (data) => ({\r\n  type: NEWSLETTER_TYPES.GET_NEWSLETTER_LIST_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const getNewsletterListFailure = (error) => ({\r\n  type: NEWSLETTER_TYPES.GET_NEWSLETTER_LIST_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const postNewsletterBegin = () => ({\r\n  type: NEWSLETTER_TYPES.POST_NEWSLETTER_BEGIN,\r\n});\r\n\r\nexport const postNewsletterSuccess = (data) => ({\r\n  type: NEWSLETTER_TYPES.POST_NEWSLETTER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const postNewsletterFailure = (error) => ({\r\n  type: NEWSLETTER_TYPES.POST_NEWSLETTER_FAILURE,\r\n  payload: error,\r\n});\r\nexport const updateNewsletterBegin = () => ({\r\n  type: NEWSLETTER_TYPES.UPDATE_NEWSLETTER_BEGIN,\r\n});\r\n\r\nexport const updateNewsletterSuccess = (data) => ({\r\n  type: NEWSLETTER_TYPES.UPDATE_NEWSLETTER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const updateNewsletterFailure = (error) => ({\r\n  type: NEWSLETTER_TYPES.UPDATE_NEWSLETTER_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const postNewsletterImageBegin = () => ({\r\n  type: NEWSLETTER_TYPES.POST_IMAGE_NEWSLETTER_BEGIN,\r\n});\r\n\r\nexport const postNewsletterImageSuccess = (data) => ({\r\n  type: NEWSLETTER_TYPES.POST_IMAGE_NEWSLETTER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const postNewsletterImageFailure = (error) => ({\r\n  type: NEWSLETTER_TYPES.POST_IMAGE_NEWSLETTER_FAILURE,\r\n  payload: error,\r\n});\r\n","import {\r\n  getNewsletterListBegin,\r\n  getNewsletterListFailure,\r\n  getNewsletterListSuccess,\r\n  postNewsletterBegin,\r\n  postNewsletterFailure,\r\n  postNewsletterImageBegin,\r\n  postNewsletterImageFailure,\r\n  postNewsletterImageSuccess,\r\n  postNewsletterSuccess,\r\n  updateNewsletterBegin,\r\n  updateNewsletterFailure,\r\n  updateNewsletterSuccess,\r\n} from \"../actions/newsletterActions\";\r\nimport { showSnack, resetSnack } from \"../actions/alertActions\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../services/constants\";\r\n\r\nexport function performGetNewsletterList() {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(getNewsletterListBegin());\r\n    try {\r\n      const result = await axios.get(`${BASE_URL}newsletter`);\r\n      dispatch(getNewsletterListSuccess(result.data.docs.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Newsletter Retrieved Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(getNewsletterListFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\nexport function performImagePostNewsletter(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postNewsletterImageBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}newsletter/uploads`, data);\r\n      dispatch(postNewsletterImageSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Newsletter Image Add Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postNewsletterImageFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performPostNewsletterFile(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postNewsletterImageBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}newsletter/uploadFile`, data);\r\n      dispatch(postNewsletterImageSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Newsletter File Add Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postNewsletterImageFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performPostNewsletter(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postNewsletterBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}newsletter`, data);\r\n      dispatch(postNewsletterSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Newsletter Add Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postNewsletterFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performUpdateNewsletter(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(updateNewsletterBegin());\r\n    try {\r\n      const id = data.id;\r\n      const result = await axios.put(`${BASE_URL}newsletter/${id}`, data);\r\n      dispatch(updateNewsletterSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Newsletter Update Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(updateNewsletterFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performDeleteNewsletter(id) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(updateNewsletterBegin());\r\n    try {\r\n      await axios.delete(`${BASE_URL}newsletter/${id}`);\r\n      dispatch(updateNewsletterSuccess());\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Newsletter Delete Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return true;\r\n    } catch (error) {\r\n      dispatch(updateNewsletterFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performDeleteNewsLetterUserdetail(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(updateNewsletterBegin());\r\n    try {\r\n      const carrerid = data.carrerid;\r\n      const userId = data.userId;\r\n      await axios.delete(\r\n        `${BASE_URL}newsletter/${carrerid}/userdetails/${userId}`\r\n      );\r\n      dispatch(updateNewsletterSuccess());\r\n      dispatch(\r\n        showSnack({\r\n          message: \"User Detail Newsletter Delete Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return true;\r\n    } catch (error) {\r\n      dispatch(updateNewsletterFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n"],"sourceRoot":""}