{"version":3,"sources":["containers/Auth/InviteAdmin/index.js","components/IconButton/index.js","components/Form/Input.js","services/utils.js","services/requests.js","redux/actionCreators/authCreators.js","services/validations.js"],"names":["connect","state","submitting","auth","error","dispatch","handleEmailVerifyAdmin","payload","performEmailVerificationAdmin","useForm","resolver","InviteAdminRules","defaultValues","name","password","confirmpassword","register","handleSubmit","errors","formState","history","useHistory","token","useLocation","pathname","split","onSubmit","data","newData","push","id","title","containerFluid","padding","className","border","style","maxWidth","Header","Body","xs","label","message","type","variant","size","disabled","animation","Icon","icon","extraProps","props","IconButton","onClick","isLoading","children","defaultProps","Input","React","forwardRef","ref","onChange","onBlur","isClearable","hint","rest","useState","uuidv4","reset","setReset","inputType","setInputType","placeholder","step","temp","defaultValue","value","restProps","htmlFor","target","fontSize","color","options","extractErrorMessage","_","isString","console","log","errorHandler","status","store","showSnack","getToken","a","getState","access","refresh","decodedToken","jwt_decode","date","Date","setUTCSeconds","exp","valueOf","axios","post","BASE_URL","ENDPOINTS","REFRESH_TOKEN","refreshToken","result","refreshTokenSuccess","accessToken","response","makeRequest","Promise","resolve","reject","defaultOptions","baseURL","headers","reason","timeout","client","create","interceptors","request","use","config","Authorization","then","catch","GET","url","params","method","POST","performGetAdminList","resetSnack","getAdminDetailsBegin","get","getAdminDetailsSuccess","docs","msg","getAdminDetailsFailure","performLogin","loginBegin","loginSuccess","user","role","loginFailure","performAdminImagePost","postProfileDetailBegin","postProfileDetailSuccess","postProfileDetailFailure","performSignUp","performForgotPassword","setSubmitting","postVerifyEmailBegin","VERIFY_EMAIL","postVerifyEmailSuccess","postVerifyEmailFailure","performForgotPasswordEmailVerificationAdmin","passwordVerifyEmailBegin","passwordVerifyEmailSuccess","passwordVerifyEmailFailure","performResetPassword","resetPasswordBegin","resetPasswordSuccess","resetPasswordFailure","performDeleteAdmin","delete","mobileRegExp","loginRules","yupResolver","Yup","email","required","signUpRules","firstName","lastName","mobileNumber","resetPasswordRules","otp","passcode","typeError","countryCode","mobile","test","confirmPassword","this","parent","description","isSuperAdmin","forgotPasswordRules","isoCode","financialStartDate","financialQuarterOne","financialQuarterTwo","financialQuarterThree","financialQuarterFour","dateFormat","distanceUnit","stateCode","amount","number","total","phonecode","currency","content"],"mappings":"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","file":"static/js/153.9f78d666.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Card, Row, Col, Button, Form, Spinner } from \"react-bootstrap\";\r\nimport Page from \"../../../components/Page\";\r\nimport Input from \"../../../components/Form/Input\";\r\nimport { InviteAdminRules } from \"../../../services/validations\";\r\nimport { performEmailVerificationAdmin } from \"../../../redux/actionCreators/authCreators\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst InviteAdmin = ({ submitting, handleEmailVerifyAdmin }) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: InviteAdminRules,\r\n    defaultValues: {\r\n      name: \"\",\r\n      password: \"\",\r\n      confirmpassword: \"\",\r\n    },\r\n  });\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const token = location.pathname.split(\"token=\")[1];\r\n  const onSubmit = async (data) => {\r\n    const { name, password } = data;\r\n    const newData = { name, password, token };\r\n    const result = await handleEmailVerifyAdmin(newData);\r\n    if (result) {\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page\r\n      id=\"page--emailverification\"\r\n      title=\"Emailverification\"\r\n      containerFluid={true}\r\n      padding={false}\r\n      className=\"h-100\"\r\n    >\r\n      <div className=\" w-100 h-100 page--wrapper\">\r\n        <div className=\"d-flex flex-column align-items-center h-100 justify-content-center py-5 px-4 login_form\">\r\n          <Card\r\n            border=\"light\"\r\n            className=\"w-100 mx-auto px-4 pt-3 pb-4 my-5\"\r\n            style={{ maxWidth: 500 }}\r\n          >\r\n            <Card.Header>Invite Admin</Card.Header>\r\n            <Card.Body>\r\n              <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <Row>\r\n                  <Col xs={12}>\r\n                    <Input\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      label=\"Name\"\r\n                      {...register(\"name\")}\r\n                      error={errors.name?.message}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col xs={12}>\r\n                    <Input\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      {...register(\"password\")}\r\n                      error={errors.password?.message}\r\n                    />\r\n                  </Col>\r\n                  <Col xs={12}>\r\n                    <Input\r\n                      id=\"confirmpassword\"\r\n                      type=\"password\"\r\n                      name=\"confirmpassword\"\r\n                      label=\"Confirm Password\"\r\n                      {...register(\"confirmpassword\")}\r\n                      error={errors.confirmpassword?.message}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col xs={12} className=\"pt-4 position-relative\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"primary\"\r\n                      size=\"lg\"\r\n                      className={`w-100`}\r\n                      disabled={submitting}\r\n                    >\r\n                      {!submitting && <span>Submit</span>}\r\n                      {submitting && <Spinner animation=\"border\" />}\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  submitting: state.auth.submitting,\r\n  error: state.auth.error,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleEmailVerifyAdmin: (payload) =>\r\n    dispatch(performEmailVerificationAdmin(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InviteAdmin);\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Icon = (icon, size = \"\") => {\r\n  const extraProps = {\r\n    size: 22\r\n  };\r\n  if (size === 'lg') {\r\n    extraProps.size = 32;\r\n  } else if (size === 'sm') {\r\n    extraProps.size = 18;\r\n  }\r\n  return <icon.type {...icon.props} {...extraProps} />\r\n}\r\n\r\nconst IconButton = ({ variant, className, onClick, size, isLoading, disabled, children, icon }) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      className={`btn-icon ${size ? `btn-icon-${size}` : ''} ${isLoading ? `btn-icon-loading` : ''} ${className}`}\r\n      onClick={onClick}\r\n      size={size}\r\n      disabled={isLoading || disabled}\r\n    >\r\n      <span>{Icon(icon, size)}{children && <span>{children}</span>}</span>\r\n    </Button>\r\n  )\r\n}\r\n\r\nIconButton.propTypes = {\r\n  children: PropTypes.node,\r\n  variant: PropTypes.string,\r\n  className: PropTypes.string,\r\n  size: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  isLoading: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  icon: PropTypes.any,\r\n};\r\n\r\nIconButton.defaultProps = {\r\n  variant: \"default\",\r\n  className: \"\",\r\n  size: \"\",\r\n  onClick: () => null,\r\n  isLoading: false,\r\n  disabled: false,\r\n  icon: null\r\n}\r\n\r\nexport default IconButton;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { MdCancel } from \"react-icons/md\";\r\nimport { AiOutlineEyeInvisible, AiOutlineEye } from \"react-icons/ai\";\r\n\r\nimport IconButton from \"../IconButton\";\r\n\r\nconst Input = React.forwardRef(\r\n  (\r\n    {\r\n      className,\r\n      onChange,\r\n      onBlur,\r\n      label,\r\n      id,\r\n      error,\r\n      isClearable,\r\n      hint,\r\n      type,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const [reset, setReset] = useState(uuidv4());\r\n    const [inputType, setInputType] = useState(type);\r\n\r\n    const onClear = () => {\r\n      onChange({ target: { value: \"\" } });\r\n      setReset(uuidv4());\r\n    };\r\n\r\n    const restProps = () => {\r\n      const temp = { ...rest };\r\n      temp.defaultValue = temp.value || \"\";\r\n      delete temp.value;\r\n      return temp;\r\n    };\r\n\r\n    return (\r\n      <span\r\n        className={`d-inline-block w-100 position-relative pt-2 pb-4 input__wrapper ${\r\n          error ? \"error\" : \"\"\r\n        }`}\r\n        ref={ref}\r\n      >\r\n        <input\r\n          key={`input-${reset}`}\r\n          id={`input-${id}`}\r\n          type={inputType}\r\n          className={`${className}${isClearable ? \" input-clearable\" : \"\"}`}\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          placeholder={label}\r\n          step=\"any\"\r\n          {...restProps()}\r\n        />\r\n        <label htmlFor={`input-${id}`}>{label}</label>\r\n        <span className=\"input-error\">{error}</span>\r\n        {isClearable && (\r\n          <MdCancel className=\"input-clear-btn\" size={18} onClick={onClear} />\r\n        )}\r\n        {type === \"password\" && (\r\n          <IconButton\r\n            icon={\r\n              inputType === \"password\" ? (\r\n                <AiOutlineEyeInvisible />\r\n              ) : (\r\n                <AiOutlineEye />\r\n              )\r\n            }\r\n            variant=\"outline-link\"\r\n            onClick={() =>\r\n              setInputType(inputType === \"password\" ? \"text\" : \"password\")\r\n            }\r\n            className=\"p-0 m-0 position-absolute btn--show-password\"\r\n          />\r\n        )}\r\n        {hint !== \"\" && (\r\n          <span style={{ fontSize: \"12px\", color: \"#c1b1b1\" }}>{hint}</span>\r\n        )}\r\n      </span>\r\n    );\r\n  }\r\n);\r\n\r\nInput.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  label: PropTypes.string,\r\n  id: PropTypes.string,\r\n  error: PropTypes.string,\r\n  isClearable: PropTypes.bool,\r\n  type: PropTypes.string,\r\n  hint: PropTypes.string,\r\n};\r\n\r\nInput.defaultProps = {\r\n  className: \"\",\r\n  onChange: () => null,\r\n  onBlur: () => null,\r\n  label: \"\",\r\n  id: uuidv4(),\r\n  error: \"\",\r\n  isClearable: false,\r\n  type: \"text\",\r\n  hint: \"\",\r\n};\r\n\r\nexport default Input;\r\n","import axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport _ from \"lodash-es\";\r\nimport { showSnack } from \"../redux/actions/alertActions\";\r\nimport { refreshTokenSuccess } from \"../redux/actions/authActions\";\r\nimport { store } from \"../redux/store\";\r\nimport { BASE_URL, ENDPOINTS } from \"./constants\";\r\n\r\nconst options = {\r\n  variant: \"error\",\r\n};\r\n\r\nconst extractErrorMessage = (data) => {\r\n  if (_.isString(data)) {\r\n    return data;\r\n  }\r\n\r\n  if (!data.error) {\r\n    return \"Something went wrong\";\r\n  }\r\n\r\n  if (!_.isString(data.error)) {\r\n    console.log(data.error);\r\n  }\r\n\r\n  return data.error;\r\n};\r\n\r\nexport const errorHandler = ({ status, data }) => {\r\n  switch (status) {\r\n    case 401:\r\n      store.dispatch(\r\n        showSnack({ message: extractErrorMessage(data), options })\r\n      );\r\n      // store.dispatch(logout());\r\n      break;\r\n    case 400:\r\n      store.dispatch(\r\n        showSnack({ message: extractErrorMessage(data), options })\r\n      );\r\n      break;\r\n    case 403:\r\n      store.dispatch(\r\n        showSnack({ message: extractErrorMessage(data), options })\r\n      );\r\n      break;\r\n    case 422:\r\n      store.dispatch(\r\n        showSnack({ message: extractErrorMessage(data), options })\r\n      );\r\n      break;\r\n    case 404:\r\n      store.dispatch(showSnack({ message: \"Resource not found\", options }));\r\n      break;\r\n    default:\r\n      store.dispatch(showSnack({ message: \"Something went wrong\", options }));\r\n      break;\r\n  }\r\n};\r\n\r\nexport const getToken = async () => {\r\n  const state = store.getState();\r\n  const {\r\n    auth: { token },\r\n  } = state;\r\n\r\n  if (!token || !token.access.token || !token.refresh.token) {\r\n    return null;\r\n  }\r\n\r\n  const decodedToken = jwt_decode(token.access.token);\r\n  const date = new Date(0);\r\n  date.setUTCSeconds(decodedToken.exp);\r\n  if (date.valueOf() < new Date().valueOf()) {\r\n    try {\r\n      const result = await axios.post(\r\n        `${BASE_URL}/${ENDPOINTS.REFRESH_TOKEN}`,\r\n        { refreshToken: token.refresh.token }\r\n      );\r\n      store.dispatch(refreshTokenSuccess({ token: result.data.data }));\r\n      return result.data.data.accessToken;\r\n    } catch (err) {\r\n      errorHandler(err.response);\r\n    }\r\n  }\r\n  return token.access.token;\r\n};\r\n\r\nexport const uniqueValues = (arr, keyProps) => {\r\n  const kvArray = arr.map((entry) => {\r\n    const key = keyProps.map((k) => entry.headers[k]).join(\"|\");\r\n    return [key, entry];\r\n  });\r\n  const map = new Map(kvArray);\r\n  return Array.from(map.values());\r\n};\r\n","import axios from \"axios\";\r\nimport { BASE_URL, ENDPOINTS } from \"./constants\";\r\nimport { getToken, errorHandler } from \"./utils\";\r\n\r\nconst makeRequest = async (options) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const defaultOptions = {\r\n        baseURL: BASE_URL,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          reason: options.data?.reason || null,\r\n        },\r\n        timeout: 60000,\r\n      };\r\n\r\n      delete options.data?.reason;\r\n      const client = axios.create(defaultOptions);\r\n      const token = await getToken();\r\n      if (token) {\r\n        client.interceptors.request.use(function (config) {\r\n          config.headers.Authorization = `Bearer ${token}`;\r\n          return config;\r\n        });\r\n      }\r\n\r\n      return client(options)\r\n        .then((response) => {\r\n          return resolve(response.data);\r\n        })\r\n        .catch((error) => {\r\n          errorHandler(error.response ? error.response : { status: 500 });\r\n          return reject(\r\n            error.response && error.response.data.error\r\n              ? error.response.data.error\r\n              : \"Something went wrong\"\r\n          );\r\n        });\r\n    } catch (err) {\r\n      errorHandler({ status: 500 });\r\n      reject(err.message);\r\n    }\r\n  });\r\n};\r\n\r\nexport const GET = ({ url, params = {}, data = {} }) =>\r\n  makeRequest({ url, method: \"get\", params, data });\r\n\r\nexport const POST = ({ url, params = {}, data = {} }) =>\r\n  makeRequest({ url, method: \"post\", params, data });\r\n\r\nexport const PUT = ({ url, params = {}, data = {} }) =>\r\n  makeRequest({ url, method: \"put\", params, data });\r\n\r\nexport const PATCH = ({ url, params = {}, data = {} }) =>\r\n  makeRequest({ url, method: \"patch\", params, data });\r\n\r\nexport const DELETE = ({ url, params = {}, data = {} }) =>\r\n  makeRequest({ url, method: \"delete\", params, data });\r\n\r\nexport default ENDPOINTS;\r\n","import { resetSnack, showSnack } from \"../actions/alertActions\";\r\nimport {\r\n  getAdminDetailsBegin,\r\n  getAdminDetailsFailure,\r\n  getAdminDetailsSuccess,\r\n  getProfileDetailsBegin,\r\n  getProfileDetailsFailure,\r\n  getProfileDetailsSuccess,\r\n  loginBegin,\r\n  loginFailure,\r\n  loginSuccess,\r\n  passwordVerifyEmailBegin,\r\n  passwordVerifyEmailFailure,\r\n  passwordVerifyEmailSuccess,\r\n  postProfileDetailBegin,\r\n  postProfileDetailFailure,\r\n  postProfileDetailSuccess,\r\n  postVerifyEmailBegin,\r\n  postVerifyEmailFailure,\r\n  postVerifyEmailSuccess,\r\n  resetPasswordBegin,\r\n  resetPasswordFailure,\r\n  resetPasswordSuccess,\r\n  setSubmitting,\r\n} from \"../actions/authActions\";\r\n\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../services/constants\";\r\nimport ENDPOINTS, { GET, POST } from \"../../services/requests\";\r\n\r\nexport function performGetAdminList() {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(getAdminDetailsBegin());\r\n    try {\r\n      const result = await axios.get(`${BASE_URL}admin`);\r\n      dispatch(getAdminDetailsSuccess(result?.data?.docs?.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: result?.data?.msg,\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(getAdminDetailsFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performLogin(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(loginBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}admin/login`, data);\r\n      if (result.status === 200) {\r\n        dispatch(\r\n          loginSuccess({\r\n            token: result.data.token,\r\n            user: result.data.user,\r\n            role: null,\r\n          })\r\n        );\r\n        dispatch(\r\n          showSnack({\r\n            message: \"Logged in successfully!\",\r\n            options: {\r\n              variant: \"success\",\r\n            },\r\n          })\r\n        );\r\n      } else {\r\n        // Handle error messages from the backend\r\n        dispatch(\r\n          showSnack({\r\n            message: result.data.error || \"Something went wrong!\",\r\n            options: {\r\n              variant: \"error\",\r\n            },\r\n          })\r\n        );\r\n      }\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Something went wrong!\",\r\n          options: {\r\n            variant: \"error\",\r\n          },\r\n        })\r\n      );\r\n      dispatch(loginFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performAdminImagePost(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postProfileDetailBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}admin/uploads`, data);\r\n      dispatch(postProfileDetailSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Admin Image Add Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postProfileDetailFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performSignUp(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postProfileDetailBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}admin/signup`, data);\r\n      dispatch(postProfileDetailSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Sign Up Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postProfileDetailFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performForgotPassword(data) {\r\n  return async (dispatch) => {\r\n    dispatch(setSubmitting(true));\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}admin/forgot-password`, data);\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Verification Link Send to the Email.\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result.data;\r\n    } catch (error) {\r\n      return false;\r\n    } finally {\r\n      dispatch(setSubmitting(false));\r\n    }\r\n  };\r\n}\r\n\r\nexport function performEmailVerificationAdmin(data) {\r\n  return async (dispatch) => {\r\n    dispatch(setSubmitting(true));\r\n    dispatch(postVerifyEmailBegin());\r\n    try {\r\n      const result = await POST({ url: ENDPOINTS.VERIFY_EMAIL, data });\r\n      if (!result) {\r\n        dispatch(\r\n          showSnack({\r\n            message: result.message,\r\n            options: {\r\n              variant: \"success\",\r\n            },\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(postVerifyEmailSuccess(result.data));\r\n        dispatch(\r\n          showSnack({\r\n            message: result.message,\r\n            options: {\r\n              variant: \"success\",\r\n            },\r\n          })\r\n        );\r\n      }\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postVerifyEmailFailure(error));\r\n    } finally {\r\n      dispatch(setSubmitting(false));\r\n    }\r\n  };\r\n}\r\n\r\nexport function performForgotPasswordEmailVerificationAdmin(data) {\r\n  return async (dispatch) => {\r\n    dispatch(passwordVerifyEmailBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}admin/verify-token`, data);\r\n      if (!result) {\r\n        dispatch(\r\n          showSnack({\r\n            message: \"Invalid Token\",\r\n            options: {\r\n              variant: \"error\",\r\n            },\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(passwordVerifyEmailSuccess());\r\n        dispatch(\r\n          showSnack({\r\n            message: \"Email Token Verified\",\r\n            options: {\r\n              variant: \"success\",\r\n            },\r\n          })\r\n        );\r\n      }\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(passwordVerifyEmailFailure(error));\r\n    }\r\n  };\r\n}\r\n\r\nexport function performResetPassword(data) {\r\n  return async (dispatch) => {\r\n    dispatch(setSubmitting(true));\r\n    dispatch(resetPasswordBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}admin/reset-password`, data);\r\n      dispatch(resetPasswordSuccess(result));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Password Reset Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(resetPasswordFailure(error));\r\n      return false;\r\n    } finally {\r\n      dispatch(setSubmitting(false));\r\n    }\r\n  };\r\n}\r\n\r\nexport function performGetProfileDetails(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(getProfileDetailsBegin());\r\n    try {\r\n      const result = await GET({ url: ENDPOINTS.GET_PROFILE });\r\n\r\n      dispatch(getProfileDetailsSuccess(result.data));\r\n\r\n      return true;\r\n    } catch (error) {\r\n      dispatch(getProfileDetailsFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performDeleteAdmin(id) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postProfileDetailBegin());\r\n    try {\r\n      await axios.delete(`${BASE_URL}admin/${id}`);\r\n      dispatch(postProfileDetailSuccess());\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Admin Delete Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return true;\r\n    } catch (error) {\r\n      dispatch(postProfileDetailFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst mobileRegExp = /^([0|+[0-9]{1,5})?([7-9][0-9]{9})$/;\r\n\r\nexport const loginRules = yupResolver(\r\n  Yup.object({\r\n    email: Yup.string().email().required(),\r\n    password: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const signUpRules = yupResolver(\r\n  Yup.object({\r\n    email: Yup.string().email().required(),\r\n    password: Yup.string().required(),\r\n    firstName: Yup.string().required(),\r\n    lastName: Yup.string().required(),\r\n    mobileNumber: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const InviteAdminRules = yupResolver(\r\n  Yup.object({\r\n    name: Yup.string().required(),\r\n    password: Yup.string().required(),\r\n    confirmpassword: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const verifyLoginOTPRules = yupResolver(\r\n  Yup.object({\r\n    otp: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const verifyAdminSession = yupResolver(\r\n  Yup.object({\r\n    password: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const verifyAdminSessionOtp = yupResolver(\r\n  Yup.object({\r\n    passcode: Yup.number().typeError(\"Passcode is required.\").required(),\r\n  }).required()\r\n);\r\n\r\nexport const inviteRules = yupResolver(\r\n  Yup.object({\r\n    firstName: Yup.string().required(),\r\n    lastName: Yup.string().required(),\r\n    countryCode: Yup.string().required(),\r\n    mobile: Yup.string().test(\r\n      \"is-mobile\",\r\n      \"Mobile number is not valid\",\r\n      function (value) {\r\n        if (!value) return true;\r\n        return mobileRegExp.test(value);\r\n      }\r\n    ),\r\n    password: Yup.string().required(),\r\n    confirmPassword: Yup.string().test(\r\n      \"passwords-match\",\r\n      \"Passwords must match\",\r\n      function (value) {\r\n        return this.parent.password === value;\r\n      }\r\n    ),\r\n  })\r\n);\r\n\r\nexport const addMemberRules = yupResolver(\r\n  Yup.object({\r\n    email: Yup.string().email().required(),\r\n    role: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const createRoleRules = yupResolver(\r\n  Yup.object({\r\n    name: Yup.string().required(),\r\n    description: Yup.string().required(),\r\n    isSuperAdmin: Yup.boolean(),\r\n  }).required()\r\n);\r\n\r\nexport const resetPasswordRules = yupResolver(\r\n  Yup.object({\r\n    password: Yup.string().required(),\r\n    confirmPassword: Yup.string().test(\r\n      \"passwords-match\",\r\n      \"Passwords must match\",\r\n      function (value) {\r\n        return this.parent.password === value;\r\n      }\r\n    ),\r\n  })\r\n);\r\n\r\nexport const forgotPasswordRules = yupResolver(\r\n  Yup.object({\r\n    email: Yup.string().email().required(),\r\n  }).required()\r\n);\r\n\r\nexport const addCountryRules = yupResolver(\r\n  Yup.object({\r\n    name: Yup.string().required(),\r\n    isoCode: Yup.string().required(),\r\n    financialStartDate: Yup.string().required(),\r\n    financialQuarterOne: Yup.string().required(),\r\n    financialQuarterTwo: Yup.string().required(),\r\n    financialQuarterThree: Yup.string().required(),\r\n    financialQuarterFour: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const addBucketRules = yupResolver(\r\n  Yup.object({\r\n    name: Yup.string(),\r\n    dateFormat: Yup.string().required(),\r\n    distanceUnit: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const addStateRules = yupResolver(\r\n  Yup.object({\r\n    name: Yup.string().required(),\r\n    isoCode: Yup.string().required(),\r\n    countryCode: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const addCityRules = yupResolver(\r\n  Yup.object({\r\n    name: Yup.string().required(),\r\n    countryCode: Yup.string().required(),\r\n    stateCode: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const addTagRules = yupResolver(\r\n  Yup.object({\r\n    name: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const addPlanIOSRules = yupResolver(\r\n  Yup.object({\r\n    name: Yup.string().required(),\r\n    amount: Yup.number()\r\n      .typeError(\"Plan Price is required.\")\r\n      .required(\"Plan Price is required.\")\r\n      .test(\r\n        \"maxDigitsAfterDecimal\",\r\n        \"Plan Price field must have 2 digits after decimal or less.\",\r\n        (number) => /^\\d+(\\.\\d{1,2})?$/.test(number)\r\n      ),\r\n    total: Yup.number().required(),\r\n    description: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const addPlanAndroidRules = yupResolver(\r\n  Yup.object({\r\n    name: Yup.string().required(),\r\n    amount: Yup.number()\r\n      .typeError(\"Plan Price is required.\")\r\n      .required(\"Plan Price is required.\")\r\n      .test(\r\n        \"maxDigitsAfterDecimal\",\r\n        \"Plan Price field must have 2 digits after decimal or less.\",\r\n        (number) => /^\\d+(\\.\\d{1,2})?$/.test(number)\r\n      ),\r\n    total: Yup.number().required(),\r\n    description: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const addAvailCountryRules = yupResolver(\r\n  Yup.object({\r\n    name: Yup.string().required(),\r\n    isoCode: Yup.string().required(),\r\n    phonecode: Yup.string().required(),\r\n    currency: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const createNotificationRules = yupResolver(\r\n  Yup.object({\r\n    title: Yup.string().required(),\r\n    content: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const trailRules = yupResolver(\r\n  Yup.object({\r\n    value: Yup.number().required(),\r\n  }).required()\r\n);\r\n"],"sourceRoot":""}