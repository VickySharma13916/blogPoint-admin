{"version":3,"sources":["containers/Auth/ResetPassword/index.js","components/IconButton/index.js","components/Form/Input.js","services/utils.js","services/requests.js","redux/actionCreators/authCreators.js","services/validations.js"],"names":["connect","state","submitting","auth","isAuthenticated","dispatch","resetPassword","payload","performResetPassword","forgotPasswordVerify","performForgotPasswordEmailVerificationAdmin","history","useHistory","location","useLocation","email","pathname","split","token","useForm","resolver","resetPasswordRules","defaultValues","password","confirmPassword","register","handleSubmit","errors","formState","verifyForgotPassword","useCallback","data","useEffect","onSubmit","newData","status","push","id","className","border","style","maxWidth","Header","Body","xs","type","name","label","error","message","variant","size","disabled","animation","Icon","icon","extraProps","props","IconButton","onClick","isLoading","children","defaultProps","Input","React","forwardRef","ref","onChange","onBlur","isClearable","hint","rest","useState","uuidv4","reset","setReset","inputType","setInputType","placeholder","step","temp","defaultValue","value","restProps","htmlFor","target","fontSize","color","options","extractErrorMessage","_","isString","console","log","errorHandler","store","showSnack","getToken","a","getState","access","refresh","decodedToken","jwt_decode","date","Date","setUTCSeconds","exp","valueOf","axios","post","BASE_URL","ENDPOINTS","REFRESH_TOKEN","refreshToken","result","refreshTokenSuccess","accessToken","response","makeRequest","Promise","resolve","reject","defaultOptions","baseURL","headers","reason","timeout","client","create","interceptors","request","use","config","Authorization","then","catch","GET","url","params","method","POST","performGetAdminList","resetSnack","getAdminDetailsBegin","get","getAdminDetailsSuccess","docs","msg","getAdminDetailsFailure","performLogin","loginBegin","loginSuccess","user","role","loginFailure","performAdminImagePost","postProfileDetailBegin","postProfileDetailSuccess","postProfileDetailFailure","performSignUp","performForgotPassword","setSubmitting","performEmailVerificationAdmin","postVerifyEmailBegin","VERIFY_EMAIL","postVerifyEmailSuccess","postVerifyEmailFailure","passwordVerifyEmailBegin","passwordVerifyEmailSuccess","passwordVerifyEmailFailure","resetPasswordBegin","resetPasswordSuccess","resetPasswordFailure","performDeleteAdmin","delete","mobileRegExp","loginRules","yupResolver","Yup","required","signUpRules","firstName","lastName","mobileNumber","InviteAdminRules","confirmpassword","otp","passcode","typeError","countryCode","mobile","test","this","parent","description","isSuperAdmin","forgotPasswordRules","isoCode","financialStartDate","financialQuarterOne","financialQuarterTwo","financialQuarterThree","financialQuarterFour","dateFormat","distanceUnit","stateCode","amount","number","total","phonecode","currency","title","content"],"mappings":"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","file":"static/js/155.65151c3b.chunk.js","sourcesContent":["import React, { useCallback, useEffect } from \"react\";\r\nimport { Button, Card, Col, Form, Row, Spinner } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport Input from \"../../../components/Form/Input\";\r\nimport {\r\n  performForgotPasswordEmailVerificationAdmin,\r\n  performResetPassword,\r\n} from \"../../../redux/actionCreators/authCreators\";\r\nimport { resetPasswordRules } from \"../../../services/validations\";\r\n\r\nconst ResetPassword = ({ submitting, resetPassword, forgotPasswordVerify }) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const email = location.pathname.split(\"/\")[2];\r\n  const token = location.pathname.split(\"token=\")[1];\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: resetPasswordRules,\r\n    defaultValues: {\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n  });\r\n\r\n  const verifyForgotPassword = useCallback(\r\n    async (data) => {\r\n      await forgotPasswordVerify(data);\r\n    },\r\n    [forgotPasswordVerify]\r\n  );\r\n  useEffect(() => {\r\n    const newData = {\r\n      email,\r\n      token,\r\n    };\r\n    verifyForgotPassword(newData);\r\n  }, [verifyForgotPassword, email, token]);\r\n\r\n  const onSubmit = async (data) => {\r\n    const newData = {\r\n      email,\r\n      password: data?.password,\r\n    };\r\n    const result = await resetPassword(newData);\r\n    if (result.status === 200) {\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"page--reset-password\" className=\"h-100\">\r\n      <div className=\"w-100 h-100 page--wrapper\">\r\n        <div className=\"d-flex flex-column align-items-start justify-content-center py-5 px-4 reset-password_form\">\r\n          <Card\r\n            border=\"light\"\r\n            className=\"w-100 mx-auto px-4 pt-3 pb-4 my-5\"\r\n            style={{ maxWidth: 500 }}\r\n          >\r\n            <Card.Header>Reset Password</Card.Header>\r\n            <Card.Body>\r\n              {/* <Form> */}\r\n              <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <Row>\r\n                  <Col xs={12}>\r\n                    <Input\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      {...register(\"password\")}\r\n                      error={errors.password?.message}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col xs={12}>\r\n                    <Input\r\n                      id=\"confirmPassword\"\r\n                      type=\"password\"\r\n                      name=\"confirmPassword\"\r\n                      label=\"Confirm Password\"\r\n                      {...register(\"confirmPassword\")}\r\n                      error={errors.confirmPassword?.message}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col xs={12} className=\"pt-4 position-relative\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"primary\"\r\n                      size=\"lg\"\r\n                      className={`w-100`}\r\n                      disabled={submitting}\r\n                    >\r\n                      {!submitting && <span>Submit</span>}\r\n                      {submitting && <Spinner animation=\"border\" />}\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  submitting: state.auth.submitting,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  resetPassword: (payload) => dispatch(performResetPassword(payload)),\r\n  forgotPasswordVerify: (payload) =>\r\n    dispatch(performForgotPasswordEmailVerificationAdmin(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPassword);\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Icon = (icon, size = \"\") => {\r\n  const extraProps = {\r\n    size: 22\r\n  };\r\n  if (size === 'lg') {\r\n    extraProps.size = 32;\r\n  } else if (size === 'sm') {\r\n    extraProps.size = 18;\r\n  }\r\n  return <icon.type {...icon.props} {...extraProps} />\r\n}\r\n\r\nconst IconButton = ({ variant, className, onClick, size, isLoading, disabled, children, icon }) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      className={`btn-icon ${size ? `btn-icon-${size}` : ''} ${isLoading ? `btn-icon-loading` : ''} ${className}`}\r\n      onClick={onClick}\r\n      size={size}\r\n      disabled={isLoading || disabled}\r\n    >\r\n      <span>{Icon(icon, size)}{children && <span>{children}</span>}</span>\r\n    </Button>\r\n  )\r\n}\r\n\r\nIconButton.propTypes = {\r\n  children: PropTypes.node,\r\n  variant: PropTypes.string,\r\n  className: PropTypes.string,\r\n  size: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  isLoading: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  icon: PropTypes.any,\r\n};\r\n\r\nIconButton.defaultProps = {\r\n  variant: \"default\",\r\n  className: \"\",\r\n  size: \"\",\r\n  onClick: () => null,\r\n  isLoading: false,\r\n  disabled: false,\r\n  icon: null\r\n}\r\n\r\nexport default IconButton;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { MdCancel } from \"react-icons/md\";\r\nimport { AiOutlineEyeInvisible, AiOutlineEye } from \"react-icons/ai\";\r\n\r\nimport IconButton from \"../IconButton\";\r\n\r\nconst Input = React.forwardRef(\r\n  (\r\n    {\r\n      className,\r\n      onChange,\r\n      onBlur,\r\n      label,\r\n      id,\r\n      error,\r\n      isClearable,\r\n      hint,\r\n      type,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const [reset, setReset] = useState(uuidv4());\r\n    const [inputType, setInputType] = useState(type);\r\n\r\n    const onClear = () => {\r\n      onChange({ target: { value: \"\" } });\r\n      setReset(uuidv4());\r\n    };\r\n\r\n    const restProps = () => {\r\n      const temp = { ...rest };\r\n      temp.defaultValue = temp.value || \"\";\r\n      delete temp.value;\r\n      return temp;\r\n    };\r\n\r\n    return (\r\n      <span\r\n        className={`d-inline-block w-100 position-relative pt-2 pb-4 input__wrapper ${\r\n          error ? \"error\" : \"\"\r\n        }`}\r\n        ref={ref}\r\n      >\r\n        <input\r\n          key={`input-${reset}`}\r\n          id={`input-${id}`}\r\n          type={inputType}\r\n          className={`${className}${isClearable ? \" input-clearable\" : \"\"}`}\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          placeholder={label}\r\n          step=\"any\"\r\n          {...restProps()}\r\n        />\r\n        <label htmlFor={`input-${id}`}>{label}</label>\r\n        <span className=\"input-error\">{error}</span>\r\n        {isClearable && (\r\n          <MdCancel className=\"input-clear-btn\" size={18} onClick={onClear} />\r\n        )}\r\n        {type === \"password\" && (\r\n          <IconButton\r\n            icon={\r\n              inputType === \"password\" ? (\r\n                <AiOutlineEyeInvisible />\r\n              ) : (\r\n                <AiOutlineEye />\r\n              )\r\n            }\r\n            variant=\"outline-link\"\r\n            onClick={() =>\r\n              setInputType(inputType === \"password\" ? \"text\" : \"password\")\r\n            }\r\n            className=\"p-0 m-0 position-absolute btn--show-password\"\r\n          />\r\n        )}\r\n        {hint !== \"\" && (\r\n          <span style={{ fontSize: \"12px\", color: \"#c1b1b1\" }}>{hint}</span>\r\n        )}\r\n      </span>\r\n    );\r\n  }\r\n);\r\n\r\nInput.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  label: PropTypes.string,\r\n  id: PropTypes.string,\r\n  error: PropTypes.string,\r\n  isClearable: PropTypes.bool,\r\n  type: PropTypes.string,\r\n  hint: PropTypes.string,\r\n};\r\n\r\nInput.defaultProps = {\r\n  className: \"\",\r\n  onChange: () => null,\r\n  onBlur: () => null,\r\n  label: \"\",\r\n  id: uuidv4(),\r\n  error: \"\",\r\n  isClearable: false,\r\n  type: \"text\",\r\n  hint: \"\",\r\n};\r\n\r\nexport default Input;\r\n","import axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport _ from \"lodash-es\";\r\nimport { showSnack } from \"../redux/actions/alertActions\";\r\nimport { refreshTokenSuccess } from \"../redux/actions/authActions\";\r\nimport { store } from \"../redux/store\";\r\nimport { BASE_URL, ENDPOINTS } from \"./constants\";\r\n\r\nconst options = {\r\n  variant: \"error\",\r\n};\r\n\r\nconst extractErrorMessage = (data) => {\r\n  if (_.isString(data)) {\r\n    return data;\r\n  }\r\n\r\n  if (!data.error) {\r\n    return \"Something went wrong\";\r\n  }\r\n\r\n  if (!_.isString(data.error)) {\r\n    console.log(data.error);\r\n  }\r\n\r\n  return data.error;\r\n};\r\n\r\nexport const errorHandler = ({ status, data }) => {\r\n  switch (status) {\r\n    case 401:\r\n      store.dispatch(\r\n        showSnack({ message: extractErrorMessage(data), options })\r\n      );\r\n      // store.dispatch(logout());\r\n      break;\r\n    case 400:\r\n      store.dispatch(\r\n        showSnack({ message: extractErrorMessage(data), options })\r\n      );\r\n      break;\r\n    case 403:\r\n      store.dispatch(\r\n        showSnack({ message: extractErrorMessage(data), options })\r\n      );\r\n      break;\r\n    case 422:\r\n      store.dispatch(\r\n        showSnack({ message: extractErrorMessage(data), options })\r\n      );\r\n      break;\r\n    case 404:\r\n      store.dispatch(showSnack({ message: \"Resource not found\", options }));\r\n      break;\r\n    default:\r\n      store.dispatch(showSnack({ message: \"Something went wrong\", options }));\r\n      break;\r\n  }\r\n};\r\n\r\nexport const getToken = async () => {\r\n  const state = store.getState();\r\n  const {\r\n    auth: { token },\r\n  } = state;\r\n\r\n  if (!token || !token.access.token || !token.refresh.token) {\r\n    return null;\r\n  }\r\n\r\n  const decodedToken = jwt_decode(token.access.token);\r\n  const date = new Date(0);\r\n  date.setUTCSeconds(decodedToken.exp);\r\n  if (date.valueOf() < new Date().valueOf()) {\r\n    try {\r\n      const result = await axios.post(\r\n        `${BASE_URL}/${ENDPOINTS.REFRESH_TOKEN}`,\r\n        { refreshToken: token.refresh.token }\r\n      );\r\n      store.dispatch(refreshTokenSuccess({ token: result.data.data }));\r\n      return result.data.data.accessToken;\r\n    } catch (err) {\r\n      errorHandler(err.response);\r\n    }\r\n  }\r\n  return token.access.token;\r\n};\r\n\r\nexport const uniqueValues = (arr, keyProps) => {\r\n  const kvArray = arr.map((entry) => {\r\n    const key = keyProps.map((k) => entry.headers[k]).join(\"|\");\r\n    return [key, entry];\r\n  });\r\n  const map = new Map(kvArray);\r\n  return Array.from(map.values());\r\n};\r\n","import axios from \"axios\";\r\nimport { BASE_URL, ENDPOINTS } from \"./constants\";\r\nimport { getToken, errorHandler } from \"./utils\";\r\n\r\nconst makeRequest = async (options) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const defaultOptions = {\r\n        baseURL: BASE_URL,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          reason: options.data?.reason || null,\r\n        },\r\n        timeout: 60000,\r\n      };\r\n\r\n      delete options.data?.reason;\r\n      const client = axios.create(defaultOptions);\r\n      const token = await getToken();\r\n      if (token) {\r\n        client.interceptors.request.use(function (config) {\r\n          config.headers.Authorization = `Bearer ${token}`;\r\n          return config;\r\n        });\r\n      }\r\n\r\n      return client(options)\r\n        .then((response) => {\r\n          return resolve(response.data);\r\n        })\r\n        .catch((error) => {\r\n          errorHandler(error.response ? error.response : { status: 500 });\r\n          return reject(\r\n            error.response && error.response.data.error\r\n              ? error.response.data.error\r\n              : \"Something went wrong\"\r\n          );\r\n        });\r\n    } catch (err) {\r\n      errorHandler({ status: 500 });\r\n      reject(err.message);\r\n    }\r\n  });\r\n};\r\n\r\nexport const GET = ({ url, params = {}, data = {} }) =>\r\n  makeRequest({ url, method: \"get\", params, data });\r\n\r\nexport const POST = ({ url, params = {}, data = {} }) =>\r\n  makeRequest({ url, method: \"post\", params, data });\r\n\r\nexport const PUT = ({ url, params = {}, data = {} }) =>\r\n  makeRequest({ url, method: \"put\", params, data });\r\n\r\nexport const PATCH = ({ url, params = {}, data = {} }) =>\r\n  makeRequest({ url, method: \"patch\", params, data });\r\n\r\nexport const DELETE = ({ url, params = {}, data = {} }) =>\r\n  makeRequest({ url, method: \"delete\", params, data });\r\n\r\nexport default ENDPOINTS;\r\n","import { resetSnack, showSnack } from \"../actions/alertActions\";\r\nimport {\r\n  getAdminDetailsBegin,\r\n  getAdminDetailsFailure,\r\n  getAdminDetailsSuccess,\r\n  getProfileDetailsBegin,\r\n  getProfileDetailsFailure,\r\n  getProfileDetailsSuccess,\r\n  loginBegin,\r\n  loginFailure,\r\n  loginSuccess,\r\n  passwordVerifyEmailBegin,\r\n  passwordVerifyEmailFailure,\r\n  passwordVerifyEmailSuccess,\r\n  postProfileDetailBegin,\r\n  postProfileDetailFailure,\r\n  postProfileDetailSuccess,\r\n  postVerifyEmailBegin,\r\n  postVerifyEmailFailure,\r\n  postVerifyEmailSuccess,\r\n  resetPasswordBegin,\r\n  resetPasswordFailure,\r\n  resetPasswordSuccess,\r\n  setSubmitting,\r\n} from \"../actions/authActions\";\r\n\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../services/constants\";\r\nimport ENDPOINTS, { GET, POST } from \"../../services/requests\";\r\n\r\nexport function performGetAdminList() {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(getAdminDetailsBegin());\r\n    try {\r\n      const result = await axios.get(`${BASE_URL}admin`);\r\n      dispatch(getAdminDetailsSuccess(result?.data?.docs?.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: result?.data?.msg,\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(getAdminDetailsFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performLogin(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(loginBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}admin/login`, data);\r\n      if (result.status === 200) {\r\n        dispatch(\r\n          loginSuccess({\r\n            token: result.data.token,\r\n            user: result.data.user,\r\n            role: null,\r\n          })\r\n        );\r\n        dispatch(\r\n          showSnack({\r\n            message: \"Logged in successfully!\",\r\n            options: {\r\n              variant: \"success\",\r\n            },\r\n          })\r\n        );\r\n      } else {\r\n        // Handle error messages from the backend\r\n        dispatch(\r\n          showSnack({\r\n            message: result.data.error || \"Something went wrong!\",\r\n            options: {\r\n              variant: \"error\",\r\n            },\r\n          })\r\n        );\r\n      }\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Something went wrong!\",\r\n          options: {\r\n            variant: \"error\",\r\n          },\r\n        })\r\n      );\r\n      dispatch(loginFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performAdminImagePost(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postProfileDetailBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}admin/uploads`, data);\r\n      dispatch(postProfileDetailSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Admin Image Add Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postProfileDetailFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performSignUp(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postProfileDetailBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}admin/signup`, data);\r\n      dispatch(postProfileDetailSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Sign Up Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postProfileDetailFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performForgotPassword(data) {\r\n  return async (dispatch) => {\r\n    dispatch(setSubmitting(true));\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}admin/forgot-password`, data);\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Verification Link Send to the Email.\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result.data;\r\n    } catch (error) {\r\n      return false;\r\n    } finally {\r\n      dispatch(setSubmitting(false));\r\n    }\r\n  };\r\n}\r\n\r\nexport function performEmailVerificationAdmin(data) {\r\n  return async (dispatch) => {\r\n    dispatch(setSubmitting(true));\r\n    dispatch(postVerifyEmailBegin());\r\n    try {\r\n      const result = await POST({ url: ENDPOINTS.VERIFY_EMAIL, data });\r\n      if (!result) {\r\n        dispatch(\r\n          showSnack({\r\n            message: result.message,\r\n            options: {\r\n              variant: \"success\",\r\n            },\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(postVerifyEmailSuccess(result.data));\r\n        dispatch(\r\n          showSnack({\r\n            message: result.message,\r\n            options: {\r\n              variant: \"success\",\r\n            },\r\n          })\r\n        );\r\n      }\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postVerifyEmailFailure(error));\r\n    } finally {\r\n      dispatch(setSubmitting(false));\r\n    }\r\n  };\r\n}\r\n\r\nexport function performForgotPasswordEmailVerificationAdmin(data) {\r\n  return async (dispatch) => {\r\n    dispatch(passwordVerifyEmailBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}admin/verify-token`, data);\r\n      if (!result) {\r\n        dispatch(\r\n          showSnack({\r\n            message: \"Invalid Token\",\r\n            options: {\r\n              variant: \"error\",\r\n            },\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(passwordVerifyEmailSuccess());\r\n        dispatch(\r\n          showSnack({\r\n            message: \"Email Token Verified\",\r\n            options: {\r\n              variant: \"success\",\r\n            },\r\n          })\r\n        );\r\n      }\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(passwordVerifyEmailFailure(error));\r\n    }\r\n  };\r\n}\r\n\r\nexport function performResetPassword(data) {\r\n  return async (dispatch) => {\r\n    dispatch(setSubmitting(true));\r\n    dispatch(resetPasswordBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}admin/reset-password`, data);\r\n      dispatch(resetPasswordSuccess(result));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Password Reset Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(resetPasswordFailure(error));\r\n      return false;\r\n    } finally {\r\n      dispatch(setSubmitting(false));\r\n    }\r\n  };\r\n}\r\n\r\nexport function performGetProfileDetails(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(getProfileDetailsBegin());\r\n    try {\r\n      const result = await GET({ url: ENDPOINTS.GET_PROFILE });\r\n\r\n      dispatch(getProfileDetailsSuccess(result.data));\r\n\r\n      return true;\r\n    } catch (error) {\r\n      dispatch(getProfileDetailsFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performDeleteAdmin(id) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postProfileDetailBegin());\r\n    try {\r\n      await axios.delete(`${BASE_URL}admin/${id}`);\r\n      dispatch(postProfileDetailSuccess());\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Admin Delete Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return true;\r\n    } catch (error) {\r\n      dispatch(postProfileDetailFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst mobileRegExp = /^([0|+[0-9]{1,5})?([7-9][0-9]{9})$/;\r\n\r\nexport const loginRules = yupResolver(\r\n  Yup.object({\r\n    email: Yup.string().email().required(),\r\n    password: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const signUpRules = yupResolver(\r\n  Yup.object({\r\n    email: Yup.string().email().required(),\r\n    password: Yup.string().required(),\r\n    firstName: Yup.string().required(),\r\n    lastName: Yup.string().required(),\r\n    mobileNumber: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const InviteAdminRules = yupResolver(\r\n  Yup.object({\r\n    name: Yup.string().required(),\r\n    password: Yup.string().required(),\r\n    confirmpassword: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const verifyLoginOTPRules = yupResolver(\r\n  Yup.object({\r\n    otp: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const verifyAdminSession = yupResolver(\r\n  Yup.object({\r\n    password: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const verifyAdminSessionOtp = yupResolver(\r\n  Yup.object({\r\n    passcode: Yup.number().typeError(\"Passcode is required.\").required(),\r\n  }).required()\r\n);\r\n\r\nexport const inviteRules = yupResolver(\r\n  Yup.object({\r\n    firstName: Yup.string().required(),\r\n    lastName: Yup.string().required(),\r\n    countryCode: Yup.string().required(),\r\n    mobile: Yup.string().test(\r\n      \"is-mobile\",\r\n      \"Mobile number is not valid\",\r\n      function (value) {\r\n        if (!value) return true;\r\n        return mobileRegExp.test(value);\r\n      }\r\n    ),\r\n    password: Yup.string().required(),\r\n    confirmPassword: Yup.string().test(\r\n      \"passwords-match\",\r\n      \"Passwords must match\",\r\n      function (value) {\r\n        return this.parent.password === value;\r\n      }\r\n    ),\r\n  })\r\n);\r\n\r\nexport const addMemberRules = yupResolver(\r\n  Yup.object({\r\n    email: Yup.string().email().required(),\r\n    role: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const createRoleRules = yupResolver(\r\n  Yup.object({\r\n    name: Yup.string().required(),\r\n    description: Yup.string().required(),\r\n    isSuperAdmin: Yup.boolean(),\r\n  }).required()\r\n);\r\n\r\nexport const resetPasswordRules = yupResolver(\r\n  Yup.object({\r\n    password: Yup.string().required(),\r\n    confirmPassword: Yup.string().test(\r\n      \"passwords-match\",\r\n      \"Passwords must match\",\r\n      function (value) {\r\n        return this.parent.password === value;\r\n      }\r\n    ),\r\n  })\r\n);\r\n\r\nexport const forgotPasswordRules = yupResolver(\r\n  Yup.object({\r\n    email: Yup.string().email().required(),\r\n  }).required()\r\n);\r\n\r\nexport const addCountryRules = yupResolver(\r\n  Yup.object({\r\n    name: Yup.string().required(),\r\n    isoCode: Yup.string().required(),\r\n    financialStartDate: Yup.string().required(),\r\n    financialQuarterOne: Yup.string().required(),\r\n    financialQuarterTwo: Yup.string().required(),\r\n    financialQuarterThree: Yup.string().required(),\r\n    financialQuarterFour: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const addBucketRules = yupResolver(\r\n  Yup.object({\r\n    name: Yup.string(),\r\n    dateFormat: Yup.string().required(),\r\n    distanceUnit: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const addStateRules = yupResolver(\r\n  Yup.object({\r\n    name: Yup.string().required(),\r\n    isoCode: Yup.string().required(),\r\n    countryCode: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const addCityRules = yupResolver(\r\n  Yup.object({\r\n    name: Yup.string().required(),\r\n    countryCode: Yup.string().required(),\r\n    stateCode: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const addTagRules = yupResolver(\r\n  Yup.object({\r\n    name: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const addPlanIOSRules = yupResolver(\r\n  Yup.object({\r\n    name: Yup.string().required(),\r\n    amount: Yup.number()\r\n      .typeError(\"Plan Price is required.\")\r\n      .required(\"Plan Price is required.\")\r\n      .test(\r\n        \"maxDigitsAfterDecimal\",\r\n        \"Plan Price field must have 2 digits after decimal or less.\",\r\n        (number) => /^\\d+(\\.\\d{1,2})?$/.test(number)\r\n      ),\r\n    total: Yup.number().required(),\r\n    description: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const addPlanAndroidRules = yupResolver(\r\n  Yup.object({\r\n    name: Yup.string().required(),\r\n    amount: Yup.number()\r\n      .typeError(\"Plan Price is required.\")\r\n      .required(\"Plan Price is required.\")\r\n      .test(\r\n        \"maxDigitsAfterDecimal\",\r\n        \"Plan Price field must have 2 digits after decimal or less.\",\r\n        (number) => /^\\d+(\\.\\d{1,2})?$/.test(number)\r\n      ),\r\n    total: Yup.number().required(),\r\n    description: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const addAvailCountryRules = yupResolver(\r\n  Yup.object({\r\n    name: Yup.string().required(),\r\n    isoCode: Yup.string().required(),\r\n    phonecode: Yup.string().required(),\r\n    currency: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const createNotificationRules = yupResolver(\r\n  Yup.object({\r\n    title: Yup.string().required(),\r\n    content: Yup.string().required(),\r\n  }).required()\r\n);\r\n\r\nexport const trailRules = yupResolver(\r\n  Yup.object({\r\n    value: Yup.number().required(),\r\n  }).required()\r\n);\r\n"],"sourceRoot":""}