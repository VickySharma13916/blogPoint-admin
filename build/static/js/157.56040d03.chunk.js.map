{"version":3,"sources":["components/IconButton/index.js","components/Form/Input.js","../node_modules/react-bootstrap/esm/Spinner.js","redux/actions/accountActions.js","redux/actionCreators/accountCreators.js","partials/Account/ChangePassword.js"],"names":["Icon","icon","size","extraProps","type","props","IconButton","variant","className","onClick","isLoading","disabled","children","defaultProps","Input","React","forwardRef","ref","onChange","onBlur","label","id","error","isClearable","hint","rest","useState","uuidv4","reset","setReset","inputType","setInputType","placeholder","step","temp","defaultValue","value","restProps","htmlFor","target","style","fontSize","color","Spinner","bsPrefix","animation","as","Component","useBootstrapPrefix","bsSpinnerPrefix","_jsx","classNames","displayName","resetState","ACCOUNT_TYPES","RESET_STATE","updateProfileBegin","UPDATE_PROFILE_BEGIN","updateProfileSuccess","UPDATE_PROFILE_SUCCESS","updateProfileFailure","UPDATE_PROFILE_FAILURE","payload","updatePasswordBegin","UPDATE_PASSWORD_BEGIN","updatePasswordSuccess","data","UPDATE_PASSWORD_SUCCESS","updatePasswordFailure","UPDATE_PASSWORD_FAILURE","performUpdateProfile","dispatch","resetSnack","axios","put","BASE_URL","result","updateUserData","user","showSnack","message","options","performUpdateAdminProfile","postAdminProfileDetailsBegin","postAdminProfileDetailsSuccess","postAdminProfileDetailsFailure","performUpdatePassword","schema","yup","currentPassword","required","newPassword","min","confirmPassword","oneOf","connect","state","submitting","account","auth","handleUpdate","history","useHistory","useForm","resolver","yupResolver","defaultValues","register","handleSubmit","errors","formState","onSubmit","newData","email","push","useEffect","title","border","maxWidth","Header","to","Body","xs","name"],"mappings":"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","file":"static/js/157.56040d03.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Icon = (icon, size = \"\") => {\r\n  const extraProps = {\r\n    size: 22\r\n  };\r\n  if (size === 'lg') {\r\n    extraProps.size = 32;\r\n  } else if (size === 'sm') {\r\n    extraProps.size = 18;\r\n  }\r\n  return <icon.type {...icon.props} {...extraProps} />\r\n}\r\n\r\nconst IconButton = ({ variant, className, onClick, size, isLoading, disabled, children, icon }) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      className={`btn-icon ${size ? `btn-icon-${size}` : ''} ${isLoading ? `btn-icon-loading` : ''} ${className}`}\r\n      onClick={onClick}\r\n      size={size}\r\n      disabled={isLoading || disabled}\r\n    >\r\n      <span>{Icon(icon, size)}{children && <span>{children}</span>}</span>\r\n    </Button>\r\n  )\r\n}\r\n\r\nIconButton.propTypes = {\r\n  children: PropTypes.node,\r\n  variant: PropTypes.string,\r\n  className: PropTypes.string,\r\n  size: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  isLoading: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  icon: PropTypes.any,\r\n};\r\n\r\nIconButton.defaultProps = {\r\n  variant: \"default\",\r\n  className: \"\",\r\n  size: \"\",\r\n  onClick: () => null,\r\n  isLoading: false,\r\n  disabled: false,\r\n  icon: null\r\n}\r\n\r\nexport default IconButton;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { MdCancel } from \"react-icons/md\";\r\nimport { AiOutlineEyeInvisible, AiOutlineEye } from \"react-icons/ai\";\r\n\r\nimport IconButton from \"../IconButton\";\r\n\r\nconst Input = React.forwardRef(\r\n  (\r\n    {\r\n      className,\r\n      onChange,\r\n      onBlur,\r\n      label,\r\n      id,\r\n      error,\r\n      isClearable,\r\n      hint,\r\n      type,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const [reset, setReset] = useState(uuidv4());\r\n    const [inputType, setInputType] = useState(type);\r\n\r\n    const onClear = () => {\r\n      onChange({ target: { value: \"\" } });\r\n      setReset(uuidv4());\r\n    };\r\n\r\n    const restProps = () => {\r\n      const temp = { ...rest };\r\n      temp.defaultValue = temp.value || \"\";\r\n      delete temp.value;\r\n      return temp;\r\n    };\r\n\r\n    return (\r\n      <span\r\n        className={`d-inline-block w-100 position-relative pt-2 pb-4 input__wrapper ${\r\n          error ? \"error\" : \"\"\r\n        }`}\r\n        ref={ref}\r\n      >\r\n        <input\r\n          key={`input-${reset}`}\r\n          id={`input-${id}`}\r\n          type={inputType}\r\n          className={`${className}${isClearable ? \" input-clearable\" : \"\"}`}\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          placeholder={label}\r\n          step=\"any\"\r\n          {...restProps()}\r\n        />\r\n        <label htmlFor={`input-${id}`}>{label}</label>\r\n        <span className=\"input-error\">{error}</span>\r\n        {isClearable && (\r\n          <MdCancel className=\"input-clear-btn\" size={18} onClick={onClear} />\r\n        )}\r\n        {type === \"password\" && (\r\n          <IconButton\r\n            icon={\r\n              inputType === \"password\" ? (\r\n                <AiOutlineEyeInvisible />\r\n              ) : (\r\n                <AiOutlineEye />\r\n              )\r\n            }\r\n            variant=\"outline-link\"\r\n            onClick={() =>\r\n              setInputType(inputType === \"password\" ? \"text\" : \"password\")\r\n            }\r\n            className=\"p-0 m-0 position-absolute btn--show-password\"\r\n          />\r\n        )}\r\n        {hint !== \"\" && (\r\n          <span style={{ fontSize: \"12px\", color: \"#c1b1b1\" }}>{hint}</span>\r\n        )}\r\n      </span>\r\n    );\r\n  }\r\n);\r\n\r\nInput.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  label: PropTypes.string,\r\n  id: PropTypes.string,\r\n  error: PropTypes.string,\r\n  isClearable: PropTypes.bool,\r\n  type: PropTypes.string,\r\n  hint: PropTypes.string,\r\n};\r\n\r\nInput.defaultProps = {\r\n  className: \"\",\r\n  onChange: () => null,\r\n  onBlur: () => null,\r\n  label: \"\",\r\n  id: uuidv4(),\r\n  error: \"\",\r\n  isClearable: false,\r\n  type: \"text\",\r\n  hint: \"\",\r\n};\r\n\r\nexport default Input;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation,\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import ACCOUNT_TYPES from \"../types/accountTypes\";\r\n\r\nexport const resetState = () => ({\r\n  type: ACCOUNT_TYPES.RESET_STATE,\r\n});\r\n\r\nexport const updateProfileBegin = () => ({\r\n  type: ACCOUNT_TYPES.UPDATE_PROFILE_BEGIN,\r\n});\r\n\r\nexport const updateProfileSuccess = () => ({\r\n  type: ACCOUNT_TYPES.UPDATE_PROFILE_SUCCESS,\r\n});\r\n\r\nexport const updateProfileFailure = (error) => ({\r\n  type: ACCOUNT_TYPES.UPDATE_PROFILE_FAILURE,\r\n  payload: { error },\r\n});\r\n\r\nexport const updatePasswordBegin = () => ({\r\n  type: ACCOUNT_TYPES.UPDATE_PASSWORD_BEGIN,\r\n});\r\n\r\nexport const updatePasswordSuccess = (data) => ({\r\n  type: ACCOUNT_TYPES.UPDATE_PASSWORD_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const updatePasswordFailure = (error) => ({\r\n  type: ACCOUNT_TYPES.UPDATE_PASSWORD_FAILURE,\r\n  payload: { error },\r\n});\r\n","import {\r\n  updatePasswordBegin,\r\n  updatePasswordFailure,\r\n  updatePasswordSuccess,\r\n  updateProfileBegin,\r\n  updateProfileFailure,\r\n  updateProfileSuccess,\r\n} from \"../actions/accountActions\";\r\nimport { resetSnack, showSnack } from \"../actions/alertActions\";\r\nimport {\r\n  postAdminProfileDetailsBegin,\r\n  postAdminProfileDetailsFailure,\r\n  postAdminProfileDetailsSuccess,\r\n  updateUserData,\r\n} from \"../actions/authActions\";\r\n\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../services/constants\";\r\n\r\nexport function performUpdateProfile(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(updateProfileBegin());\r\n    try {\r\n      const id = data?.id;\r\n      const result = await axios.put(`${BASE_URL}admin/${id}`, data);\r\n      dispatch(updateUserData(result.data.user));\r\n      dispatch(updateProfileSuccess());\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Admin Data Update Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return true;\r\n    } catch (error) {\r\n      dispatch(updateProfileFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\nexport function performUpdateAdminProfile(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postAdminProfileDetailsBegin());\r\n    try {\r\n      const id = data?.id;\r\n      await axios.put(`${BASE_URL}admin/${id}`, data);\r\n      dispatch(postAdminProfileDetailsSuccess());\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Admin Data Update Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return true;\r\n    } catch (error) {\r\n      dispatch(postAdminProfileDetailsFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performUpdatePassword(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(updatePasswordBegin());\r\n    try {\r\n      const result = await axios.put(`${BASE_URL}admin/change-password`, data);\r\n      dispatch(updatePasswordSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Password Update Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n\r\n      return true;\r\n    } catch (error) {\r\n      dispatch(updatePasswordFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { resetState } from \"../../redux/actions/accountActions\";\r\nimport { performUpdatePassword } from \"../../redux/actionCreators/accountCreators\";\r\n\r\nimport { BiArrowBack } from \"react-icons/bi\";\r\nimport { Card, Row, Col, Button, Form, Spinner } from \"react-bootstrap\";\r\n\r\nimport Input from \"../../components/Form/Input\";\r\nimport Page from \"../../components/Page\";\r\n\r\nconst schema = yup\r\n  .object({\r\n    currentPassword: yup.string().required(\"Current password is required\"),\r\n    newPassword: yup\r\n      .string()\r\n      .required(\"New password is required\")\r\n      .min(6, \"Password must be at least 6 characters\"),\r\n    confirmPassword: yup\r\n      .string()\r\n      .required(\"Confirm Password is required\")\r\n      .oneOf([yup.ref(\"newPassword\"), null], \"Passwords must match\"),\r\n  })\r\n  .required();\r\n\r\nconst ChangePassword = ({ submitting, error, reset, user, handleUpdate }) => {\r\n  const history = useHistory();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n    defaultValues: {\r\n      currentPassword: \"\",\r\n      newPassword: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    const newData = {\r\n      ...data,\r\n      email: user?.email,\r\n    };\r\n    const result = await handleUpdate(newData);\r\n    if (!result) return false;\r\n    history.push(\"/account\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    reset();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Page id=\"page--account\" title=\"Account\" className=\"h-100\">\r\n      <Card\r\n        border=\"light\"\r\n        className=\"w-100 mx-auto px-4 pt-3 pb-4 my-5 position-relative profile__edit\"\r\n        style={{ maxWidth: 500 }}\r\n      >\r\n        <Card.Header className=\"d-flex align-items-center\">\r\n          <Link to=\"/account\" className=\"btn btn-link px-0 me-3\" title=\"Back\">\r\n            <BiArrowBack size={24} />\r\n          </Link>\r\n          Change Password\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Row>\r\n              <Col xs={12}>\r\n                <Input\r\n                  type=\"password\"\r\n                  id=\"currentPassword\"\r\n                  name=\"currentPassword\"\r\n                  label=\"Current Password\"\r\n                  {...register(\"currentPassword\")}\r\n                  error={errors.currentPassword?.message}\r\n                />\r\n              </Col>\r\n\r\n              <Col xs={12}>\r\n                <Input\r\n                  type=\"password\"\r\n                  id=\"newPassword\"\r\n                  name=\"newPassword\"\r\n                  label=\"New Password\"\r\n                  {...register(\"newPassword\")}\r\n                  error={errors.newPassword?.message}\r\n                />\r\n              </Col>\r\n\r\n              <Col xs={12}>\r\n                <Input\r\n                  type=\"password\"\r\n                  id=\"confirmPassword\"\r\n                  name=\"confirmPassword\"\r\n                  label=\"Confirm Password\"\r\n                  {...register(\"confirmPassword\")}\r\n                  error={errors.confirmPassword?.message}\r\n                />\r\n              </Col>\r\n\r\n              <Col xs={12} className=\"pt-4 position-relative text-center\">\r\n                {error && (\r\n                  <span className=\"text-danger position-absolute form-error\">\r\n                    {error}\r\n                  </span>\r\n                )}\r\n                <div className=\"d-flex align-items-center justify-content-center\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"primary\"\r\n                    className={`px-5`}\r\n                    disabled={submitting}\r\n                  >\r\n                    {!submitting && <span>Update</span>}\r\n                    {submitting && <Spinner animation=\"border\" size=\"sm\" />}\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  submitting: state.account.submitting,\r\n  user: state.auth.user,\r\n  error: state.account.error,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  reset: () => dispatch(resetState()),\r\n  handleUpdate: (payload) => dispatch(performUpdatePassword(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);\r\n"],"sourceRoot":""}