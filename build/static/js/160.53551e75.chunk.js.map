{"version":3,"sources":["components/IconButton/index.js","components/DataTable/index.js","components/DisplayText/index.js","redux/actions/carrerActions.js","redux/actionCreators/carrerCreators.js","partials/Forms/Carrer/ListCarrer.js"],"names":["Icon","icon","size","extraProps","type","props","IconButton","variant","className","onClick","isLoading","disabled","children","defaultProps","tableIcons","FirstPage","forwardRef","ref","LastPage","NextPage","PreviousPage","SortArrow","DataTable","loading","columns","actions","components","onRowClick","options","selectedRow","getList","downloadcsv","search","downloadExcel","filters","data","filterOptions","resetFilters","setFilters","refresh","resetBtn","tableRef","createRef","useState","uuidv4","reset","setReset","openFilters","setOpenFilters","tableProps","icons","style","boxShadow","localization","toolbar","searchTooltip","searchPlaceholder","showTitle","filtering","draggable","actionsColumnIndex","pageSize","emptyRowsWhenPaging","pageSizeOptions","query","Promise","resolve","reject","getDataTableQueryParams","result","undefined","docs","page","totalCount","totalDocs","rowStyle","rowData","backgroundColor","id","handleReset","useEffect","exportType","exportFromJSON","types","csv","newData","map","rest","transformedData","Object","values","reduce","acc","obj","transformedObject","_id","Link","fileName","xls","DisplayText","htmlContent","preview","handlePreview","contentRef","useRef","sanitizedHTML","DOMPurify","sanitize","current","innerHTML","querySelectorAll","forEach","preTag","html","textContent","DOMParser","parseFromString","body","divTag","document","createElement","parentNode","replaceChild","whiteSpace","wordBreak","border","borderRadius","getCarrerListBegin","CARRER_TYPES","GET_CARRER_LIST_BEGIN","getCarrerListSuccess","GET_CARRER_LIST_SUCCESS","payload","getCarrerListFailure","error","GET_CARRER_LIST_FAILURE","postCarrerSuccess","POST_CARRER_SUCCESS","updateCarrerBegin","UPDATE_CARRER_BEGIN","updateCarrerSuccess","UPDATE_CARRER_SUCCESS","updateCarrerFailure","UPDATE_CARRER_FAILURE","performGetCarrerList","dispatch","resetSnack","axios","get","BASE_URL","showSnack","message","performPostCarrer","POST_CARRER_BEGIN","post","postCarrerFailure","POST_CARRER_FAILURE","performUpdateCarrer","put","performDeleteCarrer","delete","performDeleteCarrerUserdetail","carrerid","userId","connect","state","fetching","carrer","history","deleteCarrer","setData","fetchData","a","status","isMobile","useWindowSize","Body","width","title","field","render","carrerAccordionTitle","maxWidth","minWidth","height","overflow","carrerAccordionDescription","createdAt","moment","format","_","console","log","Action","menu","label","push","iconSize"],"mappings":"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","file":"static/js/160.53551e75.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Icon = (icon, size = \"\") => {\r\n  const extraProps = {\r\n    size: 22\r\n  };\r\n  if (size === 'lg') {\r\n    extraProps.size = 32;\r\n  } else if (size === 'sm') {\r\n    extraProps.size = 18;\r\n  }\r\n  return <icon.type {...icon.props} {...extraProps} />\r\n}\r\n\r\nconst IconButton = ({ variant, className, onClick, size, isLoading, disabled, children, icon }) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      className={`btn-icon ${size ? `btn-icon-${size}` : ''} ${isLoading ? `btn-icon-loading` : ''} ${className}`}\r\n      onClick={onClick}\r\n      size={size}\r\n      disabled={isLoading || disabled}\r\n    >\r\n      <span>{Icon(icon, size)}{children && <span>{children}</span>}</span>\r\n    </Button>\r\n  )\r\n}\r\n\r\nIconButton.propTypes = {\r\n  children: PropTypes.node,\r\n  variant: PropTypes.string,\r\n  className: PropTypes.string,\r\n  size: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  isLoading: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  icon: PropTypes.any,\r\n};\r\n\r\nIconButton.defaultProps = {\r\n  variant: \"default\",\r\n  className: \"\",\r\n  size: \"\",\r\n  onClick: () => null,\r\n  isLoading: false,\r\n  disabled: false,\r\n  icon: null\r\n}\r\n\r\nexport default IconButton;","import MaterialTable from \"@material-table/core\";\r\nimport exportFromJSON from \"export-from-json\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { createRef, forwardRef, useEffect, useState } from \"react\";\r\nimport {\r\n  MdArrowUpward,\r\n  MdChevronLeft,\r\n  MdChevronRight,\r\n  MdDownload,\r\n  MdFilterAlt,\r\n  MdFirstPage,\r\n  MdLastPage,\r\n  MdRefresh,\r\n} from \"react-icons/md\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { getDataTableQueryParams } from \"../../utils/index\";\r\nimport IconButton from \"../IconButton\";\r\n\r\nconst tableIcons = {\r\n  FirstPage: forwardRef((props, ref) => <MdFirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <MdLastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <MdChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <MdChevronLeft {...props} ref={ref} />\r\n  )),\r\n  SortArrow: forwardRef((props, ref) => <MdArrowUpward {...props} ref={ref} />),\r\n};\r\n\r\nconst DataTable = ({\r\n  loading,\r\n  columns,\r\n  actions,\r\n  components,\r\n  onRowClick,\r\n  options,\r\n  selectedRow,\r\n  getList,\r\n  search,\r\n  downloadcsv,\r\n  downloadExcel,\r\n  filters,\r\n  filterOptions,\r\n  data,\r\n  setFilters,\r\n  resetFilters,\r\n  refresh,\r\n  resetBtn,\r\n}) => {\r\n  const tableRef = createRef();\r\n  const [reset, setReset] = useState(uuidv4());\r\n  const [openFilters, setOpenFilters] = useState(false);\r\n  const tableProps = {\r\n    isLoading: loading,\r\n    icons: tableIcons,\r\n    style: {\r\n      boxShadow: \"none\",\r\n    },\r\n    localization: {\r\n      toolbar: {\r\n        searchTooltip: \"Search\",\r\n        searchPlaceholder: \"Search\",\r\n      },\r\n    },\r\n    options: {\r\n      showTitle: false,\r\n      search: true,\r\n      toolbar: true,\r\n      filtering: openFilters,\r\n      draggable: false,\r\n      actionsColumnIndex: -1,\r\n      pageSize: 10,\r\n      emptyRowsWhenPaging: false, // To avoid of having empty rows\r\n      pageSizeOptions: [10, 30, 50, 100, 500],\r\n      ...options,\r\n    },\r\n    columns: columns,\r\n    data: data\r\n      ? data\r\n      : (query) =>\r\n          new Promise(async (resolve, reject) => {\r\n            try {\r\n              let result = await getList(getDataTableQueryParams(query));\r\n              if (!result.data) {\r\n                return reject();\r\n              }\r\n              return resolve({\r\n                data:\r\n                  result.data.docs !== undefined\r\n                    ? result.data.docs\r\n                    : result.data,\r\n                page: result.data.page !== undefined ? result.data.page - 1 : 0,\r\n                totalCount:\r\n                  result.data.totalDocs !== undefined\r\n                    ? result.data.totalDocs\r\n                    : 0, // this is the total count of rows or documents\r\n              });\r\n            } catch (err) {\r\n              return reject(err);\r\n            }\r\n          }),\r\n    actions: actions,\r\n    onRowClick: onRowClick,\r\n  };\r\n\r\n  if (components) {\r\n    tableProps.components = components;\r\n  }\r\n\r\n  if (onRowClick) {\r\n    tableProps.options = {\r\n      ...tableProps.options,\r\n      rowStyle: (rowData) => ({\r\n        backgroundColor:\r\n          selectedRow && selectedRow === rowData.id ? \"#f5f5f5\" : \"#FFF\",\r\n      }),\r\n      onRowClick: onRowClick,\r\n    };\r\n  }\r\n\r\n  const handleDownloadCSV = () => {\r\n    const fileName = \"CSVformat\";\r\n    const exportType = exportFromJSON.types.csv;\r\n    const newData = data.map(({ data, ...rest }) => {\r\n      const transformedData = data\r\n        ? Object.values(data).reduce((acc, obj) => ({ ...acc, ...obj }), {})\r\n        : {};\r\n      const transformedObject = {\r\n        _id: rest._id,\r\n        Link: rest.Link,\r\n        ...transformedData,\r\n      };\r\n      return data ? transformedObject : rest;\r\n    });\r\n    exportFromJSON({ data: newData, fileName, exportType });\r\n  };\r\n\r\n  const handleDownloadXLS = () => {\r\n    const fileName = \"ExcelFormat\";\r\n    const exportType = exportFromJSON.types.xls;\r\n    const newData = data.map(({ data, ...rest }) => {\r\n      const transformedData = data\r\n        ? Object.values(data).reduce((acc, obj) => ({ ...acc, ...obj }), {})\r\n        : {};\r\n      const transformedObject = {\r\n        _id: rest._id,\r\n        Link: rest.Link,\r\n        ...transformedData,\r\n      };\r\n      return data ? transformedObject : rest;\r\n    });\r\n    exportFromJSON({ data: newData, fileName, exportType });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    if (onRowClick) {\r\n      onRowClick(null);\r\n    }\r\n    resetFilters();\r\n    setReset(uuidv4());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (refresh) {\r\n      handleReset();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [refresh]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 d-flex flex-lg-row flex-column position-relative table-toolbar\">\r\n        <span className=\"d-flex flex-wrap zindex-dropdown end-0 gap-2 gap-lg-3 align-items-center justify-content-end ms-auto\">\r\n          {filters && (\r\n            <IconButton\r\n              icon={<MdFilterAlt />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={() => setOpenFilters(!openFilters)}\r\n              disabled={loading}\r\n            >\r\n              Filters\r\n            </IconButton>\r\n          )}\r\n\r\n          {resetBtn && (\r\n            <IconButton\r\n              icon={<MdRefresh />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleReset}\r\n              disabled={loading}\r\n            >\r\n              Reset\r\n            </IconButton>\r\n          )}\r\n          {downloadcsv && (\r\n            <IconButton\r\n              icon={<MdDownload />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleDownloadCSV}\r\n              disabled={loading}\r\n            >\r\n              CSV\r\n            </IconButton>\r\n          )}\r\n          {downloadExcel && (\r\n            <IconButton\r\n              icon={<MdDownload />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleDownloadXLS}\r\n              disabled={loading}\r\n            >\r\n              Excel\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      </div>\r\n\r\n      <MaterialTable\r\n        key={`data-table-${reset}`}\r\n        tableRef={tableRef}\r\n        {...tableProps}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nDataTable.propTypes = {\r\n  loading: PropTypes.bool,\r\n  columns: PropTypes.array.isRequired,\r\n  actions: PropTypes.array,\r\n  components: PropTypes.any,\r\n  onRowClick: PropTypes.any,\r\n  options: PropTypes.object,\r\n  selectedRow: PropTypes.string,\r\n  getList: PropTypes.func.isRequired,\r\n  search: PropTypes.bool,\r\n  filters: PropTypes.bool,\r\n  filterOptions: PropTypes.array,\r\n  setFilters: PropTypes.func,\r\n  resetFilters: PropTypes.func,\r\n  refresh: PropTypes.string,\r\n  resetBtn: PropTypes.bool,\r\n};\r\n\r\nDataTable.defaultProps = {\r\n  loading: false,\r\n  actions: [],\r\n  components: null,\r\n  onRowClick: null,\r\n  options: {},\r\n  selectedRow: null,\r\n  search: true,\r\n  filters: false,\r\n  filterOptions: [],\r\n  setFilters: () => null,\r\n  resetFilters: () => null,\r\n  refresh: null,\r\n  resetBtn: true,\r\n};\r\n\r\nexport default DataTable;\r\n","import DOMPurify from \"dompurify\";\nimport React, { useEffect, useRef } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { RxCross2 } from \"react-icons/rx\";\n\nconst DisplayText = ({ htmlContent, preview, handlePreview }) => {\n  const contentRef = useRef(null);\n  const convertHtmlToPlainText = (html) => {\n    const doc = new DOMParser().parseFromString(html, \"text/html\");\n    return doc.body.textContent || \"\";\n  };\n  useEffect(() => {\n    const sanitizedHTML = DOMPurify.sanitize(htmlContent);\n    contentRef.current.innerHTML = sanitizedHTML;\n    const preTags = contentRef.current.querySelectorAll(\"pre\");\n    preTags.forEach((preTag) => {\n      const textContent = convertHtmlToPlainText(preTag.innerHTML);\n      preTag.innerHTML = textContent;\n      const divTag = document.createElement(\"div\");\n      divTag.innerHTML = preTag.innerHTML;\n      preTag.parentNode.replaceChild(divTag, preTag);\n    });\n  }, [htmlContent]);\n\n  return (\n    <div className=\"position-relative\">\n      {preview && (\n        <div className=\"w-100 d-flex justify-content-end mb-2\">\n          <Button variant=\"primary\" onClick={() => handlePreview()}>\n            <RxCross2 />\n          </Button>\n        </div>\n      )}\n      <div\n        ref={contentRef}\n        style={{\n          whiteSpace: \"pre-wrap\",\n          wordBreak: \"break-word\",\n          border: \"1px solid grey\",\n          borderRadius: \"8px\",\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default DisplayText;\n","import CARRER_TYPES from \"../types/carrerTypes\";\n\nexport const resetState = () => ({\n  type: CARRER_TYPES.RESET_STATE,\n});\n\nexport const getCarrerListBegin = () => ({\n  type: CARRER_TYPES.GET_CARRER_LIST_BEGIN,\n});\n\nexport const getCarrerListSuccess = (data) => ({\n  type: CARRER_TYPES.GET_CARRER_LIST_SUCCESS,\n  payload: data,\n});\n\nexport const getCarrerListFailure = (error) => ({\n  type: CARRER_TYPES.GET_CARRER_LIST_FAILURE,\n  payload: error,\n});\n\nexport const getCarrerByIdBegin = () => ({\n  type: CARRER_TYPES.GET_BYID_CARRER_BEGIN,\n});\n\nexport const getCarrerByIdSuccess = (data) => ({\n  type: CARRER_TYPES.GET_BYID_CARRER_SUCCESS,\n  payload: data,\n});\n\nexport const getCarrerByIdFailure = (error) => ({\n  type: CARRER_TYPES.GET_BYID_CARRER_FAILURE,\n  payload: error,\n});\n\nexport const postCarrerBegin = () => ({\n  type: CARRER_TYPES.POST_CARRER_BEGIN,\n});\n\nexport const postCarrerSuccess = (data) => ({\n  type: CARRER_TYPES.POST_CARRER_SUCCESS,\n  payload: data,\n});\n\nexport const postCarrerFailure = (error) => ({\n  type: CARRER_TYPES.POST_CARRER_FAILURE,\n  payload: error,\n});\nexport const updateCarrerBegin = () => ({\n  type: CARRER_TYPES.UPDATE_CARRER_BEGIN,\n});\n\nexport const updateCarrerSuccess = (data) => ({\n  type: CARRER_TYPES.UPDATE_CARRER_SUCCESS,\n  payload: data,\n});\n\nexport const updateCarrerFailure = (error) => ({\n  type: CARRER_TYPES.UPDATE_CARRER_FAILURE,\n  payload: error,\n});\n\nexport const postCarrerImageBegin = () => ({\n  type: CARRER_TYPES.POST_IMAGE_CARRER_BEGIN,\n});\n\nexport const postCarrerImageSuccess = (data) => ({\n  type: CARRER_TYPES.POST_IMAGE_CARRER_SUCCESS,\n  payload: data,\n});\n\nexport const postCarrerImageFailure = (error) => ({\n  type: CARRER_TYPES.POST_IMAGE_CARRER_FAILURE,\n  payload: error,\n});\n","import {\n  getCarrerListBegin,\n  getCarrerListFailure,\n  getCarrerListSuccess,\n  postCarrerBegin,\n  postCarrerFailure,\n  postCarrerImageBegin,\n  postCarrerImageFailure,\n  postCarrerImageSuccess,\n  postCarrerSuccess,\n  updateCarrerBegin,\n  updateCarrerFailure,\n  updateCarrerSuccess,\n} from \"../actions/carrerActions\";\nimport { showSnack, resetSnack } from \"../actions/alertActions\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../services/constants\";\n\nexport function performGetCarrerList() {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(getCarrerListBegin());\n    try {\n      const result = await axios.get(`${BASE_URL}carrer`);\n      dispatch(getCarrerListSuccess(result.data.docs.data));\n      dispatch(\n        showSnack({\n          message: \"Carrer Retrieved Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(getCarrerListFailure());\n      return false;\n    }\n  };\n}\nexport function performGetCarrerById(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(getCarrerListBegin());\n    try {\n      const result = await axios.get(`${BASE_URL}carrer/${data}`);\n      dispatch(getCarrerListSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: \"Carrer Retrieved Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(getCarrerListFailure());\n      return false;\n    }\n  };\n}\nexport function performImagePostCarrer(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(postCarrerImageBegin());\n    try {\n      const result = await axios.post(`${BASE_URL}carrer/uploads`, data);\n      dispatch(postCarrerImageSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: \"Carrer File Upload Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(postCarrerImageFailure());\n      return false;\n    }\n  };\n}\n\nexport function performPostCarrer(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(postCarrerBegin());\n    try {\n      const result = await axios.post(`${BASE_URL}carrer`, data);\n      dispatch(postCarrerSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: \"Carrer Add Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(postCarrerFailure());\n      return false;\n    }\n  };\n}\n\nexport function performUpdateCarrer(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(updateCarrerBegin());\n    try {\n      const id = data.id;\n      const result = await axios.put(`${BASE_URL}carrer/${id}`, data);\n      dispatch(updateCarrerSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: \"carrer Update Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(updateCarrerFailure());\n      return false;\n    }\n  };\n}\n\nexport function performDeleteCarrer(id) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(updateCarrerBegin());\n    try {\n      await axios.delete(`${BASE_URL}carrer/${id}`);\n      dispatch(updateCarrerSuccess());\n      dispatch(\n        showSnack({\n          message: \"Carrer Delete Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return true;\n    } catch (error) {\n      dispatch(updateCarrerFailure());\n      return false;\n    }\n  };\n}\nexport function performDeleteCarrerUserdetail(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(updateCarrerBegin());\n    try {\n      const carrerid = data.carrerid;\n      const userId = data.userId;\n      await axios.delete(`${BASE_URL}carrer/${carrerid}/userdetails/${userId}`);\n      dispatch(updateCarrerSuccess());\n      dispatch(\n        showSnack({\n          message: \"User Detail Carrer Delete Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return true;\n    } catch (error) {\n      dispatch(updateCarrerFailure());\n      return false;\n    }\n  };\n}\n","import moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { BiSolidUserCircle } from \"react-icons/bi\";\nimport { connect } from \"react-redux\";\nimport DataTable from \"../../../components/DataTable\";\nimport DisplayText from \"../../../components/DisplayText\";\nimport DropdownMenu from \"../../../components/DropdownMenu\";\nimport useWindowSize from \"../../../hooks/UseWindowSize\";\nimport {\n    performGetCarrerList\n} from \"../../../redux/actionCreators/carrerCreators\";\n\nconst ListCarrer = ({ fetching, getList, refresh, history, deleteCarrer }) => {\n  const [data, setData] = useState([]);\n  const fetchData = async () => {\n    const result = await getList();\n    if (result.status === 200) {\n      setData(result?.data?.docs?.data);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const isMobile = useWindowSize();\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body className={`${isMobile && \"p-0\"}`}>\n          <DataTable\n            columns={[\n              {\n                width: 300,\n                title: \"Carrer Accordion Title\",\n                field: \"carrerAccordionTitle\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      <>\n                        {rowData.carrerAccordionTitle\n                          ? rowData.carrerAccordionTitle\n                          : \"N/A\"}\n                      </>\n                    </span>\n                  </>\n                ),\n              },\n\n              {\n                title: \"Carrer Accordion Description\",\n                field: \"carrerAccordionDescription\",\n                render: (rowData) => (\n                  <>\n                    <div\n                      style={{\n                        width: \"auto\",\n                        maxWidth: \"900px\",\n                        minWidth: \"400px\",\n                        height: \"300px\",\n                        overflow: \"scroll\",\n                      }}\n                    >\n                      <DisplayText\n                        htmlContent={rowData?.carrerAccordionDescription}\n                      />\n                    </div>\n                  </>\n                ),\n              },\n              {\n                width: 500,\n                title: \"Date\",\n                field: \"createdAt\",\n                render: (rowData) => (\n                  <span\n                    style={{\n                      width: \"500px\",\n                    }}\n                  >\n                    {rowData.createdAt\n                      ? moment(rowData.createdAt).format(\"DD,MM, YYYY\")\n                      : \"N/A\"}\n                  </span>\n                ),\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <BiSolidUserCircle size={20} className=\"me-2\" /> User\n                          Detail\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(`/form/Carrer/userDetail`, {\n                          data: props.data,\n                        }),\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            onRowClick={(_, rowData) => null}\n            loading={fetching}\n            data={data}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            refresh={refresh}\n          />\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.carrer.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getList: (payload) => dispatch(performGetCarrerList(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListCarrer);\n"],"sourceRoot":""}