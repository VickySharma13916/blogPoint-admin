{"version":3,"sources":["components/InputShow/index.js","components/Form/Select.js"],"names":["InputShow","userData","useHistory","location","state","data","inputForm","inputField","isMobile","useWindowSize","filterInput","filter","item","type","activeOptions","flatMap","status","options","map","option","value","label","useState","selectActiveValue","setSelectActiveValue","border","className","Header","to","title","size","inputLink","Body","field","index","style","position","left","top","padding","transform","htmlFor","name","id","readOnly","placeholder","color","onChange","animatedComponents","makeAnimated","Select","React","forwardRef","ref","placeHolder","isClearable","isMulti","error","rest","components","closeMenuOnSelect","defaultProps","required","uuidv4"],"mappings":"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","file":"static/js/166.2b506ba9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { BiArrowBack } from \"react-icons/bi\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport Page from \"../../components/Page\";\r\nimport useWindowSize from \"../../hooks/UseWindowSize\";\r\nimport Select from \"../Form/Select\";\r\n\r\nconst InputShow = () => {\r\n  const history = useHistory();\r\n  const userData = history.location.state?.data;\r\n  const inputForm = userData?.inputField;\r\n  const isMobile = useWindowSize();\r\n  const filterInput = inputForm?.filter((item) => item.type === \"options\");\r\n  const activeOptions = filterInput?.flatMap((status) =>\r\n    status.options.map((option) => ({\r\n      value: option,\r\n      label: option,\r\n    }))\r\n  );\r\n  const [selectActiveValue, setSelectActiveValue] = useState(null);\r\n  return (\r\n    <Page>\r\n      <Card\r\n        border=\"light\"\r\n        className={`w-100 mx-auto px-4 pt-3 pb-4 my-5 position-relative profile__edit ${\r\n          isMobile && \"p-0\"\r\n        }`}\r\n      >\r\n        <Card.Header className=\"d-flex align-items-center\">\r\n          <Link\r\n            to=\"/dynamicForm\"\r\n            className=\"btn btn-link px-0 me-3\"\r\n            title=\"Back\"\r\n          >\r\n            <BiArrowBack size={24} />\r\n          </Link>\r\n          Dynamic Input Detail Form -- (Page)\r\n          <br />( {userData?.inputLink} )\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <div\r\n            className={`${\r\n              isMobile ? \"my-3\" : \"my-2\"\r\n            } d-flex flex-column justify-content-end`}\r\n          >\r\n            {inputForm.map((field, index) => (\r\n              <div\r\n                key={index}\r\n                className=\" flex flex-col justify-start items-start gap-4\"\r\n              >\r\n                {field.type === \"text\" ? (\r\n                  <div className=\"d-flex mt-2 flex-column gap-2\">\r\n                    <label\r\n                      style={{\r\n                        position: \"relative\",\r\n                        left: 0,\r\n                        top: 0,\r\n                        padding: 0,\r\n                        transform: \"translate3d(0,0,0)\",\r\n                      }}\r\n                      htmlFor={field.name}\r\n                    >\r\n                      {field.label}\r\n                    </label>\r\n                    <input\r\n                      id={field.name}\r\n                      type=\"text\"\r\n                      readOnly={true}\r\n                      value={field.placeholder}\r\n                      placeholder={field.placeholder}\r\n                    />\r\n                  </div>\r\n                ) : field.type === \"email\" ? (\r\n                  <>\r\n                    <div className=\"d-flex mt-2 flex-column gap-2\">\r\n                      <label\r\n                        style={{\r\n                          position: \"relative\",\r\n                          left: 0,\r\n                          top: 0,\r\n                          padding: 0,\r\n                          transform: \"translate3d(0,0,0)\",\r\n                        }}\r\n                        htmlFor={field.name}\r\n                      >\r\n                        {field.label}\r\n                      </label>\r\n                      <input\r\n                        id={field.name}\r\n                        readOnly={true}\r\n                        value={field.placeholder}\r\n                        type=\"email\"\r\n                        placeholder={field.placeholder}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                ) : field.type === \"number\" ? (\r\n                  <>\r\n                    <div className=\"d-flex mt-2 flex-column gap-2\">\r\n                      <label\r\n                        style={{\r\n                          position: \"relative\",\r\n                          left: 0,\r\n                          top: 0,\r\n                          padding: 0,\r\n                          transform: \"translate3d(0,0,0)\",\r\n                        }}\r\n                        htmlFor={field.name}\r\n                      >\r\n                        {field.label}\r\n                      </label>\r\n                      <input\r\n                        id={field.name}\r\n                        value={field.placeholder}\r\n                        readOnly={true}\r\n                        type=\"text\"\r\n                        placeholder={field.placeholder}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                ) : field.type === \"file\" ? (\r\n                  <>\r\n                    <div className=\"d-flex mt-2 flex-column gap-2\">\r\n                      <label\r\n                        style={{\r\n                          position: \"relative\",\r\n                          left: 0,\r\n                          top: 0,\r\n                          padding: 0,\r\n                          transform: \"translate3d(0,0,0)\",\r\n                        }}\r\n                        htmlFor={field.name}\r\n                      >\r\n                        {field.label}\r\n                      </label>\r\n                      <input\r\n                        id={field.name}\r\n                        readOnly={true}\r\n                        type=\"file\"\r\n                        placeholder={field.placeholder}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                ) : field.type === \"date\" ? (\r\n                  <>\r\n                    <div className=\"d-flex mt-2 flex-column gap-2\">\r\n                      <label\r\n                        style={{\r\n                          position: \"relative\",\r\n                          left: 0,\r\n                          top: 0,\r\n                          padding: 0,\r\n                          transform: \"translate3d(0,0,0)\",\r\n                        }}\r\n                        htmlFor={field.name}\r\n                      >\r\n                        {field.label}\r\n                      </label>\r\n                      <input\r\n                        id={field.name}\r\n                        readOnly={true}\r\n                        type=\"date\"\r\n                        placeholder={field.placeholder}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                ) : field.type === \"checkbox\" ? (\r\n                  <div className=\"d-flex mt-2 gap-2 align-items-center\">\r\n                    <input id={field.name} type=\"checkbox\" className=\"w-auto\" />\r\n                    <div className=\"d-flex\">\r\n                      <label\r\n                        style={{\r\n                          position: \"relative\",\r\n                          color: \"#121212\",\r\n                          left: 0,\r\n                          top: 0,\r\n                          padding: 0,\r\n                          transform: \"translate3d(0,0,0)\",\r\n                        }}\r\n                        htmlFor={field.name}\r\n                      >\r\n                        {field.label}\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                ) : field.type === \"password\" ? (\r\n                  <>\r\n                    <div className=\"d-flex mt-2 flex-column gap-2\">\r\n                      <label\r\n                        style={{\r\n                          position: \"relative\",\r\n                          left: 0,\r\n                          top: 0,\r\n                          padding: 0,\r\n                          transform: \"translate3d(0,0,0)\",\r\n                        }}\r\n                        htmlFor={field.name}\r\n                      >\r\n                        {field.label}\r\n                      </label>\r\n                      <input\r\n                        id={field.name}\r\n                        value={field.placeholder}\r\n                        readOnly={true}\r\n                        type=\"text\"\r\n                        placeholder={field.placeholder}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                ) : field.type === \"radio\" ? (\r\n                  <>\r\n                    <div className=\"d-flex mt-2 flex-column justify-item-start gap-2 align-items-start\">\r\n                      <label\r\n                        style={{\r\n                          position: \"relative\",\r\n                          color: \"#121212\",\r\n                          left: 0,\r\n                          top: 0,\r\n                          padding: 0,\r\n                          transform: \"translate3d(0,0,0)\",\r\n                        }}\r\n                        htmlFor={field.name}\r\n                      >\r\n                        {field.label}\r\n                      </label>\r\n                      {field.options.map((option) => (\r\n                        <div\r\n                          key={option}\r\n                          className=\"d-flex gap-2 align-items-center\"\r\n                        >\r\n                          <input\r\n                            type=\"radio\"\r\n                            className=\"mr-2\"\r\n                            id={`${field.name}-${option}`}\r\n                            value={option}\r\n                          />\r\n                          <label\r\n                            style={{\r\n                              position: \"relative\",\r\n                              color: \"#121212\",\r\n                              left: 0,\r\n                              top: 0,\r\n                              padding: 0,\r\n                              transform: \"translate3d(0,0,0)\",\r\n                            }}\r\n                            htmlFor={`${field.name}-${option}`}\r\n                          >\r\n                            {option}\r\n                          </label>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </>\r\n                ) : field.type === \"options\" ? (\r\n                  <>\r\n                    <div className=\"d-flex mt-2 flex-column justify-item-start gap-2 align-items-start\">\r\n                      <label\r\n                        style={{\r\n                          position: \"relative\",\r\n                          color: \"#121212\",\r\n                          left: 0,\r\n                          top: 0,\r\n                          padding: 0,\r\n                          transform: \"translate3d(0,0,0)\",\r\n                        }}\r\n                        htmlFor={field.name}\r\n                      >\r\n                        {field.label}\r\n                      </label>\r\n                      <Select\r\n                        className=\"mr-2\"\r\n                        options={activeOptions}\r\n                        value={selectActiveValue}\r\n                        onChange={setSelectActiveValue}\r\n                        id={`${field.name}`}\r\n                        placeholder={field.name}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <div>Unsupported field type</div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default InputShow;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { default as ReactSelect } from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst Select = React.forwardRef(\r\n  ({ options, placeHolder, isClearable, name, isMulti, className, label, id, error, ...rest }, ref) => {\r\n    return (\r\n      <span\r\n        className={`d-inline-block w-100 position-relative pt-2 pb-4 input__wrapper ${error ? 'error' : ''}`}\r\n        ref={ref}\r\n      >\r\n        <ReactSelect\r\n          id={`input-select-${id}`}\r\n          name={name}\r\n          placeholder={placeHolder}\r\n          components={animatedComponents}\r\n          closeMenuOnSelect={!isMulti}\r\n          isMulti={isMulti}\r\n          options={options?.map((option) => {\r\n            return {\r\n              value: option.value,\r\n              label: option.label,\r\n              // isDisabled: !!option.isDisabled,\r\n            };\r\n          })}\r\n          isClearable={isClearable}\r\n          className={`input__select ${className}`}\r\n          {...rest}\r\n        />\r\n        {label && <label htmlFor={`input-select-${id}`}>{label}</label>}\r\n        <span className=\"input-error\">{error}</span>\r\n      </span>\r\n    );\r\n  }\r\n);\r\n\r\nSelect.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  placeHolder: PropTypes.string,\r\n  isClearable: PropTypes.bool,\r\n  name: PropTypes.string,\r\n  isMulti: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  required: PropTypes.bool,\r\n  label: PropTypes.string,\r\n  id: PropTypes.string,\r\n  error: PropTypes.string,\r\n};\r\n\r\nSelect.defaultProps = {\r\n  placeHolder: 'Select',\r\n  isClearable: false,\r\n  name: '',\r\n  isMulti: false,\r\n  className: '',\r\n  onChange: () => null,\r\n  required: false,\r\n  label: '',\r\n  id: uuidv4(),\r\n  error: '',\r\n};\r\n\r\nexport default Select;\r\n"],"sourceRoot":""}