{"version":3,"sources":["partials/Post/ListPost.js","containers/post/index.js","components/IconButton/index.js","components/Form/Input.js","components/DataTable/index.js","components/DisplayText/index.js","components/ConfirmDialog/index.js","hooks/UseWindowUrl.js","redux/actions/caseStudiesActions.js","redux/actionCreators/caseStudiesCreator.js","redux/actions/whitepaperActons.js","redux/actionCreators/whitepaperCreators.js","redux/actions/newsletterActions.js","redux/actionCreators/newsletterCrestors.js","redux/actions/blogActions.js","redux/actionCreators/blogCreators.js","partials/Post/Blogs/ListBlogs.js","partials/Post/CaseStudies/ListCaseStudies.js","partials/Post/Whitepaper/ListWhitePaper.js","partials/Post/Newsletter/ListNewsletter.js"],"names":["connect","state","refresh","setRefresh","history","useState","key","setKey","className","slice","toLocaleUpperCase","Card","Body","Tabs","id","activeKey","onSelect","k","Tab","eventKey","title","ListBlogs","uuidv4","size","ListCaseStudies","ListWhitePaper","ListNewsletter","PressRelease","useHistory","path","useRouteMatch","Page","children","ListPost","Icon","icon","extraProps","type","props","IconButton","variant","onClick","isLoading","disabled","defaultProps","Input","React","forwardRef","ref","onChange","onBlur","label","error","isClearable","hint","rest","reset","setReset","inputType","setInputType","placeholder","step","temp","defaultValue","value","restProps","htmlFor","target","style","fontSize","color","tableIcons","FirstPage","LastPage","NextPage","PreviousPage","SortArrow","DataTable","loading","columns","actions","components","onRowClick","options","selectedRow","getList","downloadcsv","search","downloadExcel","filters","data","filterOptions","resetFilters","setFilters","resetBtn","tableRef","createRef","openFilters","setOpenFilters","tableProps","icons","boxShadow","localization","toolbar","searchTooltip","searchPlaceholder","showTitle","filtering","draggable","actionsColumnIndex","pageSize","emptyRowsWhenPaging","pageSizeOptions","query","Promise","resolve","reject","getDataTableQueryParams","result","undefined","docs","page","totalCount","totalDocs","rowStyle","rowData","backgroundColor","handleReset","useEffect","exportType","exportFromJSON","types","csv","newData","map","transformedData","Object","values","reduce","acc","obj","transformedObject","_id","Link","fileName","xls","DisplayText","htmlContent","preview","handlePreview","contentRef","useRef","sanitizedHTML","DOMPurify","sanitize","current","innerHTML","querySelectorAll","forEach","preTag","html","textContent","DOMParser","parseFromString","body","divTag","document","createElement","parentNode","replaceChild","whiteSpace","wordBreak","border","borderRadius","ConfirmDialog","show","setShow","message","onConfirm","getReason","bodyHtml","loadingBtnText","footer","submitting","setSubmitting","reason","setReason","handleClose","handleOnConfirm","a","onHide","backdrop","keyboard","Header","closeButton","Title","dangerouslySetInnerHTML","__html","name","e","Footer","animation","length","UseWindowUrl","tag","googleSearchUrl","encodeURIComponent","window","open","getCaseStudiesListBegin","CASESTUDIES_TYPES","GET_CASESTUDIES_LIST_BEGIN","getCaseStudiesListSuccess","GET_CASESTUDIES_LIST_SUCCESS","payload","getCaseStudiesListFailure","GET_CASESTUDIES_LIST_FAILURE","postCaseStudiesSuccess","POST_CASESTUDIES_SUCCESS","updateCaseStudiesBegin","UPDATE_CASESTUDIES_BEGIN","updateCaseStudiesSuccess","UPDATE_CASESTUDIES_SUCCESS","updateCaseStudiesFailure","UPDATE_CASESTUDIES_FAILURE","postCaseStudiesImageBegin","POST_IMAGE_CASESTUDIES_BEGIN","postCaseStudiesImageSuccess","POST_IMAGE_CASESTUDIES_SUCCESS","postCaseStudiesImageFailure","POST_IMAGE_CASESTUDIES_FAILURE","performGetCaseStudiesList","dispatch","resetSnack","axios","get","BASE_URL","showSnack","performImagePostCaseStudies","post","performPostCaseStudiesFile","performPostCaseStudies","POST_CASESTUDIES_BEGIN","postCaseStudiesFailure","POST_CASESTUDIES_FAILURE","performUpdateCaseStudies","put","performDeleteCaseStudy","delete","performDeleteCaseStudyUserdetail","carrerid","userId","postWhitepaperSuccess","WHITEPAPER_TYPES","POST_WHITEPAPER_SUCCESS","updateWhitepaperBegin","UPDATE_WHITEPAPER_BEGIN","updateWhitepaperSuccess","UPDATE_WHITEPAPER_SUCCESS","updateWhitepaperFailure","UPDATE_WHITEPAPER_FAILURE","postWhitepaperImageBegin","POST_IMAGE_WHITEPAPER_BEGIN","postWhitepaperImageSuccess","POST_IMAGE_WHITEPAPER_SUCCESS","postWhitepaperImageFailure","POST_IMAGE_WHITEPAPER_FAILURE","performGetWhitepaperList","GET_WHITEPAPER_LIST_BEGIN","GET_WHITEPAPER_LIST_SUCCESS","getWhitepaperListFailure","GET_WHITEPAPER_LIST_FAILURE","performImagePostWhitepaper","performPostWhitepaperFile","performPostWhitepaper","POST_WHITEPAPER_BEGIN","postWhitepaperFailure","POST_WHITEPAPER_FAILURE","performUpdateWhitepaper","performDeleteWhitepaper","performDeleteWhitepaperUserdetail","postNewsletterSuccess","NEWSLETTER_TYPES","POST_NEWSLETTER_SUCCESS","updateNewsletterBegin","UPDATE_NEWSLETTER_BEGIN","updateNewsletterSuccess","UPDATE_NEWSLETTER_SUCCESS","updateNewsletterFailure","UPDATE_NEWSLETTER_FAILURE","postNewsletterImageBegin","POST_IMAGE_NEWSLETTER_BEGIN","postNewsletterImageSuccess","POST_IMAGE_NEWSLETTER_SUCCESS","postNewsletterImageFailure","POST_IMAGE_NEWSLETTER_FAILURE","performGetNewsletterList","GET_NEWSLETTER_LIST_BEGIN","GET_NEWSLETTER_LIST_SUCCESS","getNewsletterListFailure","GET_NEWSLETTER_LIST_FAILURE","performImagePostNewsletter","performPostNewsletterFile","performPostNewsletter","POST_NEWSLETTER_BEGIN","postNewsletterFailure","POST_NEWSLETTER_FAILURE","performUpdateNewsletter","performDeleteNewsletter","performDeleteNewsLetterUserdetail","postBlogSuccess","BLOG_TYPES","POST_BLOG_SUCCESS","updateBlogBegin","UPDATE_BLOG_BEGIN","updateBlogSuccess","UPDATE_BLOG_SUCCESS","updateBlogFailure","UPDATE_BLOG_FAILURE","postBlogImageSuccess","POST_IMAGE_BLOG_SUCCESS","performGetBlogList","GET_LIST_BEGIN","GET_LIST_SUCCESS","getBlogListFailure","GET_LIST_FAILURE","performImagePostBlog","POST_IMAGE_BLOG_BEGIN","postBlogImageFailure","POST_IMAGE_BLOG_FAILURE","performPostBlog","POST_BLOG_BEGIN","postBlogFailure","POST_BLOG_FAILURE","performUpdateBlog","performDeleteBlog","fetching","blog","deleteBlog","setData","fetchData","status","isMobile","useWindowSize","createRelativePath","link","FRONTEND_URL","toLowerCase","replace","showCDialog","setShowCDialog","deletingUser","MdAdd","push","width","field","customFilterAndSearch","term","blogTitle","render","blogSummary","height","display","justifyContent","alignItems","overflow","blogAuthor","blogLink","href","rel","src","BACKEND_URL","blogImage","blogtags","split","handleClick","blogCategory","metaTitle","metaDescription","authorLink","maxWidth","minWidth","blogDescription","createdAt","moment","format","statusColor","statusText","_","console","log","Action","menu","iconSize","caseStudies","deleteCaseStudy","CaseStudiesTitle","CaseStudiesSummary","CaseStudiesAuthor","CaseStudiesImage","CaseStudiesFile","CaseStudiesTags","CaseStudiesCategory","CaseStudiesLink","CaseStudiesDescription","whitepaper","deleteWhitepaper","whitepaperTitle","whitepaperSummary","whitepaperAuthor","whitepaperImage","whitepaperTags","whitepaperCategory","whitepaperFile","whitepaperLink","whitepaperDescription","newsletter","deleteNewsletter","NewsletterTitle","NewsletterSummary","NewsletterAuthor","NewsletterImage","NewsletterTags","NewsletterCategory","NewsletterLink","NewsletterFile","NewsletterDescription"],"mappings":"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","file":"static/js/47.3f098af0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Tab, Tabs } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ListBlogs from \"./Blogs/ListBlogs\";\nimport ListCaseStudies from \"./CaseStudies/ListCaseStudies\";\nimport ListWhitePaper from \"./Whitepaper/ListWhitePaper\";\nimport ListNewsletter from \"./Newsletter/ListNewsletter\";\nimport { FaBloggerB, FaRegNewspaper } from \"react-icons/fa\";\nimport { AiOutlineFileSearch } from \"react-icons/ai\";\nimport { BiNews } from \"react-icons/bi\";\n\nconst ListPostPage = ({ refresh, setRefresh, history }) => {\n  const [key, setKey] = useState(\"blogs\");\n  return (\n    <>\n      <div className=\"d-flex align-items-start mb-3\">\n        <h3 className=\"m-0\">\n          {key?.slice(0, 1)?.toLocaleUpperCase() + key?.slice(1)} - Post\n        </h3>\n      </div>\n      <Card>\n        <Card.Body>\n          <Tabs\n            id=\"controlled-tab-example\"\n            activeKey={key}\n            onSelect={(k) => setKey(k)}\n            className=\"mb-3\"\n          >\n            <Tab\n              eventKey=\"blogs\"\n              title={\n                <span className=\"title_user d-flex align-items-center gap-2\">\n                  Blogs <FaBloggerB />\n                </span>\n              }\n            >\n              <ListBlogs\n                refresh={refresh}\n                setRefresh={() => setRefresh(uuidv4())}\n                history={history}\n              />\n            </Tab>\n            <Tab\n              eventKey=\"casestudies\"\n              title={\n                <span className=\"title_user d-flex align-items-center gap-2\">\n                  Case Study <AiOutlineFileSearch size={20} />\n                </span>\n              }\n            >\n              <ListCaseStudies\n                refresh={refresh}\n                setRefresh={() => setRefresh(uuidv4())}\n                history={history}\n              />\n            </Tab>\n            <Tab\n              eventKey=\"whitepapers\"\n              title={\n                <span className=\"title_user d-flex align-items-center gap-2\">\n                  WhitePaper <FaRegNewspaper size={20} />\n                </span>\n              }\n            >\n              <ListWhitePaper\n                refresh={refresh}\n                setRefresh={() => setRefresh(uuidv4())}\n                history={history}\n              />\n            </Tab>\n            <Tab\n              eventKey=\"Newsletter\"\n              title={\n                <span className=\"title_user d-flex align-items-center gap-2\">\n                  Newsletter <BiNews size={20} />\n                </span>\n              }\n            >\n              <ListNewsletter\n                refresh={refresh}\n                setRefresh={() => setRefresh(uuidv4())}\n                history={history}\n              />\n            </Tab>\n          </Tabs>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListPostPage);\n","import React, { useState } from \"react\";\nimport { Route, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Page from \"../../components/Page\";\nimport ListPost from \"../../partials/Post/ListPost\";\n\nconst PressRelease = () => {\n  const history = useHistory();\n  const { path } = useRouteMatch();\n  const [refresh, setRefresh] = useState(\"\");\n\n  return (\n    <Page id=\"page--post\" title=\"POST\">\n      <Route\n        path={`${path}/`}\n        children={\n          <ListPost\n            refresh={refresh}\n            setRefresh={() => setRefresh(uuidv4())}\n            history={history}\n          />\n        }\n      />\n    </Page>\n  );\n};\n\nexport default PressRelease;\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Icon = (icon, size = \"\") => {\r\n  const extraProps = {\r\n    size: 22\r\n  };\r\n  if (size === 'lg') {\r\n    extraProps.size = 32;\r\n  } else if (size === 'sm') {\r\n    extraProps.size = 18;\r\n  }\r\n  return <icon.type {...icon.props} {...extraProps} />\r\n}\r\n\r\nconst IconButton = ({ variant, className, onClick, size, isLoading, disabled, children, icon }) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      className={`btn-icon ${size ? `btn-icon-${size}` : ''} ${isLoading ? `btn-icon-loading` : ''} ${className}`}\r\n      onClick={onClick}\r\n      size={size}\r\n      disabled={isLoading || disabled}\r\n    >\r\n      <span>{Icon(icon, size)}{children && <span>{children}</span>}</span>\r\n    </Button>\r\n  )\r\n}\r\n\r\nIconButton.propTypes = {\r\n  children: PropTypes.node,\r\n  variant: PropTypes.string,\r\n  className: PropTypes.string,\r\n  size: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  isLoading: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  icon: PropTypes.any,\r\n};\r\n\r\nIconButton.defaultProps = {\r\n  variant: \"default\",\r\n  className: \"\",\r\n  size: \"\",\r\n  onClick: () => null,\r\n  isLoading: false,\r\n  disabled: false,\r\n  icon: null\r\n}\r\n\r\nexport default IconButton;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { MdCancel } from \"react-icons/md\";\r\nimport { AiOutlineEyeInvisible, AiOutlineEye } from \"react-icons/ai\";\r\n\r\nimport IconButton from \"../IconButton\";\r\n\r\nconst Input = React.forwardRef(\r\n  (\r\n    {\r\n      className,\r\n      onChange,\r\n      onBlur,\r\n      label,\r\n      id,\r\n      error,\r\n      isClearable,\r\n      hint,\r\n      type,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const [reset, setReset] = useState(uuidv4());\r\n    const [inputType, setInputType] = useState(type);\r\n\r\n    const onClear = () => {\r\n      onChange({ target: { value: \"\" } });\r\n      setReset(uuidv4());\r\n    };\r\n\r\n    const restProps = () => {\r\n      const temp = { ...rest };\r\n      temp.defaultValue = temp.value || \"\";\r\n      delete temp.value;\r\n      return temp;\r\n    };\r\n\r\n    return (\r\n      <span\r\n        className={`d-inline-block w-100 position-relative pt-2 pb-4 input__wrapper ${\r\n          error ? \"error\" : \"\"\r\n        }`}\r\n        ref={ref}\r\n      >\r\n        <input\r\n          key={`input-${reset}`}\r\n          id={`input-${id}`}\r\n          type={inputType}\r\n          className={`${className}${isClearable ? \" input-clearable\" : \"\"}`}\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          placeholder={label}\r\n          step=\"any\"\r\n          {...restProps()}\r\n        />\r\n        <label htmlFor={`input-${id}`}>{label}</label>\r\n        <span className=\"input-error\">{error}</span>\r\n        {isClearable && (\r\n          <MdCancel className=\"input-clear-btn\" size={18} onClick={onClear} />\r\n        )}\r\n        {type === \"password\" && (\r\n          <IconButton\r\n            icon={\r\n              inputType === \"password\" ? (\r\n                <AiOutlineEyeInvisible />\r\n              ) : (\r\n                <AiOutlineEye />\r\n              )\r\n            }\r\n            variant=\"outline-link\"\r\n            onClick={() =>\r\n              setInputType(inputType === \"password\" ? \"text\" : \"password\")\r\n            }\r\n            className=\"p-0 m-0 position-absolute btn--show-password\"\r\n          />\r\n        )}\r\n        {hint !== \"\" && (\r\n          <span style={{ fontSize: \"12px\", color: \"#c1b1b1\" }}>{hint}</span>\r\n        )}\r\n      </span>\r\n    );\r\n  }\r\n);\r\n\r\nInput.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  label: PropTypes.string,\r\n  id: PropTypes.string,\r\n  error: PropTypes.string,\r\n  isClearable: PropTypes.bool,\r\n  type: PropTypes.string,\r\n  hint: PropTypes.string,\r\n};\r\n\r\nInput.defaultProps = {\r\n  className: \"\",\r\n  onChange: () => null,\r\n  onBlur: () => null,\r\n  label: \"\",\r\n  id: uuidv4(),\r\n  error: \"\",\r\n  isClearable: false,\r\n  type: \"text\",\r\n  hint: \"\",\r\n};\r\n\r\nexport default Input;\r\n","import MaterialTable from \"@material-table/core\";\r\nimport exportFromJSON from \"export-from-json\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { createRef, forwardRef, useEffect, useState } from \"react\";\r\nimport {\r\n  MdArrowUpward,\r\n  MdChevronLeft,\r\n  MdChevronRight,\r\n  MdDownload,\r\n  MdFilterAlt,\r\n  MdFirstPage,\r\n  MdLastPage,\r\n  MdRefresh,\r\n} from \"react-icons/md\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { getDataTableQueryParams } from \"../../utils/index\";\r\nimport IconButton from \"../IconButton\";\r\n\r\nconst tableIcons = {\r\n  FirstPage: forwardRef((props, ref) => <MdFirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <MdLastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <MdChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <MdChevronLeft {...props} ref={ref} />\r\n  )),\r\n  SortArrow: forwardRef((props, ref) => <MdArrowUpward {...props} ref={ref} />),\r\n};\r\n\r\nconst DataTable = ({\r\n  loading,\r\n  columns,\r\n  actions,\r\n  components,\r\n  onRowClick,\r\n  options,\r\n  selectedRow,\r\n  getList,\r\n  search,\r\n  downloadcsv,\r\n  downloadExcel,\r\n  filters,\r\n  filterOptions,\r\n  data,\r\n  setFilters,\r\n  resetFilters,\r\n  refresh,\r\n  resetBtn,\r\n}) => {\r\n  const tableRef = createRef();\r\n  const [reset, setReset] = useState(uuidv4());\r\n  const [openFilters, setOpenFilters] = useState(false);\r\n  const tableProps = {\r\n    isLoading: loading,\r\n    icons: tableIcons,\r\n    style: {\r\n      boxShadow: \"none\",\r\n    },\r\n    localization: {\r\n      toolbar: {\r\n        searchTooltip: \"Search\",\r\n        searchPlaceholder: \"Search\",\r\n      },\r\n    },\r\n    options: {\r\n      showTitle: false,\r\n      search: true,\r\n      toolbar: true,\r\n      filtering: openFilters,\r\n      draggable: false,\r\n      actionsColumnIndex: -1,\r\n      pageSize: 10,\r\n      emptyRowsWhenPaging: false, // To avoid of having empty rows\r\n      pageSizeOptions: [10, 30, 50, 100, 500],\r\n      ...options,\r\n    },\r\n    columns: columns,\r\n    data: data\r\n      ? data\r\n      : (query) =>\r\n          new Promise(async (resolve, reject) => {\r\n            try {\r\n              let result = await getList(getDataTableQueryParams(query));\r\n              if (!result.data) {\r\n                return reject();\r\n              }\r\n              return resolve({\r\n                data:\r\n                  result.data.docs !== undefined\r\n                    ? result.data.docs\r\n                    : result.data,\r\n                page: result.data.page !== undefined ? result.data.page - 1 : 0,\r\n                totalCount:\r\n                  result.data.totalDocs !== undefined\r\n                    ? result.data.totalDocs\r\n                    : 0, // this is the total count of rows or documents\r\n              });\r\n            } catch (err) {\r\n              return reject(err);\r\n            }\r\n          }),\r\n    actions: actions,\r\n    onRowClick: onRowClick,\r\n  };\r\n\r\n  if (components) {\r\n    tableProps.components = components;\r\n  }\r\n\r\n  if (onRowClick) {\r\n    tableProps.options = {\r\n      ...tableProps.options,\r\n      rowStyle: (rowData) => ({\r\n        backgroundColor:\r\n          selectedRow && selectedRow === rowData.id ? \"#f5f5f5\" : \"#FFF\",\r\n      }),\r\n      onRowClick: onRowClick,\r\n    };\r\n  }\r\n\r\n  const handleDownloadCSV = () => {\r\n    const fileName = \"CSVformat\";\r\n    const exportType = exportFromJSON.types.csv;\r\n    const newData = data.map(({ data, ...rest }) => {\r\n      const transformedData = data\r\n        ? Object.values(data).reduce((acc, obj) => ({ ...acc, ...obj }), {})\r\n        : {};\r\n      const transformedObject = {\r\n        _id: rest._id,\r\n        Link: rest.Link,\r\n        ...transformedData,\r\n      };\r\n      return data ? transformedObject : rest;\r\n    });\r\n    exportFromJSON({ data: newData, fileName, exportType });\r\n  };\r\n\r\n  const handleDownloadXLS = () => {\r\n    const fileName = \"ExcelFormat\";\r\n    const exportType = exportFromJSON.types.xls;\r\n    const newData = data.map(({ data, ...rest }) => {\r\n      const transformedData = data\r\n        ? Object.values(data).reduce((acc, obj) => ({ ...acc, ...obj }), {})\r\n        : {};\r\n      const transformedObject = {\r\n        _id: rest._id,\r\n        Link: rest.Link,\r\n        ...transformedData,\r\n      };\r\n      return data ? transformedObject : rest;\r\n    });\r\n    exportFromJSON({ data: newData, fileName, exportType });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    if (onRowClick) {\r\n      onRowClick(null);\r\n    }\r\n    resetFilters();\r\n    setReset(uuidv4());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (refresh) {\r\n      handleReset();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [refresh]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 d-flex flex-lg-row flex-column position-relative table-toolbar\">\r\n        <span className=\"d-flex flex-wrap zindex-dropdown end-0 gap-2 gap-lg-3 align-items-center justify-content-end ms-auto\">\r\n          {filters && (\r\n            <IconButton\r\n              icon={<MdFilterAlt />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={() => setOpenFilters(!openFilters)}\r\n              disabled={loading}\r\n            >\r\n              Filters\r\n            </IconButton>\r\n          )}\r\n\r\n          {resetBtn && (\r\n            <IconButton\r\n              icon={<MdRefresh />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleReset}\r\n              disabled={loading}\r\n            >\r\n              Reset\r\n            </IconButton>\r\n          )}\r\n          {downloadcsv && (\r\n            <IconButton\r\n              icon={<MdDownload />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleDownloadCSV}\r\n              disabled={loading}\r\n            >\r\n              CSV\r\n            </IconButton>\r\n          )}\r\n          {downloadExcel && (\r\n            <IconButton\r\n              icon={<MdDownload />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleDownloadXLS}\r\n              disabled={loading}\r\n            >\r\n              Excel\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      </div>\r\n\r\n      <MaterialTable\r\n        key={`data-table-${reset}`}\r\n        tableRef={tableRef}\r\n        {...tableProps}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nDataTable.propTypes = {\r\n  loading: PropTypes.bool,\r\n  columns: PropTypes.array.isRequired,\r\n  actions: PropTypes.array,\r\n  components: PropTypes.any,\r\n  onRowClick: PropTypes.any,\r\n  options: PropTypes.object,\r\n  selectedRow: PropTypes.string,\r\n  getList: PropTypes.func.isRequired,\r\n  search: PropTypes.bool,\r\n  filters: PropTypes.bool,\r\n  filterOptions: PropTypes.array,\r\n  setFilters: PropTypes.func,\r\n  resetFilters: PropTypes.func,\r\n  refresh: PropTypes.string,\r\n  resetBtn: PropTypes.bool,\r\n};\r\n\r\nDataTable.defaultProps = {\r\n  loading: false,\r\n  actions: [],\r\n  components: null,\r\n  onRowClick: null,\r\n  options: {},\r\n  selectedRow: null,\r\n  search: true,\r\n  filters: false,\r\n  filterOptions: [],\r\n  setFilters: () => null,\r\n  resetFilters: () => null,\r\n  refresh: null,\r\n  resetBtn: true,\r\n};\r\n\r\nexport default DataTable;\r\n","import DOMPurify from \"dompurify\";\nimport React, { useEffect, useRef } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { RxCross2 } from \"react-icons/rx\";\n\nconst DisplayText = ({ htmlContent, preview, handlePreview }) => {\n  const contentRef = useRef(null);\n  const convertHtmlToPlainText = (html) => {\n    const doc = new DOMParser().parseFromString(html, \"text/html\");\n    return doc.body.textContent || \"\";\n  };\n  useEffect(() => {\n    const sanitizedHTML = DOMPurify.sanitize(htmlContent);\n    contentRef.current.innerHTML = sanitizedHTML;\n    const preTags = contentRef.current.querySelectorAll(\"pre\");\n    preTags.forEach((preTag) => {\n      const textContent = convertHtmlToPlainText(preTag.innerHTML);\n      preTag.innerHTML = textContent;\n      const divTag = document.createElement(\"div\");\n      divTag.innerHTML = preTag.innerHTML;\n      preTag.parentNode.replaceChild(divTag, preTag);\n    });\n  }, [htmlContent]);\n\n  return (\n    <div className=\"position-relative\">\n      {preview && (\n        <div className=\"w-100 d-flex justify-content-end mb-2\">\n          <Button variant=\"primary\" onClick={() => handlePreview()}>\n            <RxCross2 />\n          </Button>\n        </div>\n      )}\n      <div\n        ref={contentRef}\n        style={{\n          whiteSpace: \"pre-wrap\",\n          wordBreak: \"break-word\",\n          border: \"1px solid grey\",\n          borderRadius: \"8px\",\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default DisplayText;\n","import React, { useState } from 'react';\r\nimport { Modal, Button, Spinner } from 'react-bootstrap';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Input from '../Form/Input';\r\n\r\nconst ConfirmDialog = ({ show, setShow, title, message, onConfirm, getReason, bodyHtml, loadingBtnText, footer }) => {\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [reason, setReason] = useState('');\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const handleOnConfirm = async () => {\r\n    setSubmitting(true);\r\n    await onConfirm(reason);\r\n    setSubmitting(false);\r\n    setShow(false);\r\n    setReason('');\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div dangerouslySetInnerHTML={{ __html: message }}></div>\r\n        {bodyHtml}\r\n        {getReason && (\r\n          <div>\r\n            <Input id=\"reason\" name=\"reason\" label=\"Reason\" value={reason} onChange={(e) => setReason(e.target.value)} />\r\n          </div>\r\n        )}\r\n      </Modal.Body>\r\n      {footer && (\r\n        <Modal.Footer>\r\n          <Button variant=\"default\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          {!getReason && (\r\n            <Button variant=\"danger\" onClick={handleOnConfirm}>\r\n              {!submitting && <span>Confirm</span>}\r\n              {submitting && (\r\n                <span>\r\n                  {loadingBtnText} <Spinner size=\"sm\" animation=\"border\" />\r\n                </span>\r\n              )}\r\n            </Button>\r\n          )}\r\n          {getReason && (\r\n            <Button disabled={reason === '' || reason.length <= 3} variant=\"danger\" onClick={handleOnConfirm}>\r\n              {!submitting && <span>Confirm</span>}\r\n              {submitting && (\r\n                <span>\r\n                  {loadingBtnText} <Spinner size=\"sm\" animation=\"border\" />\r\n                </span>\r\n              )}\r\n            </Button>\r\n          )}\r\n        </Modal.Footer>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nConfirmDialog.propTypes = {\r\n  show: PropTypes.bool,\r\n  setShow: PropTypes.func,\r\n  title: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onConfirm: PropTypes.func,\r\n  getReason: PropTypes.bool,\r\n  bodyHtml: PropTypes.node,\r\n  loadingBtnText: PropTypes.string,\r\n  footer: PropTypes.bool,\r\n};\r\n\r\nConfirmDialog.defaultProps = {\r\n  show: false,\r\n  setShow: () => null,\r\n  title: 'Give a title',\r\n  message: 'Your message here',\r\n  onConfirm: () => null,\r\n  getReason: false,\r\n  bodyHtml: <></>,\r\n  loadingBtnText: 'Deleting',\r\n  footer: true,\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","const UseWindowUrl = (tag) => {\r\n    const googleSearchUrl = `https://www.google.com/search?q=${encodeURIComponent(\r\n      tag\r\n    )}`;\r\n    window.open(googleSearchUrl, \"_blank\");\r\n  };\r\n  \r\n  export default UseWindowUrl;\r\n  ","import CASESTUDIES_TYPES from \"../types/caseStudiesTypes\";\r\n\r\nexport const resetState = () => ({\r\n  type: CASESTUDIES_TYPES.RESET_STATE,\r\n});\r\n\r\nexport const getCaseStudiesListBegin = () => ({\r\n  type: CASESTUDIES_TYPES.GET_CASESTUDIES_LIST_BEGIN,\r\n});\r\n\r\nexport const getCaseStudiesListSuccess = (data) => ({\r\n  type: CASESTUDIES_TYPES.GET_CASESTUDIES_LIST_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const getCaseStudiesListFailure = (error) => ({\r\n  type: CASESTUDIES_TYPES.GET_CASESTUDIES_LIST_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const getCaseStudiesByIdBegin = () => ({\r\n  type: CASESTUDIES_TYPES.GET_BYID_CASESTUDIES_BEGIN,\r\n});\r\n\r\nexport const getCaseStudiesByIdSuccess = (data) => ({\r\n  type: CASESTUDIES_TYPES.GET_BYID_CASESTUDIES_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const getCaseStudiesByIdFailure = (error) => ({\r\n  type: CASESTUDIES_TYPES.GET_BYID_CASESTUDIES_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const postCaseStudiesBegin = () => ({\r\n  type: CASESTUDIES_TYPES.POST_CASESTUDIES_BEGIN,\r\n});\r\n\r\nexport const postCaseStudiesSuccess = (data) => ({\r\n  type: CASESTUDIES_TYPES.POST_CASESTUDIES_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const postCaseStudiesFailure = (error) => ({\r\n  type: CASESTUDIES_TYPES.POST_CASESTUDIES_FAILURE,\r\n  payload: error,\r\n});\r\nexport const updateCaseStudiesBegin = () => ({\r\n  type: CASESTUDIES_TYPES.UPDATE_CASESTUDIES_BEGIN,\r\n});\r\n\r\nexport const updateCaseStudiesSuccess = (data) => ({\r\n  type: CASESTUDIES_TYPES.UPDATE_CASESTUDIES_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const updateCaseStudiesFailure = (error) => ({\r\n  type: CASESTUDIES_TYPES.UPDATE_CASESTUDIES_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const postCaseStudiesImageBegin = () => ({\r\n  type: CASESTUDIES_TYPES.POST_IMAGE_CASESTUDIES_BEGIN,\r\n});\r\n\r\nexport const postCaseStudiesImageSuccess = (data) => ({\r\n  type: CASESTUDIES_TYPES.POST_IMAGE_CASESTUDIES_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const postCaseStudiesImageFailure = (error) => ({\r\n  type: CASESTUDIES_TYPES.POST_IMAGE_CASESTUDIES_FAILURE,\r\n  payload: error,\r\n});\r\n","import {\r\n  getCaseStudiesListBegin,\r\n  getCaseStudiesListFailure,\r\n  getCaseStudiesListSuccess,\r\n  postCaseStudiesBegin,\r\n  postCaseStudiesFailure,\r\n  postCaseStudiesImageBegin,\r\n  postCaseStudiesImageFailure,\r\n  postCaseStudiesImageSuccess,\r\n  postCaseStudiesSuccess,\r\n  updateCaseStudiesBegin,\r\n  updateCaseStudiesFailure,\r\n  updateCaseStudiesSuccess,\r\n} from \"../actions/caseStudiesActions\";\r\nimport { showSnack, resetSnack } from \"../actions/alertActions\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../services/constants\";\r\n\r\nexport function performGetCaseStudiesList() {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(getCaseStudiesListBegin());\r\n    try {\r\n      const result = await axios.get(`${BASE_URL}caseStudies`);\r\n      dispatch(getCaseStudiesListSuccess(result.data.docs.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Case Studies Retrieved Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(getCaseStudiesListFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\nexport function performGetCaseStudiesById(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(getCaseStudiesListBegin());\r\n    try {\r\n      const result = await axios.get(`${BASE_URL}caseStudies/${data}`);\r\n      dispatch(getCaseStudiesListSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Case Studies Retrieved Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(getCaseStudiesListFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\nexport function performImagePostCaseStudies(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postCaseStudiesImageBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}caseStudies/uploads`, data);\r\n      dispatch(postCaseStudiesImageSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Case Studies Image Add Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postCaseStudiesImageFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performPostCaseStudiesFile(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postCaseStudiesImageBegin());\r\n    try {\r\n      const result = await axios.post(\r\n        `${BASE_URL}caseStudies/uploadFile`,\r\n        data\r\n      );\r\n      dispatch(postCaseStudiesImageSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Case Studies File Add Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postCaseStudiesImageFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performPostCaseStudies(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postCaseStudiesBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}caseStudies`, data);\r\n      dispatch(postCaseStudiesSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Case Studies Add Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postCaseStudiesFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performUpdateCaseStudies(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(updateCaseStudiesBegin());\r\n    try {\r\n      const id = data.id;\r\n      const result = await axios.put(`${BASE_URL}caseStudies/${id}`, data);\r\n      dispatch(updateCaseStudiesSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Case Studies Update Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(updateCaseStudiesFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performDeleteCaseStudy(id) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(updateCaseStudiesBegin());\r\n    try {\r\n      await axios.delete(`${BASE_URL}caseStudies/${id}`);\r\n      dispatch(updateCaseStudiesSuccess());\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Case Study Delete Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return true;\r\n    } catch (error) {\r\n      dispatch(updateCaseStudiesFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performDeleteCaseStudyUserdetail(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(updateCaseStudiesBegin());\r\n    try {\r\n      const carrerid = data.carrerid;\r\n      const userId = data.userId;\r\n      await axios.delete(\r\n        `${BASE_URL}caseStudies/${carrerid}/userdetails/${userId}`\r\n      );\r\n      dispatch(updateCaseStudiesSuccess());\r\n      dispatch(\r\n        showSnack({\r\n          message: \"User Detail Case Study Delete Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return true;\r\n    } catch (error) {\r\n      dispatch(updateCaseStudiesFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n","import WHITEPAPER_TYPES from \"../types/whitepaperTypes\";\r\n\r\nexport const resetState = () => ({\r\n  type: WHITEPAPER_TYPES.RESET_STATE,\r\n});\r\n\r\nexport const getWhitepaperListBegin = () => ({\r\n  type: WHITEPAPER_TYPES.GET_WHITEPAPER_LIST_BEGIN,\r\n});\r\n\r\nexport const getWhitepaperListSuccess = (data) => ({\r\n  type: WHITEPAPER_TYPES.GET_WHITEPAPER_LIST_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const getWhitepaperListFailure = (error) => ({\r\n  type: WHITEPAPER_TYPES.GET_WHITEPAPER_LIST_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const postWhitepaperBegin = () => ({\r\n  type: WHITEPAPER_TYPES.POST_WHITEPAPER_BEGIN,\r\n});\r\n\r\nexport const postWhitepaperSuccess = (data) => ({\r\n  type: WHITEPAPER_TYPES.POST_WHITEPAPER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const postWhitepaperFailure = (error) => ({\r\n  type: WHITEPAPER_TYPES.POST_WHITEPAPER_FAILURE,\r\n  payload: error,\r\n});\r\nexport const updateWhitepaperBegin = () => ({\r\n  type: WHITEPAPER_TYPES.UPDATE_WHITEPAPER_BEGIN,\r\n});\r\n\r\nexport const updateWhitepaperSuccess = (data) => ({\r\n  type: WHITEPAPER_TYPES.UPDATE_WHITEPAPER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const updateWhitepaperFailure = (error) => ({\r\n  type: WHITEPAPER_TYPES.UPDATE_WHITEPAPER_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const postWhitepaperImageBegin = () => ({\r\n  type: WHITEPAPER_TYPES.POST_IMAGE_WHITEPAPER_BEGIN,\r\n});\r\n\r\nexport const postWhitepaperImageSuccess = (data) => ({\r\n  type: WHITEPAPER_TYPES.POST_IMAGE_WHITEPAPER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const postWhitepaperImageFailure = (error) => ({\r\n  type: WHITEPAPER_TYPES.POST_IMAGE_WHITEPAPER_FAILURE,\r\n  payload: error,\r\n});\r\n","import {\r\n  getWhitepaperListBegin,\r\n  getWhitepaperListSuccess,\r\n  getWhitepaperListFailure,\r\n  postWhitepaperBegin,\r\n  postWhitepaperSuccess,\r\n  postWhitepaperFailure,\r\n  postWhitepaperImageBegin,\r\n  postWhitepaperImageFailure,\r\n  postWhitepaperImageSuccess,\r\n  updateWhitepaperBegin,\r\n  updateWhitepaperSuccess,\r\n  updateWhitepaperFailure,\r\n} from \"../actions/whitepaperActons\";\r\nimport { showSnack, resetSnack } from \"../actions/alertActions\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../services/constants\";\r\n\r\nexport function performGetWhitepaperList() {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(getWhitepaperListBegin());\r\n    try {\r\n      const result = await axios.get(`${BASE_URL}whitepapers`);\r\n      dispatch(getWhitepaperListSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Whitepapers Retrieved Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(getWhitepaperListFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\nexport function performImagePostWhitepaper(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postWhitepaperImageBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}whitepapers/uploads`, data);\r\n      dispatch(postWhitepaperImageSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Whitepaper Image Add Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postWhitepaperImageFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\nexport function performPostWhitepaperFile(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postWhitepaperImageBegin());\r\n    try {\r\n      const result = await axios.post(\r\n        `${BASE_URL}whitepapers/uploadFile`,\r\n        data\r\n      );\r\n      dispatch(postWhitepaperImageSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Whitepaper File Add Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postWhitepaperImageFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performPostWhitepaper(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postWhitepaperBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}whitepapers`, data);\r\n      dispatch(postWhitepaperSuccess(result?.data?.docs?.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Whitepaper Add Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postWhitepaperFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performUpdateWhitepaper(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(updateWhitepaperBegin());\r\n    try {\r\n      const id = data.id;\r\n      const result = await axios.put(`${BASE_URL}whitepapers/${id}`, data);\r\n      dispatch(updateWhitepaperSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Whitepaper Update Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(updateWhitepaperFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performDeleteWhitepaper(id) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(updateWhitepaperBegin());\r\n    try {\r\n      await axios.delete(`${BASE_URL}whitepapers/${id}`);\r\n      dispatch(updateWhitepaperSuccess());\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Whitepaper Delete Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return true;\r\n    } catch (error) {\r\n      dispatch(updateWhitepaperFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performDeleteWhitepaperUserdetail(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(updateWhitepaperBegin());\r\n    try {\r\n      const carrerid = data.carrerid;\r\n      const userId = data.userId;\r\n      await axios.delete(\r\n        `${BASE_URL}whitepapers/${carrerid}/userdetails/${userId}`\r\n      );\r\n      dispatch(updateWhitepaperSuccess());\r\n      dispatch(\r\n        showSnack({\r\n          message: \"User Detail whitepapers Delete Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return true;\r\n    } catch (error) {\r\n      dispatch(updateWhitepaperFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n","import NEWSLETTER_TYPES from \"../types/newsletterTypes\";\r\n\r\nexport const resetState = () => ({\r\n  type: NEWSLETTER_TYPES.RESET_STATE,\r\n});\r\n\r\nexport const getNewsletterListBegin = () => ({\r\n  type: NEWSLETTER_TYPES.GET_NEWSLETTER_LIST_BEGIN,\r\n});\r\n\r\nexport const getNewsletterListSuccess = (data) => ({\r\n  type: NEWSLETTER_TYPES.GET_NEWSLETTER_LIST_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const getNewsletterListFailure = (error) => ({\r\n  type: NEWSLETTER_TYPES.GET_NEWSLETTER_LIST_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const postNewsletterBegin = () => ({\r\n  type: NEWSLETTER_TYPES.POST_NEWSLETTER_BEGIN,\r\n});\r\n\r\nexport const postNewsletterSuccess = (data) => ({\r\n  type: NEWSLETTER_TYPES.POST_NEWSLETTER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const postNewsletterFailure = (error) => ({\r\n  type: NEWSLETTER_TYPES.POST_NEWSLETTER_FAILURE,\r\n  payload: error,\r\n});\r\nexport const updateNewsletterBegin = () => ({\r\n  type: NEWSLETTER_TYPES.UPDATE_NEWSLETTER_BEGIN,\r\n});\r\n\r\nexport const updateNewsletterSuccess = (data) => ({\r\n  type: NEWSLETTER_TYPES.UPDATE_NEWSLETTER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const updateNewsletterFailure = (error) => ({\r\n  type: NEWSLETTER_TYPES.UPDATE_NEWSLETTER_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const postNewsletterImageBegin = () => ({\r\n  type: NEWSLETTER_TYPES.POST_IMAGE_NEWSLETTER_BEGIN,\r\n});\r\n\r\nexport const postNewsletterImageSuccess = (data) => ({\r\n  type: NEWSLETTER_TYPES.POST_IMAGE_NEWSLETTER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const postNewsletterImageFailure = (error) => ({\r\n  type: NEWSLETTER_TYPES.POST_IMAGE_NEWSLETTER_FAILURE,\r\n  payload: error,\r\n});\r\n","import {\r\n  getNewsletterListBegin,\r\n  getNewsletterListFailure,\r\n  getNewsletterListSuccess,\r\n  postNewsletterBegin,\r\n  postNewsletterFailure,\r\n  postNewsletterImageBegin,\r\n  postNewsletterImageFailure,\r\n  postNewsletterImageSuccess,\r\n  postNewsletterSuccess,\r\n  updateNewsletterBegin,\r\n  updateNewsletterFailure,\r\n  updateNewsletterSuccess,\r\n} from \"../actions/newsletterActions\";\r\nimport { showSnack, resetSnack } from \"../actions/alertActions\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../services/constants\";\r\n\r\nexport function performGetNewsletterList() {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(getNewsletterListBegin());\r\n    try {\r\n      const result = await axios.get(`${BASE_URL}newsletter`);\r\n      dispatch(getNewsletterListSuccess(result.data.docs.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Newsletter Retrieved Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(getNewsletterListFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\nexport function performImagePostNewsletter(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postNewsletterImageBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}newsletter/uploads`, data);\r\n      dispatch(postNewsletterImageSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Newsletter Image Add Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postNewsletterImageFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performPostNewsletterFile(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postNewsletterImageBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}newsletter/uploadFile`, data);\r\n      dispatch(postNewsletterImageSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Newsletter File Add Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postNewsletterImageFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performPostNewsletter(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postNewsletterBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}newsletter`, data);\r\n      dispatch(postNewsletterSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Newsletter Add Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postNewsletterFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performUpdateNewsletter(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(updateNewsletterBegin());\r\n    try {\r\n      const id = data.id;\r\n      const result = await axios.put(`${BASE_URL}newsletter/${id}`, data);\r\n      dispatch(updateNewsletterSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Newsletter Update Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(updateNewsletterFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performDeleteNewsletter(id) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(updateNewsletterBegin());\r\n    try {\r\n      await axios.delete(`${BASE_URL}newsletter/${id}`);\r\n      dispatch(updateNewsletterSuccess());\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Newsletter Delete Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return true;\r\n    } catch (error) {\r\n      dispatch(updateNewsletterFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performDeleteNewsLetterUserdetail(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(updateNewsletterBegin());\r\n    try {\r\n      const carrerid = data.carrerid;\r\n      const userId = data.userId;\r\n      await axios.delete(\r\n        `${BASE_URL}newsletter/${carrerid}/userdetails/${userId}`\r\n      );\r\n      dispatch(updateNewsletterSuccess());\r\n      dispatch(\r\n        showSnack({\r\n          message: \"User Detail Newsletter Delete Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return true;\r\n    } catch (error) {\r\n      dispatch(updateNewsletterFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n","import BLOG_TYPES from \"../types/blogTypes\";\r\n\r\nexport const resetState = () => ({\r\n  type: BLOG_TYPES.RESET_STATE,\r\n});\r\n\r\nexport const getBlogListBegin = () => ({\r\n  type: BLOG_TYPES.GET_LIST_BEGIN,\r\n});\r\n\r\nexport const getBlogListSuccess = (data) => ({\r\n  type: BLOG_TYPES.GET_LIST_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const getBlogListFailure = (error) => ({\r\n  type: BLOG_TYPES.GET_LIST_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const postBlogBegin = () => ({\r\n  type: BLOG_TYPES.POST_BLOG_BEGIN,\r\n});\r\n\r\nexport const postBlogSuccess = (data) => ({\r\n  type: BLOG_TYPES.POST_BLOG_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const postBlogFailure = (error) => ({\r\n  type: BLOG_TYPES.POST_BLOG_FAILURE,\r\n  payload: error,\r\n});\r\nexport const updateBlogBegin = () => ({\r\n  type: BLOG_TYPES.UPDATE_BLOG_BEGIN,\r\n});\r\n\r\nexport const updateBlogSuccess = (data) => ({\r\n  type: BLOG_TYPES.UPDATE_BLOG_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const updateBlogFailure = (error) => ({\r\n  type: BLOG_TYPES.UPDATE_BLOG_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const postBlogImageBegin = () => ({\r\n  type: BLOG_TYPES.POST_IMAGE_BLOG_BEGIN,\r\n});\r\n\r\nexport const postBlogImageSuccess = (data) => ({\r\n  type: BLOG_TYPES.POST_IMAGE_BLOG_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const postBlogImageFailure = (error) => ({\r\n  type: BLOG_TYPES.POST_IMAGE_BLOG_FAILURE,\r\n  payload: error,\r\n});\r\n","import {\r\n  getBlogListBegin,\r\n  getBlogListSuccess,\r\n  getBlogListFailure,\r\n  postBlogBegin,\r\n  postBlogSuccess,\r\n  postBlogFailure,\r\n  postBlogImageBegin,\r\n  postBlogImageFailure,\r\n  postBlogImageSuccess,\r\n  updateBlogBegin,\r\n  updateBlogSuccess,\r\n  updateBlogFailure,\r\n} from \"../actions/blogActions\";\r\nimport { showSnack, resetSnack } from \"../actions/alertActions\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../services/constants\";\r\n\r\nexport function performGetBlogList() {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(getBlogListBegin());\r\n    try {\r\n      const result = await axios.get(`${BASE_URL}blogs`);\r\n      dispatch(getBlogListSuccess(result?.data?.docs?.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Blog Retrieved Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(getBlogListFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\nexport function performImagePostBlog(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postBlogImageBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}blogs/uploads`, data);\r\n      dispatch(postBlogImageSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Blog Image Add Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postBlogImageFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performPostBlog(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(postBlogBegin());\r\n    try {\r\n      const result = await axios.post(`${BASE_URL}blogs`, data);\r\n      dispatch(postBlogSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Blog Add Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(postBlogFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performUpdateBlog(data) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(updateBlogBegin());\r\n    try {\r\n      const id = data.id;\r\n      const result = await axios.put(`${BASE_URL}blogs/${id}`, data);\r\n      dispatch(updateBlogSuccess(result.data));\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Blog Update Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      dispatch(updateBlogFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n\r\nexport function performDeleteBlog(id) {\r\n  return async (dispatch) => {\r\n    dispatch(resetSnack());\r\n    dispatch(updateBlogBegin());\r\n    try {\r\n      await axios.delete(`${BASE_URL}blogs/${id}`);\r\n      dispatch(updateBlogSuccess());\r\n      dispatch(\r\n        showSnack({\r\n          message: \"Blog Delete Successfully\",\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        })\r\n      );\r\n      return true;\r\n    } catch (error) {\r\n      dispatch(updateBlogFailure());\r\n      return false;\r\n    }\r\n  };\r\n}\r\n","import moment from \"moment\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Avatar from \"react-avatar\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport ConfirmDialog from \"../../../components/ConfirmDialog\";\nimport DataTable from \"../../../components/DataTable\";\nimport DisplayText from \"../../../components/DisplayText\";\nimport DropdownMenu from \"../../../components/DropdownMenu\";\nimport IconButton from \"../../../components/IconButton\";\nimport useWindowSize from \"../../../hooks/UseWindowSize\";\nimport UseWindowUrl from \"../../../hooks/UseWindowUrl\";\nimport {\n  performDeleteBlog,\n  performGetBlogList,\n} from \"../../../redux/actionCreators/blogCreators\";\nimport { BACKEND_URL, FRONTEND_URL } from \"../../../services/constants\";\n\nconst ListBlog = ({ fetching, getList, refresh, history, deleteBlog }) => {\n  const [data, setData] = useState([]);\n  const fetchData = async () => {\n    const result = await getList();\n    if (result.status === 200) {\n      setData(result?.data?.docs?.data);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const isMobile = useWindowSize();\n  const handleClick = (tag) => {\n    UseWindowUrl(tag);\n  };\n\n  const createRelativePath = (link) => {\n    const url = `${FRONTEND_URL}${link?.toLowerCase()?.replace(/\\s+/g, \"-\")}`;\n    return url;\n  };\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const handleOnConfirm = async () => {\n    const result = await deleteBlog(deletingUser.current?._id);\n    if (result) {\n      fetchData();\n    }\n  };\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body className={`${isMobile && \"p-0\"}`}>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() => history.push(`/post/blogs/addblogs`)}\n            >\n              Add Blogs\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                width: 300,\n                title: \"Blog Title\",\n                field: \"blogTitle\",\n                customFilterAndSearch: (term, rowData) =>\n                  term === rowData.blogTitle,\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      <>{rowData.blogTitle ? rowData.blogTitle : \"N/A\"}</>\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Blog Summary\",\n                field: \"blogSummary\",\n                customFilterAndSearch: (term, rowData) =>\n                  term === rowData.blogSummary,\n                render: (rowData) => (\n                  <div\n                    style={{\n                      width: \"300px\",\n                      height: \"300px\",\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      overflow: \"scroll\",\n                    }}\n                  >\n                    {rowData.blogSummary ? rowData.blogSummary : \"N/A\"}\n                  </div>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Blog Author\",\n                field: \"blogAuthor\",\n                customFilterAndSearch: (term, rowData) =>\n                  term === rowData.blogAuthor,\n                render: (rowData) => (\n                  <span\n                    style={{\n                      width: \"300px\",\n                    }}\n                  >\n                    {rowData.blogAuthor ? rowData.blogAuthor : \"N/A\"}\n                  </span>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Blog Link\",\n                field: \"blogLink\",\n                render: (rowData) => (\n                  <span\n                    style={{\n                      width: \"300px\",\n                    }}\n                  >\n                    {rowData.blogLink ? (\n                      <a\n                        href={`${FRONTEND_URL}${rowData?.blogLink\n                          ?.toLowerCase()\n                          ?.replace(/\\s+/g, \"-\")}`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        {createRelativePath(rowData?.blogLink)}\n                      </a>\n                    ) : (\n                      \"N/A\"\n                    )}\n                  </span>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Blog Image\",\n                field: \"blogImage\",\n                render: (rowData) => (\n                  <>\n                    <Avatar\n                      src={BACKEND_URL + rowData?.blogImage}\n                      name={rowData?.blogTitle}\n                      size=\"70\"\n                      className=\"ff-primary rounded-circle me-3\"\n                    />\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Blog Tags\",\n                field: \"blogtags\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.blogtags?.split(\",\")?.map((tag) => (\n                        <div\n                          className=\"text-primary\"\n                          onClick={() => handleClick(tag)}\n                        >\n                          {tag}\n                        </div>\n                      ))}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Blog Category\",\n                field: \"blogCategory\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.blogCategory}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Blog Meta Title\",\n                field: \"metaTitle\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.metaTitle}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Blog Meta Description\",\n                field: \"metaDescription\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.metaDescription}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Blog Athor Link\",\n                field: \"authorLink\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.authorLink}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                title: \"Blog Description\",\n                field: \"blogDescription\",\n                render: (rowData) => (\n                  <>\n                    <div\n                      style={{\n                        width: \"auto\",\n                        maxWidth: \"900px\",\n                        minWidth: \"400px\",\n                        height: \"300px\",\n                        overflow: \"scroll\",\n                      }}\n                    >\n                      <DisplayText htmlContent={rowData?.blogDescription} />\n                    </div>\n                  </>\n                ),\n              },\n              {\n                width: 500,\n                title: \"Date\",\n                field: \"createdAt\",\n                render: (rowData) => (\n                  <span\n                    style={{\n                      width: \"500px\",\n                    }}\n                  >\n                    {rowData.createdAt\n                      ? moment(rowData.createdAt).format(\"DD,MM, YYYY\")\n                      : \"N/A\"}\n                  </span>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Status\",\n                field: \"status\",\n                filtering: false,\n                render: (rowData) => {\n                  let statusColor = \"success\";\n                  let statusText = \"Published\";\n                  if (rowData.status === false) {\n                    statusColor = \"warning\";\n                    statusText = \"Draft\";\n                  }\n                  return (\n                    <span className={`text-${statusColor}`}>{statusText}</span>\n                  );\n                },\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/post/blogs/${props.data.blogLink}/edit`,\n                          {\n                            data: props.data,\n                          }\n                        ),\n                    },\n                    // {\n                    //   label: (\n                    //     <span className=\"d-flex align-items-center text-danger\">\n                    //       <MdDelete size={20} className=\"me-2\" /> Delete\n                    //     </span>\n                    //   ),\n                    //   onClick: () => {\n                    //     setShowCDialog(true);\n                    //     deletingUser.current = props.data;\n                    //   },\n                    // },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            onRowClick={(_, rowData) => null}\n            loading={fetching}\n            data={data}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            refresh={refresh}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Blog\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.blogTitle}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.blog.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getList: (payload) => dispatch(performGetBlogList(payload)),\n  deleteBlog: (payload) => dispatch(performDeleteBlog(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListBlog);\n","import moment from \"moment\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Avatar from \"react-avatar\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport ConfirmDialog from \"../../../components/ConfirmDialog\";\nimport DataTable from \"../../../components/DataTable\";\nimport DisplayText from \"../../../components/DisplayText\";\nimport DropdownMenu from \"../../../components/DropdownMenu\";\nimport IconButton from \"../../../components/IconButton\";\nimport useWindowSize from \"../../../hooks/UseWindowSize\";\nimport UseWindowUrl from \"../../../hooks/UseWindowUrl\";\nimport {\n  performDeleteCaseStudy,\n  performGetCaseStudiesList,\n} from \"../../../redux/actionCreators/caseStudiesCreator\";\nimport { BACKEND_URL, FRONTEND_URL } from \"../../../services/constants\";\n\nconst ListCaseStudies = ({\n  fetching,\n  getList,\n  refresh,\n  history,\n  deleteCaseStudy,\n}) => {\n  const [data, setData] = useState([]);\n  const fetchData = async () => {\n    const result = await getList();\n    if (result.status === 200) {\n      setData(result?.data?.docs?.data);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const isMobile = useWindowSize();\n\n  const handleClick = (tag) => {\n    UseWindowUrl(tag);\n  };\n\n  const createRelativePath = (link) => {\n    const url = `${FRONTEND_URL}case-studies/${link\n      ?.toLowerCase()\n      ?.replace(/\\s+/g, \"-\")}`;\n    return url;\n  };\n\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const handleOnConfirm = async () => {\n    const result = await deleteCaseStudy(deletingUser.current?._id);\n    if (result) {\n      fetchData();\n    }\n  };\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body className={`${isMobile && \"p-0\"}`}>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() => history.push(`/post/CaseStudies/addCaseStudies`)}\n            >\n              Add CaseStudiess\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                width: 300,\n                title: \"CaseStudies Title\",\n                field: \"CaseStudiesTitle\",\n                customFilterAndSearch: (term, rowData) =>\n                  term === rowData.CaseStudiesTitle,\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      <>\n                        {rowData.CaseStudiesTitle\n                          ? rowData.CaseStudiesTitle\n                          : \"N/A\"}\n                      </>\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"CaseStudies Summary\",\n                field: \"CaseStudiesSummary\",\n                customFilterAndSearch: (term, rowData) =>\n                  term === rowData.CaseStudiesSummary,\n                render: (rowData) => (\n                  <div\n                    style={{\n                      width: \"300px\",\n                      height: \"300px\",\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      overflow: \"scroll\",\n                    }}\n                  >\n                    {rowData.CaseStudiesSummary\n                      ? rowData.CaseStudiesSummary\n                      : \"N/A\"}\n                  </div>\n                ),\n              },\n              {\n                width: 300,\n                title: \"CaseStudies Author\",\n                field: \"CaseStudiesAuthor\",\n                customFilterAndSearch: (term, rowData) =>\n                  term === rowData.CaseStudiesAuthor,\n                render: (rowData) => (\n                  <span\n                    style={{\n                      width: \"300px\",\n                    }}\n                  >\n                    {rowData.CaseStudiesAuthor\n                      ? rowData.CaseStudiesAuthor\n                      : \"N/A\"}\n                  </span>\n                ),\n              },\n              {\n                width: 300,\n                title: \"CaseStudies Image\",\n                field: \"CaseStudiesImage\",\n                render: (rowData) => (\n                  <>\n                    <Avatar\n                      src={BACKEND_URL + rowData?.CaseStudiesImage}\n                      name={rowData?.CaseStudiesTitle}\n                      size=\"70\"\n                      className=\"ff-primary rounded-circle me-3\"\n                    />\n                  </>\n                ),\n              },\n              {\n                title: \"CaseStudies File URL\",\n                field: \"CaseStudiesFile\",\n                width: 400,\n                render: (rowData) => (\n                  <>\n                    {rowData.CaseStudiesFile ? (\n                      <a\n                        href={BACKEND_URL + rowData?.CaseStudiesFile}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        {BACKEND_URL + rowData.CaseStudiesFile}\n                      </a>\n                    ) : (\n                      \"N/A\"\n                    )}\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"CaseStudies Tags\",\n                field: \"CaseStudiesTags\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.CaseStudiesTags?.split(\",\")?.map((tag) => (\n                        <div\n                          className=\"text-primary\"\n                          onClick={() => handleClick(tag)}\n                        >\n                          {tag}\n                        </div>\n                      ))}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"CaseStudies Category\",\n                field: \"CaseStudiesCategory\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.CaseStudiesCategory}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"CaseStudies Meta Title\",\n                field: \"metaTitle\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.metaTitle}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"CaseStudies Meta Description\",\n                field: \"metaDescription\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.metaDescription}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"CaseStudies Link\",\n                field: \"CaseStudiesLink\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData.CaseStudiesLink ? (\n                        <a\n                          href={`${FRONTEND_URL}case-studies/${rowData?.CaseStudiesLink?.toLowerCase()?.replace(\n                            /\\s+/g,\n                            \"-\"\n                          )}`}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          {createRelativePath(rowData?.CaseStudiesLink)}\n                        </a>\n                      ) : (\n                        \"N/A\"\n                      )}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"CaseStudies Athor Link\",\n                field: \"authorLink\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.authorLink}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                title: \"CaseStudies Description\",\n                field: \"CaseStudiesDescription\",\n                render: (rowData) => (\n                  <>\n                    <div\n                      style={{\n                        width: \"auto\",\n                        maxWidth: \"900px\",\n                        minWidth: \"400px\",\n                        height: \"300px\",\n                        overflow: \"scroll\",\n                      }}\n                    >\n                      <DisplayText\n                        htmlContent={rowData?.CaseStudiesDescription}\n                      />\n                    </div>\n                  </>\n                ),\n              },\n              {\n                width: 500,\n                title: \"Date\",\n                field: \"createdAt\",\n                render: (rowData) => (\n                  <span\n                    style={{\n                      width: \"500px\",\n                    }}\n                  >\n                    {rowData.createdAt\n                      ? moment(rowData.createdAt).format(\"DD,MM, YYYY\")\n                      : \"N/A\"}\n                  </span>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Status\",\n                field: \"status\",\n                filtering: false,\n                render: (rowData) => {\n                  let statusColor = \"success\";\n                  let statusText = \"Published\";\n                  if (rowData.status === false) {\n                    statusColor = \"warning\";\n                    statusText = \"Draft\";\n                  }\n                  return (\n                    <span className={`text-${statusColor}`}>{statusText}</span>\n                  );\n                },\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/post/CaseStudies/${props.data.CaseStudiesLink}/edit`,\n                          {\n                            data: props.data,\n                          }\n                        ),\n                    },\n                    // {\n                    //   label: (\n                    //     <span className=\"d-flex align-items-center text-danger\">\n                    //       <MdDelete size={20} className=\"me-2\" /> Delete\n                    //     </span>\n                    //   ),\n                    //   onClick: () => {\n                    //     setShowCDialog(true);\n                    //     deletingUser.current = props.data;\n                    //   },\n                    // },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            onRowClick={(_, rowData) => null}\n            loading={fetching}\n            data={data}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            refresh={refresh}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete CaseStudy\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.CaseStudiesTitle}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.caseStudies.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getList: (payload) => dispatch(performGetCaseStudiesList(payload)),\n  deleteCaseStudy: (payload) => dispatch(performDeleteCaseStudy(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListCaseStudies);\n","import moment from \"moment\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Avatar from \"react-avatar\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport ConfirmDialog from \"../../../components/ConfirmDialog\";\nimport DataTable from \"../../../components/DataTable\";\nimport DisplayText from \"../../../components/DisplayText\";\nimport DropdownMenu from \"../../../components/DropdownMenu\";\nimport IconButton from \"../../../components/IconButton\";\nimport useWindowSize from \"../../../hooks/UseWindowSize\";\nimport UseWindowUrl from \"../../../hooks/UseWindowUrl\";\nimport {\n  performDeleteWhitepaper,\n  performGetWhitepaperList,\n} from \"../../../redux/actionCreators/whitepaperCreators\";\nimport { BACKEND_URL, FRONTEND_URL } from \"../../../services/constants\";\n\nconst ListWhitepaper = ({\n  fetching,\n  getList,\n  filters,\n  setFilters,\n  resetFilters,\n  refresh,\n  deleteWhitepaper,\n  history,\n}) => {\n  const [data, setData] = useState([]);\n  const fetchData = async () => {\n    const result = await getList();\n    if (result.status === 200) {\n      setData(result?.data?.docs?.data);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const isMobile = useWindowSize();\n\n  const handleClick = (tag) => {\n    UseWindowUrl(tag);\n  };\n\n  const createRelativePath = (link) => {\n    const url = `${FRONTEND_URL}whitepapers/${link\n      ?.toLowerCase()\n      ?.replace(/\\s+/g, \"-\")}`;\n    return url;\n  };\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const handleOnConfirm = async () => {\n    const result = await deleteWhitepaper(deletingUser.current?._id);\n    if (result) {\n      fetchData();\n    }\n  };\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body className={`${isMobile && \"p-0\"}`}>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() => history.push(`/post/whitepapers/addwhitepaper`)}\n            >\n              Add Whitepaper\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                width: 300,\n                title: \"whitepaper Title\",\n                field: \"whitepaperTitle\",\n                customFilterAndSearch: (term, rowData) =>\n                  term === rowData.whitepaperTitle,\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      <>\n                        {rowData.whitepaperTitle\n                          ? rowData.whitepaperTitle\n                          : \"N/A\"}\n                      </>\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"whitepaper Summary\",\n                field: \"whitepaperSummary\",\n                customFilterAndSearch: (term, rowData) =>\n                  term === rowData.whitepaperSummary,\n                render: (rowData) => (\n                  <div\n                    style={{\n                      width: \"300px\",\n                      height: \"300px\",\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      overflow: \"scroll\",\n                    }}\n                  >\n                    {rowData.whitepaperSummary\n                      ? rowData.whitepaperSummary\n                      : \"N/A\"}\n                  </div>\n                ),\n              },\n              {\n                width: 300,\n                title: \"whitepaper Author\",\n                field: \"whitepaperAuthor\",\n                customFilterAndSearch: (term, rowData) =>\n                  term === rowData.whitepaperAuthor,\n                render: (rowData) => (\n                  <span\n                    style={{\n                      width: \"300px\",\n                    }}\n                  >\n                    {rowData.whitepaperAuthor\n                      ? rowData.whitepaperAuthor\n                      : \"N/A\"}\n                  </span>\n                ),\n              },\n              {\n                width: 300,\n                title: \"whitepaper Image\",\n                field: \"whitepaperImage\",\n                render: (rowData) => (\n                  <>\n                    <Avatar\n                      src={BACKEND_URL + rowData?.whitepaperImage}\n                      name={rowData?.whitepaperTitle}\n                      size=\"70\"\n                      className=\"ff-primary rounded-circle me-3\"\n                    />\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Whitepaper Meta Title\",\n                field: \"metaTitle\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.metaTitle}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Whitepaper Meta Description\",\n                field: \"metaDescription\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.metaDescription}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Whitepaper Athor Link\",\n                field: \"authorLink\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.authorLink}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"whitepaper Tags\",\n                field: \"whitepaperTags\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.whitepaperTags?.split(\",\")?.map((tag) => (\n                        <div\n                          className=\"text-primary\"\n                          onClick={() => handleClick(tag)}\n                        >\n                          {tag}\n                        </div>\n                      ))}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"whitepaper Category\",\n                field: \"whitepaperCategory\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.whitepaperCategory}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                title: \"whitepaper File URL\",\n                field: \"whitepaperFile\",\n                width: 400,\n                render: (rowData) => (\n                  <>\n                    {rowData.whitepaperFile ? (\n                      <a\n                        href={BACKEND_URL + rowData?.whitepaperFile}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        {BACKEND_URL + rowData.whitepaperFile}\n                      </a>\n                    ) : (\n                      \"N/A\"\n                    )}\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"whitepaper link\",\n                field: \"whitepaperLink\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData.whitepaperLink ? (\n                        <a\n                          href={`${FRONTEND_URL}whitepapers/${rowData?.whitepaperLink\n                            ?.toLowerCase()\n                            ?.replace(/\\s+/g, \"-\")}`}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          {createRelativePath(rowData?.whitepaperLink)}\n                        </a>\n                      ) : (\n                        \"N/A\"\n                      )}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                title: \"whitepaper Description\",\n                field: \"whitepaperDescription\",\n                render: (rowData) => (\n                  <>\n                    <div\n                      style={{\n                        width: \"auto\",\n                        maxWidth: \"900px\",\n                        minWidth: \"400px\",\n                        height: \"300px\",\n                        overflow: \"scroll\",\n                      }}\n                    >\n                      <DisplayText\n                        htmlContent={rowData?.whitepaperDescription}\n                      />\n                    </div>\n                  </>\n                ),\n              },\n              {\n                width: 500,\n                title: \"Date\",\n                field: \"createdAt\",\n                render: (rowData) => (\n                  <span\n                    style={{\n                      width: \"500px\",\n                    }}\n                  >\n                    {rowData.createdAt\n                      ? moment(rowData.createdAt).format(\"DD,MM, YYYY\")\n                      : \"N/A\"}\n                  </span>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Status\",\n                field: \"status\",\n                filtering: false,\n                render: (rowData) => {\n                  let statusColor = \"success\";\n                  let statusText = \"Published\";\n                  if (rowData.status === false) {\n                    statusColor = \"warning\";\n                    statusText = \"Draft\";\n                  }\n                  return (\n                    <span className={`text-${statusColor}`}>{statusText}</span>\n                  );\n                },\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/post/whitepapers/${props.data.whitepaperLink}/edit`,\n                          {\n                            data: props.data,\n                          }\n                        ),\n                    },\n                    // {\n                    //   label: (\n                    //     <span className=\"d-flex align-items-center text-danger\">\n                    //       <MdDelete size={20} className=\"me-2\" /> Delete\n                    //     </span>\n                    //   ),\n                    //   onClick: () => {\n                    //     setShowCDialog(true);\n                    //     deletingUser.current = props.data;\n                    //   },\n                    // },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            onRowClick={(_, rowData) => null}\n            loading={fetching}\n            data={data}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            refresh={refresh}\n            filterOptions={filters}\n            setFilters={(data) => setFilters(data)}\n            resetFilters={resetFilters}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Newsletter\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.whitepaperTitle}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.whitepaper.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getList: (payload) => dispatch(performGetWhitepaperList(payload)),\n  deleteWhitepaper: (payload) => dispatch(performDeleteWhitepaper(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListWhitepaper);\n","import moment from \"moment\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Avatar from \"react-avatar\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport ConfirmDialog from \"../../../components/ConfirmDialog\";\nimport DataTable from \"../../../components/DataTable\";\nimport DisplayText from \"../../../components/DisplayText\";\nimport DropdownMenu from \"../../../components/DropdownMenu\";\nimport IconButton from \"../../../components/IconButton\";\nimport useWindowSize from \"../../../hooks/UseWindowSize\";\nimport UseWindowUrl from \"../../../hooks/UseWindowUrl\";\nimport {\n  performDeleteNewsletter,\n  performGetNewsletterList,\n} from \"../../../redux/actionCreators/newsletterCrestors\";\nimport { BACKEND_URL, FRONTEND_URL } from \"../../../services/constants\";\n\nconst ListNewsletter = ({\n  fetching,\n  getList,\n  refresh,\n  history,\n  deleteNewsletter,\n}) => {\n  const [data, setData] = useState([]);\n  const fetchData = async () => {\n    const result = await getList();\n    if (result.status === 200) {\n      setData(result?.data?.docs?.data);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const isMobile = useWindowSize();\n  const handleClick = (tag) => {\n    UseWindowUrl(tag);\n  };\n  const createRelativePath = (link) => {\n    const url = `${FRONTEND_URL}newsletter/${link\n      ?.toLowerCase()\n      ?.replace(/\\s+/g, \"-\")}`;\n    return url;\n  };\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const handleOnConfirm = async () => {\n    const result = await deleteNewsletter(deletingUser.current?._id);\n    if (result) {\n      fetchData();\n    }\n  };\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body className={`${isMobile && \"p-0\"}`}>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() => history.push(`/post/Newsletter/AddNewsletter`)}\n            >\n              Add ListNewsletter\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                width: 300,\n                title: \"Newsletter Title\",\n                field: \"NewsletterTitle\",\n                customFilterAndSearch: (term, rowData) =>\n                  term === rowData.NewsletterTitle,\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      <>\n                        {rowData.NewsletterTitle\n                          ? rowData.NewsletterTitle\n                          : \"N/A\"}\n                      </>\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Newsletter Summary\",\n                field: \"NewsletterSummary\",\n                customFilterAndSearch: (term, rowData) =>\n                  term === rowData.NewsletterSummary,\n                render: (rowData) => (\n                  <div\n                    style={{\n                      width: \"300px\",\n                      height: \"300px\",\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      overflow: \"scroll\",\n                    }}\n                  >\n                    {rowData.NewsletterSummary\n                      ? rowData.NewsletterSummary\n                      : \"N/A\"}\n                  </div>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Newsletter Author\",\n                field: \"NewsletterAuthor\",\n                customFilterAndSearch: (term, rowData) =>\n                  term === rowData.NewsletterAuthor,\n                render: (rowData) => (\n                  <span\n                    style={{\n                      width: \"300px\",\n                    }}\n                  >\n                    {rowData.NewsletterAuthor\n                      ? rowData.NewsletterAuthor\n                      : \"N/A\"}\n                  </span>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Newsletter Image\",\n                field: \"NewsletterImage\",\n                render: (rowData) => (\n                  <>\n                    <Avatar\n                      src={BACKEND_URL + rowData?.NewsletterImage}\n                      name={rowData?.NewsletterTitle}\n                      size=\"70\"\n                      className=\"ff-primary rounded-circle me-3\"\n                    />\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Newsletter Tags\",\n                field: \"NewsletterTags\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.NewsletterTags?.split(\",\")?.map((tag) => (\n                        <div\n                          className=\"text-primary\"\n                          onClick={() => handleClick(tag)}\n                        >\n                          {tag}\n                        </div>\n                      ))}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Newsletter Category\",\n                field: \"NewsletterCategory\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.NewsletterCategory}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Newsletter link\",\n                field: \"NewsletterLink\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData.NewsletterLink ? (\n                        <a\n                          href={`${FRONTEND_URL}newsletter/${rowData?.NewsletterLink?.toLowerCase()?.replace(\n                            /\\s+/g,\n                            \"-\"\n                          )}`}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          {createRelativePath(rowData?.NewsletterLink)}\n                        </a>\n                      ) : (\n                        \"N/A\"\n                      )}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Newsletter Meta Title\",\n                field: \"metaTitle\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.metaTitle}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Newsletter Meta Description\",\n                field: \"metaDescription\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.metaDescription}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                title: \"Newsletter File URL\",\n                field: \"NewsletterFile\",\n                width: 400,\n                render: (rowData) => (\n                  <>\n                    {rowData.NewsletterFile ? (\n                      <a\n                        href={BACKEND_URL + rowData?.NewsletterFile}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        {BACKEND_URL + rowData.NewsletterFile}\n                      </a>\n                    ) : (\n                      \"N/A\"\n                    )}\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Newsletter Athor Link\",\n                field: \"authorLink\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.authorLink}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                title: \"Newsletter Description\",\n                field: \"NewsletterDescription\",\n                render: (rowData) => (\n                  <>\n                    <div\n                      style={{\n                        width: \"auto\",\n                        maxWidth: \"900px\",\n                        minWidth: \"400px\",\n                        height: \"300px\",\n                        overflow: \"scroll\",\n                      }}\n                    >\n                      <DisplayText\n                        htmlContent={rowData?.NewsletterDescription}\n                      />\n                    </div>\n                  </>\n                ),\n              },\n              {\n                width: 500,\n                title: \"Date\",\n                field: \"createdAt\",\n                render: (rowData) => (\n                  <span\n                    style={{\n                      width: \"500px\",\n                    }}\n                  >\n                    {rowData.createdAt\n                      ? moment(rowData.createdAt).format(\"DD,MM, YYYY\")\n                      : \"N/A\"}\n                  </span>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Status\",\n                field: \"status\",\n                filtering: false,\n                render: (rowData) => {\n                  let statusColor = \"success\";\n                  let statusText = \"Published\";\n                  if (rowData.status === false) {\n                    statusColor = \"warning\";\n                    statusText = \"Draft\";\n                  }\n                  return (\n                    <span className={`text-${statusColor}`}>{statusText}</span>\n                  );\n                },\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `/post/newsletter/${props.data.NewsletterLink}/edit`,\n                          {\n                            data: props.data,\n                          }\n                        ),\n                    },\n                    // {\n                    //   label: (\n                    //     <span className=\"d-flex align-items-center text-danger\">\n                    //       <MdDelete size={20} className=\"me-2\" /> Delete\n                    //     </span>\n                    //   ),\n                    //   onClick: () => {\n                    //     setShowCDialog(true);\n                    //     deletingUser.current = props.data;\n                    //   },\n                    // },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            onRowClick={(_, rowData) => null}\n            loading={fetching}\n            data={data}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            refresh={refresh}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Newsletter\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.NewsletterTitle}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.newsletter.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getList: (payload) => dispatch(performGetNewsletterList(payload)),\n  deleteNewsletter: (payload) => dispatch(performDeleteNewsletter(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListNewsletter);\n"],"sourceRoot":""}