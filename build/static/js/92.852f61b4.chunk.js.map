{"version":3,"sources":["partials/Event/ListEvent.js","containers/Events/index.js","components/IconButton/index.js","components/Form/Input.js","components/DataTable/index.js","components/DisplayText/index.js","components/ConfirmDialog/index.js","hooks/UseWindowUrl.js","redux/actions/eventConferenceActions.js","redux/actionCreators/eventConferenceCreators.js","redux/actions/webinarConferenceActions.js","redux/actionCreators/webinarConferenceCreators.js","partials/Event/eventConference/ListEventConference.js","partials/Event/webinarConference/ListWebinarConference.js"],"names":["connect","state","refresh","setRefresh","history","useState","key","setKey","className","slice","toLocaleUpperCase","Card","Body","Tabs","id","activeKey","onSelect","k","Tab","eventKey","title","size","ListEventConference","uuidv4","ListWebinarConference","Event","useHistory","path","useRouteMatch","Page","children","Icon","icon","extraProps","type","props","IconButton","variant","onClick","isLoading","disabled","defaultProps","Input","React","forwardRef","ref","onChange","onBlur","label","error","isClearable","hint","rest","reset","setReset","inputType","setInputType","placeholder","step","temp","defaultValue","value","restProps","htmlFor","target","style","fontSize","color","tableIcons","FirstPage","LastPage","NextPage","PreviousPage","SortArrow","DataTable","loading","columns","actions","components","onRowClick","options","selectedRow","getList","downloadcsv","search","downloadExcel","filters","data","filterOptions","resetFilters","setFilters","resetBtn","tableRef","createRef","openFilters","setOpenFilters","tableProps","icons","boxShadow","localization","toolbar","searchTooltip","searchPlaceholder","showTitle","filtering","draggable","actionsColumnIndex","pageSize","emptyRowsWhenPaging","pageSizeOptions","query","Promise","resolve","reject","getDataTableQueryParams","result","undefined","docs","page","totalCount","totalDocs","rowStyle","rowData","backgroundColor","handleReset","useEffect","exportType","exportFromJSON","types","csv","newData","map","transformedData","Object","values","reduce","acc","obj","transformedObject","_id","Link","fileName","xls","DisplayText","htmlContent","preview","handlePreview","contentRef","useRef","sanitizedHTML","DOMPurify","sanitize","current","innerHTML","querySelectorAll","forEach","preTag","html","textContent","DOMParser","parseFromString","body","divTag","document","createElement","parentNode","replaceChild","whiteSpace","wordBreak","border","borderRadius","ConfirmDialog","show","setShow","message","onConfirm","getReason","bodyHtml","loadingBtnText","footer","submitting","setSubmitting","reason","setReason","handleClose","handleOnConfirm","a","onHide","backdrop","keyboard","Header","closeButton","Title","dangerouslySetInnerHTML","__html","name","e","Footer","animation","length","UseWindowUrl","tag","googleSearchUrl","encodeURIComponent","window","open","getEventConferenceListBegin","EVENT_CONFERENCE_TYPES","GET_EVENT_CONFERENCE_LIST_BEGIN","getEventConferenceListSuccess","GET_EVENT_CONFERENCE_LIST_SUCCESS","payload","getEventConferenceListFailure","GET_EVENT_CONFERENCE_LIST_FAILURE","postEventConferenceSuccess","POST_EVENT_CONFERENCE_SUCCESS","postEventConferenceImageSuccess","POST_IMAGE_EVENT_CONFERENCE_SUCCESS","updateEventConferenceBegin","UPDATE_EVENT_CONFERENCE_BEGIN","updateEventConferenceSuccess","UPDATE_EVENT_CONFERENCE_SUCCESS","updateEventConferenceFailure","UPDATE_EVENT_CONFERENCE_FAILURE","performGetEventConferenceList","dispatch","resetSnack","axios","get","BASE_URL","showSnack","performImagePostEventConference","POST_IMAGE_EVENT_CONFERENCE_BEGIN","post","postEventConferenceImageFailure","POST_IMAGE_EVENT_CONFERENCE_FAILURE","performPostEventConference","POST_EVENT_CONFERENCE_BEGIN","postEventConferenceFailure","POST_EVENT_CONFERENCE_FAILURE","performUpdateEventConference","put","performDeleteEventConference","delete","getWebinarConferenceListBegin","WEBINAR_CONFERENCE_TYPES","GET_WEBINAR_CONFERENCE_LIST_BEGIN","getWebinarConferenceListSuccess","GET_WEBINAR_CONFERENCE_LIST_SUCCESS","getWebinarConferenceListFailure","GET_WEBINAR_CONFERENCE_LIST_FAILURE","postWebinarConferenceSuccess","POST_WEBINAR_CONFERENCE_SUCCESS","postWebinarConferenceImageSuccess","POST_IMAGE_WEBINAR_CONFERENCE_SUCCESS","updateWebinarConferenceBegin","UPDATE_WEBINAR_CONFERENCE_BEGIN","updateWebinarConferenceSuccess","UPDATE_WEBINAR_CONFERENCE_SUCCESS","updateWebinarConferenceFailure","UPDATE_WEBINAR_CONFERENCE_FAILURE","performGetWebinarConferenceList","performImagePostWebinarConference","POST_IMAGE_WEBINAR_CONFERENCE_BEGIN","postWebinarConferenceImageFailure","POST_IMAGE_WEBINAR_CONFERENCE_FAILURE","performPostWebinarConference","POST_WEBINAR_CONFERENCE_BEGIN","postWebinarConferenceFailure","POST_WEBINAR_CONFERENCE_FAILURE","performUpdateWebinarConference","performDeleteWebinarConference","fetching","eventConference","deleteEventConference","setData","showCDialog","setShowCDialog","deletingUser","fetchData","status","isMobile","useWindowSize","createRelativePath","link","FRONTEND_URL","toLowerCase","replace","MdAdd","push","width","field","customFilterAndSearch","term","eventConferenceTitle","render","eventConferenceLink","href","rel","src","BACKEND_URL","eventConferenceImage","eventConferenceTags","split","index","handleClick","metaTitle","metaDescription","maxWidth","minWidth","height","overflow","eventConferenceDescription","createdAt","moment","format","statusColor","statusText","_","console","log","Action","menu","iconSize","webinarConference","deleteAnnouncement","webinarConferenceTitle","webinarConferenceLink","webinarConferenceImage","webinarConferenceTags","webinarConferenceDescription"],"mappings":"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","file":"static/js/92.852f61b4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Tab, Tabs } from \"react-bootstrap\";\nimport { FaPeopleGroup } from \"react-icons/fa6\";\nimport { MdEventAvailable } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ListEventConference from \"./eventConference/ListEventConference\";\nimport ListWebinarConference from \"./webinarConference/ListWebinarConference\";\n\nconst ListEvent = ({ refresh, setRefresh, history }) => {\n  const [key, setKey] = useState(\"conference\");\n  return (\n    <>\n      <div className=\"d-flex align-items-start mb-3\">\n        <h3 className=\"m-0\">\n          {key?.slice(0, 1)?.toLocaleUpperCase() + key?.slice(1)} - Events\n        </h3>\n      </div>\n      <Card>\n        <Card.Body>\n          <Tabs\n            id=\"controlled-tab-example\"\n            activeKey={key}\n            onSelect={(k) => setKey(k)}\n            className=\"mb-3\"\n          >\n            <Tab\n              eventKey=\"conference\"\n              title={\n                <span className=\"title_user d-flex align-items-center gap-2\">\n                  Conference Events <MdEventAvailable size={24} />\n                </span>\n              }\n            >\n              <ListEventConference\n                refresh={refresh}\n                setRefresh={() => setRefresh(uuidv4())}\n                history={history}\n              />\n            </Tab>\n            <Tab\n              eventKey=\"Hosting Webinar\"\n              title={\n                <span className=\"title_user d-flex align-items-center gap-2\">\n                 Hosting Webinar Events <FaPeopleGroup size={20} />\n                </span>\n              }\n            >\n              <ListWebinarConference\n                refresh={refresh}\n                setRefresh={() => setRefresh(uuidv4())}\n                history={history}\n              />\n            </Tab>\n          </Tabs>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListEvent);\n","import React, { useState } from \"react\";\nimport { Route, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Page from \"../../components/Page\";\nimport ListEvent from \"../../partials/Event/ListEvent\";\n\nconst Event = () => {\n  const history = useHistory();\n  const { path } = useRouteMatch();\n  const [refresh, setRefresh] = useState(\"\");\n\n  return (\n    <Page id=\"page--event\" title=\"Events\">\n      <Route\n        path={`${path}/`}\n        children={\n          <ListEvent\n            refresh={refresh}\n            setRefresh={() => setRefresh(uuidv4())}\n            history={history}\n          />\n        }\n      />\n    </Page>\n  );\n};\n\nexport default Event;\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Icon = (icon, size = \"\") => {\r\n  const extraProps = {\r\n    size: 22\r\n  };\r\n  if (size === 'lg') {\r\n    extraProps.size = 32;\r\n  } else if (size === 'sm') {\r\n    extraProps.size = 18;\r\n  }\r\n  return <icon.type {...icon.props} {...extraProps} />\r\n}\r\n\r\nconst IconButton = ({ variant, className, onClick, size, isLoading, disabled, children, icon }) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      className={`btn-icon ${size ? `btn-icon-${size}` : ''} ${isLoading ? `btn-icon-loading` : ''} ${className}`}\r\n      onClick={onClick}\r\n      size={size}\r\n      disabled={isLoading || disabled}\r\n    >\r\n      <span>{Icon(icon, size)}{children && <span>{children}</span>}</span>\r\n    </Button>\r\n  )\r\n}\r\n\r\nIconButton.propTypes = {\r\n  children: PropTypes.node,\r\n  variant: PropTypes.string,\r\n  className: PropTypes.string,\r\n  size: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  isLoading: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  icon: PropTypes.any,\r\n};\r\n\r\nIconButton.defaultProps = {\r\n  variant: \"default\",\r\n  className: \"\",\r\n  size: \"\",\r\n  onClick: () => null,\r\n  isLoading: false,\r\n  disabled: false,\r\n  icon: null\r\n}\r\n\r\nexport default IconButton;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { MdCancel } from \"react-icons/md\";\r\nimport { AiOutlineEyeInvisible, AiOutlineEye } from \"react-icons/ai\";\r\n\r\nimport IconButton from \"../IconButton\";\r\n\r\nconst Input = React.forwardRef(\r\n  (\r\n    {\r\n      className,\r\n      onChange,\r\n      onBlur,\r\n      label,\r\n      id,\r\n      error,\r\n      isClearable,\r\n      hint,\r\n      type,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const [reset, setReset] = useState(uuidv4());\r\n    const [inputType, setInputType] = useState(type);\r\n\r\n    const onClear = () => {\r\n      onChange({ target: { value: \"\" } });\r\n      setReset(uuidv4());\r\n    };\r\n\r\n    const restProps = () => {\r\n      const temp = { ...rest };\r\n      temp.defaultValue = temp.value || \"\";\r\n      delete temp.value;\r\n      return temp;\r\n    };\r\n\r\n    return (\r\n      <span\r\n        className={`d-inline-block w-100 position-relative pt-2 pb-4 input__wrapper ${\r\n          error ? \"error\" : \"\"\r\n        }`}\r\n        ref={ref}\r\n      >\r\n        <input\r\n          key={`input-${reset}`}\r\n          id={`input-${id}`}\r\n          type={inputType}\r\n          className={`${className}${isClearable ? \" input-clearable\" : \"\"}`}\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          placeholder={label}\r\n          step=\"any\"\r\n          {...restProps()}\r\n        />\r\n        <label htmlFor={`input-${id}`}>{label}</label>\r\n        <span className=\"input-error\">{error}</span>\r\n        {isClearable && (\r\n          <MdCancel className=\"input-clear-btn\" size={18} onClick={onClear} />\r\n        )}\r\n        {type === \"password\" && (\r\n          <IconButton\r\n            icon={\r\n              inputType === \"password\" ? (\r\n                <AiOutlineEyeInvisible />\r\n              ) : (\r\n                <AiOutlineEye />\r\n              )\r\n            }\r\n            variant=\"outline-link\"\r\n            onClick={() =>\r\n              setInputType(inputType === \"password\" ? \"text\" : \"password\")\r\n            }\r\n            className=\"p-0 m-0 position-absolute btn--show-password\"\r\n          />\r\n        )}\r\n        {hint !== \"\" && (\r\n          <span style={{ fontSize: \"12px\", color: \"#c1b1b1\" }}>{hint}</span>\r\n        )}\r\n      </span>\r\n    );\r\n  }\r\n);\r\n\r\nInput.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  label: PropTypes.string,\r\n  id: PropTypes.string,\r\n  error: PropTypes.string,\r\n  isClearable: PropTypes.bool,\r\n  type: PropTypes.string,\r\n  hint: PropTypes.string,\r\n};\r\n\r\nInput.defaultProps = {\r\n  className: \"\",\r\n  onChange: () => null,\r\n  onBlur: () => null,\r\n  label: \"\",\r\n  id: uuidv4(),\r\n  error: \"\",\r\n  isClearable: false,\r\n  type: \"text\",\r\n  hint: \"\",\r\n};\r\n\r\nexport default Input;\r\n","import MaterialTable from \"@material-table/core\";\r\nimport exportFromJSON from \"export-from-json\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { createRef, forwardRef, useEffect, useState } from \"react\";\r\nimport {\r\n  MdArrowUpward,\r\n  MdChevronLeft,\r\n  MdChevronRight,\r\n  MdDownload,\r\n  MdFilterAlt,\r\n  MdFirstPage,\r\n  MdLastPage,\r\n  MdRefresh,\r\n} from \"react-icons/md\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { getDataTableQueryParams } from \"../../utils/index\";\r\nimport IconButton from \"../IconButton\";\r\n\r\nconst tableIcons = {\r\n  FirstPage: forwardRef((props, ref) => <MdFirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <MdLastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <MdChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <MdChevronLeft {...props} ref={ref} />\r\n  )),\r\n  SortArrow: forwardRef((props, ref) => <MdArrowUpward {...props} ref={ref} />),\r\n};\r\n\r\nconst DataTable = ({\r\n  loading,\r\n  columns,\r\n  actions,\r\n  components,\r\n  onRowClick,\r\n  options,\r\n  selectedRow,\r\n  getList,\r\n  search,\r\n  downloadcsv,\r\n  downloadExcel,\r\n  filters,\r\n  filterOptions,\r\n  data,\r\n  setFilters,\r\n  resetFilters,\r\n  refresh,\r\n  resetBtn,\r\n}) => {\r\n  const tableRef = createRef();\r\n  const [reset, setReset] = useState(uuidv4());\r\n  const [openFilters, setOpenFilters] = useState(false);\r\n  const tableProps = {\r\n    isLoading: loading,\r\n    icons: tableIcons,\r\n    style: {\r\n      boxShadow: \"none\",\r\n    },\r\n    localization: {\r\n      toolbar: {\r\n        searchTooltip: \"Search\",\r\n        searchPlaceholder: \"Search\",\r\n      },\r\n    },\r\n    options: {\r\n      showTitle: false,\r\n      search: true,\r\n      toolbar: true,\r\n      filtering: openFilters,\r\n      draggable: false,\r\n      actionsColumnIndex: -1,\r\n      pageSize: 10,\r\n      emptyRowsWhenPaging: false, // To avoid of having empty rows\r\n      pageSizeOptions: [10, 30, 50, 100, 500],\r\n      ...options,\r\n    },\r\n    columns: columns,\r\n    data: data\r\n      ? data\r\n      : (query) =>\r\n          new Promise(async (resolve, reject) => {\r\n            try {\r\n              let result = await getList(getDataTableQueryParams(query));\r\n              if (!result.data) {\r\n                return reject();\r\n              }\r\n              return resolve({\r\n                data:\r\n                  result.data.docs !== undefined\r\n                    ? result.data.docs\r\n                    : result.data,\r\n                page: result.data.page !== undefined ? result.data.page - 1 : 0,\r\n                totalCount:\r\n                  result.data.totalDocs !== undefined\r\n                    ? result.data.totalDocs\r\n                    : 0, // this is the total count of rows or documents\r\n              });\r\n            } catch (err) {\r\n              return reject(err);\r\n            }\r\n          }),\r\n    actions: actions,\r\n    onRowClick: onRowClick,\r\n  };\r\n\r\n  if (components) {\r\n    tableProps.components = components;\r\n  }\r\n\r\n  if (onRowClick) {\r\n    tableProps.options = {\r\n      ...tableProps.options,\r\n      rowStyle: (rowData) => ({\r\n        backgroundColor:\r\n          selectedRow && selectedRow === rowData.id ? \"#f5f5f5\" : \"#FFF\",\r\n      }),\r\n      onRowClick: onRowClick,\r\n    };\r\n  }\r\n\r\n  const handleDownloadCSV = () => {\r\n    const fileName = \"CSVformat\";\r\n    const exportType = exportFromJSON.types.csv;\r\n    const newData = data.map(({ data, ...rest }) => {\r\n      const transformedData = data\r\n        ? Object.values(data).reduce((acc, obj) => ({ ...acc, ...obj }), {})\r\n        : {};\r\n      const transformedObject = {\r\n        _id: rest._id,\r\n        Link: rest.Link,\r\n        ...transformedData,\r\n      };\r\n      return data ? transformedObject : rest;\r\n    });\r\n    exportFromJSON({ data: newData, fileName, exportType });\r\n  };\r\n\r\n  const handleDownloadXLS = () => {\r\n    const fileName = \"ExcelFormat\";\r\n    const exportType = exportFromJSON.types.xls;\r\n    const newData = data.map(({ data, ...rest }) => {\r\n      const transformedData = data\r\n        ? Object.values(data).reduce((acc, obj) => ({ ...acc, ...obj }), {})\r\n        : {};\r\n      const transformedObject = {\r\n        _id: rest._id,\r\n        Link: rest.Link,\r\n        ...transformedData,\r\n      };\r\n      return data ? transformedObject : rest;\r\n    });\r\n    exportFromJSON({ data: newData, fileName, exportType });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    if (onRowClick) {\r\n      onRowClick(null);\r\n    }\r\n    resetFilters();\r\n    setReset(uuidv4());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (refresh) {\r\n      handleReset();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [refresh]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 d-flex flex-lg-row flex-column position-relative table-toolbar\">\r\n        <span className=\"d-flex flex-wrap zindex-dropdown end-0 gap-2 gap-lg-3 align-items-center justify-content-end ms-auto\">\r\n          {filters && (\r\n            <IconButton\r\n              icon={<MdFilterAlt />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={() => setOpenFilters(!openFilters)}\r\n              disabled={loading}\r\n            >\r\n              Filters\r\n            </IconButton>\r\n          )}\r\n\r\n          {resetBtn && (\r\n            <IconButton\r\n              icon={<MdRefresh />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleReset}\r\n              disabled={loading}\r\n            >\r\n              Reset\r\n            </IconButton>\r\n          )}\r\n          {downloadcsv && (\r\n            <IconButton\r\n              icon={<MdDownload />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleDownloadCSV}\r\n              disabled={loading}\r\n            >\r\n              CSV\r\n            </IconButton>\r\n          )}\r\n          {downloadExcel && (\r\n            <IconButton\r\n              icon={<MdDownload />}\r\n              variant=\"outline-default\"\r\n              size=\"sm\"\r\n              onClick={handleDownloadXLS}\r\n              disabled={loading}\r\n            >\r\n              Excel\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      </div>\r\n\r\n      <MaterialTable\r\n        key={`data-table-${reset}`}\r\n        tableRef={tableRef}\r\n        {...tableProps}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nDataTable.propTypes = {\r\n  loading: PropTypes.bool,\r\n  columns: PropTypes.array.isRequired,\r\n  actions: PropTypes.array,\r\n  components: PropTypes.any,\r\n  onRowClick: PropTypes.any,\r\n  options: PropTypes.object,\r\n  selectedRow: PropTypes.string,\r\n  getList: PropTypes.func.isRequired,\r\n  search: PropTypes.bool,\r\n  filters: PropTypes.bool,\r\n  filterOptions: PropTypes.array,\r\n  setFilters: PropTypes.func,\r\n  resetFilters: PropTypes.func,\r\n  refresh: PropTypes.string,\r\n  resetBtn: PropTypes.bool,\r\n};\r\n\r\nDataTable.defaultProps = {\r\n  loading: false,\r\n  actions: [],\r\n  components: null,\r\n  onRowClick: null,\r\n  options: {},\r\n  selectedRow: null,\r\n  search: true,\r\n  filters: false,\r\n  filterOptions: [],\r\n  setFilters: () => null,\r\n  resetFilters: () => null,\r\n  refresh: null,\r\n  resetBtn: true,\r\n};\r\n\r\nexport default DataTable;\r\n","import DOMPurify from \"dompurify\";\nimport React, { useEffect, useRef } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { RxCross2 } from \"react-icons/rx\";\n\nconst DisplayText = ({ htmlContent, preview, handlePreview }) => {\n  const contentRef = useRef(null);\n  const convertHtmlToPlainText = (html) => {\n    const doc = new DOMParser().parseFromString(html, \"text/html\");\n    return doc.body.textContent || \"\";\n  };\n  useEffect(() => {\n    const sanitizedHTML = DOMPurify.sanitize(htmlContent);\n    contentRef.current.innerHTML = sanitizedHTML;\n    const preTags = contentRef.current.querySelectorAll(\"pre\");\n    preTags.forEach((preTag) => {\n      const textContent = convertHtmlToPlainText(preTag.innerHTML);\n      preTag.innerHTML = textContent;\n      const divTag = document.createElement(\"div\");\n      divTag.innerHTML = preTag.innerHTML;\n      preTag.parentNode.replaceChild(divTag, preTag);\n    });\n  }, [htmlContent]);\n\n  return (\n    <div className=\"position-relative\">\n      {preview && (\n        <div className=\"w-100 d-flex justify-content-end mb-2\">\n          <Button variant=\"primary\" onClick={() => handlePreview()}>\n            <RxCross2 />\n          </Button>\n        </div>\n      )}\n      <div\n        ref={contentRef}\n        style={{\n          whiteSpace: \"pre-wrap\",\n          wordBreak: \"break-word\",\n          border: \"1px solid grey\",\n          borderRadius: \"8px\",\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default DisplayText;\n","import React, { useState } from 'react';\r\nimport { Modal, Button, Spinner } from 'react-bootstrap';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Input from '../Form/Input';\r\n\r\nconst ConfirmDialog = ({ show, setShow, title, message, onConfirm, getReason, bodyHtml, loadingBtnText, footer }) => {\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [reason, setReason] = useState('');\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const handleOnConfirm = async () => {\r\n    setSubmitting(true);\r\n    await onConfirm(reason);\r\n    setSubmitting(false);\r\n    setShow(false);\r\n    setReason('');\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div dangerouslySetInnerHTML={{ __html: message }}></div>\r\n        {bodyHtml}\r\n        {getReason && (\r\n          <div>\r\n            <Input id=\"reason\" name=\"reason\" label=\"Reason\" value={reason} onChange={(e) => setReason(e.target.value)} />\r\n          </div>\r\n        )}\r\n      </Modal.Body>\r\n      {footer && (\r\n        <Modal.Footer>\r\n          <Button variant=\"default\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          {!getReason && (\r\n            <Button variant=\"danger\" onClick={handleOnConfirm}>\r\n              {!submitting && <span>Confirm</span>}\r\n              {submitting && (\r\n                <span>\r\n                  {loadingBtnText} <Spinner size=\"sm\" animation=\"border\" />\r\n                </span>\r\n              )}\r\n            </Button>\r\n          )}\r\n          {getReason && (\r\n            <Button disabled={reason === '' || reason.length <= 3} variant=\"danger\" onClick={handleOnConfirm}>\r\n              {!submitting && <span>Confirm</span>}\r\n              {submitting && (\r\n                <span>\r\n                  {loadingBtnText} <Spinner size=\"sm\" animation=\"border\" />\r\n                </span>\r\n              )}\r\n            </Button>\r\n          )}\r\n        </Modal.Footer>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nConfirmDialog.propTypes = {\r\n  show: PropTypes.bool,\r\n  setShow: PropTypes.func,\r\n  title: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onConfirm: PropTypes.func,\r\n  getReason: PropTypes.bool,\r\n  bodyHtml: PropTypes.node,\r\n  loadingBtnText: PropTypes.string,\r\n  footer: PropTypes.bool,\r\n};\r\n\r\nConfirmDialog.defaultProps = {\r\n  show: false,\r\n  setShow: () => null,\r\n  title: 'Give a title',\r\n  message: 'Your message here',\r\n  onConfirm: () => null,\r\n  getReason: false,\r\n  bodyHtml: <></>,\r\n  loadingBtnText: 'Deleting',\r\n  footer: true,\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","const UseWindowUrl = (tag) => {\r\n    const googleSearchUrl = `https://www.google.com/search?q=${encodeURIComponent(\r\n      tag\r\n    )}`;\r\n    window.open(googleSearchUrl, \"_blank\");\r\n  };\r\n  \r\n  export default UseWindowUrl;\r\n  ","import EVENT_CONFERENCE_TYPES from \"../types/eventConferenceTypes\";\n\nexport const resetState = () => ({\n  type: EVENT_CONFERENCE_TYPES.RESET_STATE,\n});\n\nexport const getEventConferenceListBegin = () => ({\n  type: EVENT_CONFERENCE_TYPES.GET_EVENT_CONFERENCE_LIST_BEGIN,\n});\n\nexport const getEventConferenceListSuccess = (data) => ({\n  type: EVENT_CONFERENCE_TYPES.GET_EVENT_CONFERENCE_LIST_SUCCESS,\n  payload: data,\n});\n\nexport const getEventConferenceListFailure = (error) => ({\n  type: EVENT_CONFERENCE_TYPES.GET_EVENT_CONFERENCE_LIST_FAILURE,\n  payload: error,\n});\n\nexport const postEventConferenceBegin = () => ({\n  type: EVENT_CONFERENCE_TYPES.POST_EVENT_CONFERENCE_BEGIN,\n});\n\nexport const postEventConferenceSuccess = (data) => ({\n  type: EVENT_CONFERENCE_TYPES.POST_EVENT_CONFERENCE_SUCCESS,\n  payload: data,\n});\n\nexport const postEventConferenceFailure = (error) => ({\n  type: EVENT_CONFERENCE_TYPES.POST_EVENT_CONFERENCE_FAILURE,\n  payload: error,\n});\n\nexport const postEventConferenceImageBegin = () => ({\n  type: EVENT_CONFERENCE_TYPES.POST_IMAGE_EVENT_CONFERENCE_BEGIN,\n});\n\nexport const postEventConferenceImageSuccess = (data) => ({\n  type: EVENT_CONFERENCE_TYPES.POST_IMAGE_EVENT_CONFERENCE_SUCCESS,\n  payload: data,\n});\n\nexport const postEventConferenceImageFailure = (error) => ({\n  type: EVENT_CONFERENCE_TYPES.POST_IMAGE_EVENT_CONFERENCE_FAILURE,\n  payload: error,\n});\n\nexport const updateEventConferenceBegin = () => ({\n  type: EVENT_CONFERENCE_TYPES.UPDATE_EVENT_CONFERENCE_BEGIN,\n});\n\nexport const updateEventConferenceSuccess = (data) => ({\n  type: EVENT_CONFERENCE_TYPES.UPDATE_EVENT_CONFERENCE_SUCCESS,\n  payload: data,\n});\n\nexport const updateEventConferenceFailure = (error) => ({\n  type: EVENT_CONFERENCE_TYPES.UPDATE_EVENT_CONFERENCE_FAILURE,\n  payload: error,\n});\n","import axios from \"axios\";\nimport { BASE_URL } from \"../../services/constants\";\nimport { resetSnack, showSnack } from \"../actions/alertActions\";\nimport {\n  getEventConferenceListBegin,\n  getEventConferenceListFailure,\n  getEventConferenceListSuccess,\n  postEventConferenceBegin,\n  postEventConferenceFailure,\n  postEventConferenceImageBegin,\n  postEventConferenceImageFailure,\n  postEventConferenceImageSuccess,\n  postEventConferenceSuccess,\n  updateEventConferenceBegin,\n  updateEventConferenceFailure,\n  updateEventConferenceSuccess,\n} from \"../actions/eventConferenceActions\";\n\nexport function performGetEventConferenceList() {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(getEventConferenceListBegin());\n    try {\n      const result = await axios.get(`${BASE_URL}eventConference`);\n      dispatch(getEventConferenceListSuccess(result.data.docs.data));\n      dispatch(\n        showSnack({\n          message: \"Event Conference Retrieved Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(getEventConferenceListFailure());\n      return false;\n    }\n  };\n}\n\nexport function performGetEventConferenceById(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(getEventConferenceListBegin());\n    try {\n      const result = await axios.get(`${BASE_URL}eventConference/${data}`);\n      dispatch(getEventConferenceListSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: \"Event Conference Retrieved Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(getEventConferenceListFailure());\n      return false;\n    }\n  };\n}\n\nexport function performImagePostEventConference(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(postEventConferenceImageBegin());\n    try {\n      const result = await axios.post(\n        `${BASE_URL}eventConference/uploads`,\n        data\n      );\n      dispatch(postEventConferenceImageSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: \"Event Conference Image Add Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(postEventConferenceImageFailure());\n      return false;\n    }\n  };\n}\n\nexport function performPostEventConference(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(postEventConferenceBegin());\n    try {\n      const result = await axios.post(`${BASE_URL}eventConference`, data);\n      dispatch(postEventConferenceSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: \"Event Conference Add Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(postEventConferenceFailure());\n      return false;\n    }\n  };\n}\n\nexport function performUpdateEventConference(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(updateEventConferenceBegin());\n    try {\n      const id = data.id;\n      const result = await axios.put(`${BASE_URL}eventConference/${id}`, data);\n      dispatch(updateEventConferenceSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: \"Event Conference Update Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(updateEventConferenceFailure());\n      return false;\n    }\n  };\n}\n\nexport function performDeleteEventConference(id) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(updateEventConferenceBegin());\n    try {\n      await axios.delete(`${BASE_URL}eventConference/${id}`);\n      dispatch(updateEventConferenceSuccess());\n      dispatch(\n        showSnack({\n          message: \"Event Conference Delete Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return true;\n    } catch (error) {\n      dispatch(updateEventConferenceFailure());\n      return false;\n    }\n  };\n}\n","import WEBINAR_CONFERENCE_TYPES from \"../types/webinarConferenceTypes\";\n\nexport const resetState = () => ({\n  type: WEBINAR_CONFERENCE_TYPES.RESET_STATE,\n});\n\nexport const getWebinarConferenceListBegin = () => ({\n  type: WEBINAR_CONFERENCE_TYPES.GET_WEBINAR_CONFERENCE_LIST_BEGIN,\n});\n\nexport const getWebinarConferenceListSuccess = (data) => ({\n  type: WEBINAR_CONFERENCE_TYPES.GET_WEBINAR_CONFERENCE_LIST_SUCCESS,\n  payload: data,\n});\n\nexport const getWebinarConferenceListFailure = (error) => ({\n  type: WEBINAR_CONFERENCE_TYPES.GET_WEBINAR_CONFERENCE_LIST_FAILURE,\n  payload: error,\n});\n\nexport const postWebinarConferenceBegin = () => ({\n  type: WEBINAR_CONFERENCE_TYPES.POST_WEBINAR_CONFERENCE_BEGIN,\n});\n\nexport const postWebinarConferenceSuccess = (data) => ({\n  type: WEBINAR_CONFERENCE_TYPES.POST_WEBINAR_CONFERENCE_SUCCESS,\n  payload: data,\n});\n\nexport const postWebinarConferenceFailure = (error) => ({\n  type: WEBINAR_CONFERENCE_TYPES.POST_WEBINAR_CONFERENCE_FAILURE,\n  payload: error,\n});\n\nexport const postWebinarConferenceImageBegin = () => ({\n  type: WEBINAR_CONFERENCE_TYPES.POST_IMAGE_WEBINAR_CONFERENCE_BEGIN,\n});\n\nexport const postWebinarConferenceImageSuccess = (data) => ({\n  type: WEBINAR_CONFERENCE_TYPES.POST_IMAGE_WEBINAR_CONFERENCE_SUCCESS,\n  payload: data,\n});\n\nexport const postWebinarConferenceImageFailure = (error) => ({\n  type: WEBINAR_CONFERENCE_TYPES.POST_IMAGE_WEBINAR_CONFERENCE_FAILURE,\n  payload: error,\n});\n\nexport const updateWebinarConferenceBegin = () => ({\n  type: WEBINAR_CONFERENCE_TYPES.UPDATE_WEBINAR_CONFERENCE_BEGIN,\n});\n\nexport const updateWebinarConferenceSuccess = (data) => ({\n  type: WEBINAR_CONFERENCE_TYPES.UPDATE_WEBINAR_CONFERENCE_SUCCESS,\n  payload: data,\n});\n\nexport const updateWebinarConferenceFailure = (error) => ({\n  type: WEBINAR_CONFERENCE_TYPES.UPDATE_WEBINAR_CONFERENCE_FAILURE,\n  payload: error,\n});\n","import axios from \"axios\";\nimport { BASE_URL } from \"../../services/constants\";\nimport { resetSnack, showSnack } from \"../actions/alertActions\";\nimport {\n  getWebinarConferenceListBegin,\n  getWebinarConferenceListFailure,\n  getWebinarConferenceListSuccess,\n  postWebinarConferenceBegin,\n  postWebinarConferenceFailure,\n  postWebinarConferenceImageBegin,\n  postWebinarConferenceImageFailure,\n  postWebinarConferenceImageSuccess,\n  postWebinarConferenceSuccess,\n  updateWebinarConferenceBegin,\n  updateWebinarConferenceFailure,\n  updateWebinarConferenceSuccess,\n} from \"../actions/webinarConferenceActions\";\n\nexport function performGetWebinarConferenceList() {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(getWebinarConferenceListBegin());\n    try {\n      const result = await axios.get(`${BASE_URL}webinarConference`);\n      dispatch(getWebinarConferenceListSuccess(result.data.docs.data));\n      dispatch(\n        showSnack({\n          message: \"Webinar Conference Retrieved Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(getWebinarConferenceListFailure());\n      return false;\n    }\n  };\n}\n\nexport function performGetWebinarConferenceById(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(getWebinarConferenceListBegin());\n    try {\n      const result = await axios.get(`${BASE_URL}webinarConference/${data}`);\n      dispatch(getWebinarConferenceListSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: \"Webinar Conference Retrieved Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(getWebinarConferenceListFailure());\n      return false;\n    }\n  };\n}\n\nexport function performImagePostWebinarConference(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(postWebinarConferenceImageBegin());\n    try {\n      const result = await axios.post(\n        `${BASE_URL}webinarConference/uploads`,\n        data\n      );\n      dispatch(postWebinarConferenceImageSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: \"Webinar Conference Image Add Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(postWebinarConferenceImageFailure());\n      return false;\n    }\n  };\n}\n\nexport function performPostWebinarConference(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(postWebinarConferenceBegin());\n    try {\n      const result = await axios.post(`${BASE_URL}webinarConference`, data);\n      dispatch(postWebinarConferenceSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: \"Webinar Conference Add Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(postWebinarConferenceFailure());\n      return false;\n    }\n  };\n}\n\nexport function performUpdateWebinarConference(data) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(updateWebinarConferenceBegin());\n    try {\n      const id = data.id;\n      const result = await axios.put(\n        `${BASE_URL}webinarConference/${id}`,\n        data\n      );\n      dispatch(updateWebinarConferenceSuccess(result.data));\n      dispatch(\n        showSnack({\n          message: \"Webinar Conference Update Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return result;\n    } catch (error) {\n      dispatch(updateWebinarConferenceFailure());\n      return false;\n    }\n  };\n}\n\nexport function performDeleteWebinarConference(id) {\n  return async (dispatch) => {\n    dispatch(resetSnack());\n    dispatch(updateWebinarConferenceBegin());\n    try {\n      await axios.delete(`${BASE_URL}webinarConference/${id}`);\n      dispatch(updateWebinarConferenceSuccess());\n      dispatch(\n        showSnack({\n          message: \"Webinar Conference Delete Successfully\",\n          options: {\n            variant: \"success\",\n          },\n        })\n      );\n      return true;\n    } catch (error) {\n      dispatch(updateWebinarConferenceFailure());\n      return false;\n    }\n  };\n}\n","import moment from \"moment\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Avatar from \"react-avatar\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport ConfirmDialog from \"../../../components/ConfirmDialog\";\nimport DataTable from \"../../../components/DataTable\";\nimport DisplayText from \"../../../components/DisplayText\";\nimport DropdownMenu from \"../../../components/DropdownMenu\";\nimport IconButton from \"../../../components/IconButton\";\nimport useWindowSize from \"../../../hooks/UseWindowSize\";\nimport UseWindowUrl from \"../../../hooks/UseWindowUrl\";\nimport {\n  performDeleteEventConference,\n  performGetEventConferenceList,\n} from \"../../../redux/actionCreators/eventConferenceCreators\";\nimport { BACKEND_URL, FRONTEND_URL } from \"../../../services/constants\";\n\nconst ListEventConference = ({\n  fetching,\n  getList,\n  refresh,\n  deleteEventConference,\n  history,\n}) => {\n  const [data, setData] = useState([]);\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const fetchData = async () => {\n    const result = await getList();\n    if (result.status === 200) {\n      setData(result?.data?.docs?.data);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const isMobile = useWindowSize();\n  const handleClick = (tag) => {\n    UseWindowUrl(tag);\n  };\n\n  const handleOnConfirm = async () => {\n    const result = await deleteEventConference(deletingUser.current?._id);\n    if (result) {\n      fetchData();\n    }\n  };\n\n  const createRelativePath = (link) => {\n    const url = `${FRONTEND_URL}events/conference/${link\n      ?.toLowerCase()\n      ?.replace(/\\s+/g, \"-\")}`;\n    return url;\n  };\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body className={`${isMobile && \"p-0\"}`}>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() =>\n                history.push(`event/eventConference/addEventConference`)\n              }\n            >\n              Add Event Conference\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                width: 300,\n                title: \"Event Conference Title\",\n                field: \"eventConferenceTitle\",\n                customFilterAndSearch: (term, rowData) =>\n                  term === rowData.eventConferenceTitle,\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      <>\n                        {rowData.eventConferenceTitle\n                          ? rowData.eventConferenceTitle\n                          : \"N/A\"}\n                      </>\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Event Conference Link\",\n                field: \"eventConferenceLink\",\n                render: (rowData) => (\n                  <span\n                    style={{\n                      width: \"300px\",\n                    }}\n                  >\n                    {rowData.eventConferenceLink ? (\n                      <a\n                        href={`${FRONTEND_URL}events/conference/${rowData?.eventConferenceLink\n                          ?.toLowerCase()\n                          ?.replace(/\\s+/g, \"-\")}`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        {createRelativePath(rowData?.eventConferenceLink)}\n                      </a>\n                    ) : (\n                      \"N/A\"\n                    )}\n                  </span>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Event Conference Image\",\n                field: \"eventConferenceImage\",\n                render: (rowData) => (\n                  <>\n                    <Avatar\n                      src={BACKEND_URL + rowData?.eventConferenceImage}\n                      name={rowData?.eventConferenceTitle}\n                      size=\"70\"\n                      className=\"ff-primary rounded-circle me-3\"\n                    />\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Event Conference Tags\",\n                field: \"eventConferenceTags\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.eventConferenceTags\n                        ?.split(\",\")\n                        ?.map((tag, index) => (\n                          <div\n                            className=\"text-primary\"\n                            onClick={() => handleClick(tag)}\n                            key={index}\n                          >\n                            {tag}\n                          </div>\n                        ))}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \" Meta Title\",\n                field: \"metaTitle\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.metaTitle}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \" Meta Description\",\n                field: \"metaDescription\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.metaDescription}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                title: \"Event Conference Description\",\n                field: \"eventConferenceDescription\",\n                render: (rowData) => (\n                  <>\n                    <div\n                      style={{\n                        width: \"auto\",\n                        maxWidth: \"900px\",\n                        minWidth: \"400px\",\n                        height: \"300px\",\n                        overflow: \"scroll\",\n                      }}\n                    >\n                      <DisplayText\n                        htmlContent={rowData?.eventConferenceDescription}\n                      />\n                    </div>\n                  </>\n                ),\n              },\n              {\n                width: 500,\n                title: \"Date\",\n                field: \"createdAt\",\n                render: (rowData) => (\n                  <span\n                    style={{\n                      width: \"500px\",\n                    }}\n                  >\n                    {rowData.createdAt\n                      ? moment(rowData.createdAt).format(\"DD,MM, YYYY\")\n                      : \"N/A\"}\n                  </span>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Status\",\n                field: \"status\",\n                filtering: false,\n                render: (rowData) => {\n                  let statusColor = \"success\";\n                  let statusText = \"Published\";\n                  if (rowData.status === false) {\n                    statusColor = \"warning\";\n                    statusText = \"Draft\";\n                  }\n                  return (\n                    <span className={`text-${statusColor}`}>{statusText}</span>\n                  );\n                },\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `event/eventConference/${props.data.eventConferenceLink}/edit`,\n                          {\n                            data: props.data,\n                          }\n                        ),\n                    },\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-danger\">\n                          <MdDelete size={20} className=\"me-2\" /> Delete\n                        </span>\n                      ),\n                      onClick: () => {\n                        setShowCDialog(true);\n                        deletingUser.current = props.data;\n                      },\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            onRowClick={(_, rowData) => null}\n            loading={fetching}\n            data={data}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            refresh={refresh}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Event Conference\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.eventConferenceTitle}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.eventConference.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getList: (payload) => dispatch(performGetEventConferenceList(payload)),\n  deleteEventConference: (payload) =>\n    dispatch(performDeleteEventConference(payload)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListEventConference);\n","import moment from \"moment\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Avatar from \"react-avatar\";\nimport { Card } from \"react-bootstrap\";\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport ConfirmDialog from \"../../../components/ConfirmDialog\";\nimport DataTable from \"../../../components/DataTable\";\nimport DisplayText from \"../../../components/DisplayText\";\nimport DropdownMenu from \"../../../components/DropdownMenu\";\nimport IconButton from \"../../../components/IconButton\";\nimport useWindowSize from \"../../../hooks/UseWindowSize\";\nimport UseWindowUrl from \"../../../hooks/UseWindowUrl\";\nimport {\n  performDeleteWebinarConference,\n  performGetWebinarConferenceList,\n} from \"../../../redux/actionCreators/webinarConferenceCreators\";\nimport { BACKEND_URL, FRONTEND_URL } from \"../../../services/constants\";\n\nconst ListWebinarConference = ({\n  fetching,\n  getList,\n  refresh,\n  deleteAnnouncement,\n  history,\n}) => {\n  const [data, setData] = useState([]);\n  const [showCDialog, setShowCDialog] = useState(false);\n  const deletingUser = useRef(null);\n  const fetchData = async () => {\n    const result = await getList();\n    if (result.status === 200) {\n      setData(result?.data?.docs?.data);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const isMobile = useWindowSize();\n  const handleClick = (tag) => {\n    UseWindowUrl(tag);\n  };\n\n  const handleOnConfirm = async () => {\n    const result = await deleteAnnouncement(deletingUser.current?._id);\n    if (result) {\n      fetchData();\n    }\n  };\n\n  const createRelativePath = (link) => {\n    const url = `${FRONTEND_URL}events/webinar/${link\n      ?.toLowerCase()\n      ?.replace(/\\s+/g, \"-\")}`;\n    return url;\n  };\n  return (\n    <>\n      <Card\n        border=\"light\"\n        className=\"w-100 mx-auto pt-3 px-3 mb-5 position-relative\"\n      >\n        <Card.Body className={`${isMobile && \"p-0\"}`}>\n          <div\n            className={`${\n              isMobile ? \"my-3\" : \"my-2\"\n            } d-flex justify-content-end`}\n          >\n            <IconButton\n              variant=\"primary\"\n              icon={{ type: MdAdd }}\n              onClick={() =>\n                history.push(`event/webinarConference/addWebinarConference`)\n              }\n            >\n              Add Webinar Conference\n            </IconButton>\n          </div>\n          <DataTable\n            columns={[\n              {\n                width: 300,\n                title: \"Webinar Conference Title\",\n                field: \"webinarConferenceTitle\",\n                customFilterAndSearch: (term, rowData) =>\n                  term === rowData.webinarConferenceTitle,\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      <>\n                        {rowData.webinarConferenceTitle\n                          ? rowData.webinarConferenceTitle\n                          : \"N/A\"}\n                      </>\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Webinar Conference Link\",\n                field: \"webinarConferenceLink\",\n                render: (rowData) => (\n                  <span\n                    style={{\n                      width: \"300px\",\n                    }}\n                  >\n                    {rowData.webinarConferenceLink ? (\n                      <a\n                        href={`${FRONTEND_URL}events/webinar/${rowData?.webinarConferenceLink\n                          ?.toLowerCase()\n                          ?.replace(/\\s+/g, \"-\")}`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        {createRelativePath(rowData?.webinarConferenceLink)}\n                      </a>\n                    ) : (\n                      \"N/A\"\n                    )}\n                  </span>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Webinar Conference Image\",\n                field: \"webinarConferenceImage\",\n                render: (rowData) => (\n                  <>\n                    <Avatar\n                      src={BACKEND_URL + rowData?.webinarConferenceImage}\n                      name={rowData?.webinarConferenceTitle}\n                      size=\"70\"\n                      className=\"ff-primary rounded-circle me-3\"\n                    />\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Webinar Conference Tags\",\n                field: \"webinarConferenceTags\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.webinarConferenceTags\n                        ?.split(\",\")\n                        ?.map((tag, index) => (\n                          <div\n                            className=\"text-primary\"\n                            onClick={() => handleClick(tag)}\n                            key={index}\n                          >\n                            {tag}\n                          </div>\n                        ))}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \" Meta Title\",\n                field: \"metaTitle\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.metaTitle}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                width: 300,\n                title: \" Meta Description\",\n                field: \"metaDescription\",\n                render: (rowData) => (\n                  <>\n                    <span\n                      style={{\n                        width: \"300px\",\n                      }}\n                    >\n                      {rowData?.metaDescription}\n                    </span>\n                  </>\n                ),\n              },\n              {\n                title: \"Webinar Conference Description\",\n                field: \"webinarConferenceDescription\",\n                render: (rowData) => (\n                  <>\n                    <div\n                      style={{\n                        width: \"auto\",\n                        maxWidth: \"900px\",\n                        minWidth: \"400px\",\n                        height: \"300px\",\n                        overflow: \"scroll\",\n                      }}\n                    >\n                      <DisplayText\n                        htmlContent={rowData?.webinarConferenceDescription}\n                      />\n                    </div>\n                  </>\n                ),\n              },\n              {\n                width: 500,\n                title: \"Date\",\n                field: \"createdAt\",\n                render: (rowData) => (\n                  <span\n                    style={{\n                      width: \"500px\",\n                    }}\n                  >\n                    {rowData.createdAt\n                      ? moment(rowData.createdAt).format(\"DD,MM, YYYY\")\n                      : \"N/A\"}\n                  </span>\n                ),\n              },\n              {\n                width: 300,\n                title: \"Status\",\n                field: \"status\",\n                filtering: false,\n                render: (rowData) => {\n                  let statusColor = \"success\";\n                  let statusText = \"Published\";\n                  if (rowData.status === false) {\n                    statusColor = \"warning\";\n                    statusText = \"Draft\";\n                  }\n                  return (\n                    <span className={`text-${statusColor}`}>{statusText}</span>\n                  );\n                },\n              },\n            ]}\n            actions={[\n              {\n                onClick: (_, rowData) => console.log(rowData),\n              },\n            ]}\n            components={{\n              Action: (props) => (\n                <DropdownMenu\n                  menu={[\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-secondary\">\n                          <MdEdit size={20} className=\"me-2\" /> Edit\n                        </span>\n                      ),\n                      onClick: () =>\n                        history.push(\n                          `event/webinarConference/${props.data.webinarConferenceLink}/edit`,\n                          {\n                            data: props.data,\n                          }\n                        ),\n                    },\n                    {\n                      label: (\n                        <span className=\"d-flex align-items-center text-danger\">\n                          <MdDelete size={20} className=\"me-2\" /> Delete\n                        </span>\n                      ),\n                      onClick: () => {\n                        setShowCDialog(true);\n                        deletingUser.current = props.data;\n                      },\n                    },\n                  ]}\n                  iconSize=\"large\"\n                />\n              ),\n            }}\n            onRowClick={(_, rowData) => null}\n            loading={fetching}\n            data={data}\n            search={false}\n            downloadcsv={true}\n            downloadExcel={true}\n            filters={true}\n            resetBtn={false}\n            refresh={refresh}\n          />\n        </Card.Body>\n      </Card>\n      <ConfirmDialog\n        show={showCDialog}\n        setShow={setShowCDialog}\n        title=\"Delete Webinar Conference\"\n        message={`Are you sure, you want to delete <b>${deletingUser.current?.webinarConferenceTitle}</b>?`}\n        onConfirm={handleOnConfirm}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetching: state.webinarConference.fetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getList: (payload) => dispatch(performGetWebinarConferenceList(payload)),\n  deleteAnnouncement: (payload) =>\n    dispatch(performDeleteWebinarConference(payload)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListWebinarConference);\n"],"sourceRoot":""}